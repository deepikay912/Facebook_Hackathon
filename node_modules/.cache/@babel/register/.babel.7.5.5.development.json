{
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/app.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.server = exports.app = void 0;\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _serveFavicon = _interopRequireDefault(require(\"serve-favicon\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\n\nvar _http = require(\"http\");\n\nvar _threadSetup = _interopRequireDefault(require(\"./messenger-api-helpers/thread-setup\"));\n\nvar _index = _interopRequireDefault(require(\"./routes/index\"));\n\nvar _lists = _interopRequireDefault(require(\"./routes/lists\"));\n\nvar _webhooks = _interopRequireDefault(require(\"./routes/webhooks\"));\n\nvar _sockets = _interopRequireDefault(require(\"./sockets\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// ===== MODULES ===============================================================\n// ===== MESSENGER =============================================================\n// ===== ROUTES ================================================================\n// ===== SOCKETS ===============================================================\n\n/* =============================================\n   =                Initialize                 =\n   ============================================= */\nvar app = (0, _express[\"default\"])();\nexports.app = app;\nvar appPort = process.env.PORT;\nvar demo = process.env.DEMO || false;\n\nif (demo) {\n  console.log('====> RUNNING IN DEMO MODE');\n}\n/* =============================================\n   =           Basic Configuration             =\n   ============================================= */\n\n/* ----------  Views  ---------- */\n\n\napp.set('view engine', 'ejs');\n/* ----------  Static Assets  ---------- */\n\napp.use((0, _serveFavicon[\"default\"])(_path[\"default\"].join(__dirname, 'public', 'favicon.ico'))); // eslint-disable-line\n\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, 'public'))); // eslint-disable-line\n\n/* ----------  Parsers  ---------- */\n\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\napp.use((0, _cookieParser[\"default\"])());\n/* ----------  Loggers &c  ---------- */\n\napp.use((0, _morgan[\"default\"])('dev'));\n/* =============================================\n   =                   Sockets                 =\n   ============================================= */\n\n/* ----------  Sockets  ---------- */\n// Sockets\n\nvar server = (0, _http.Server)(app);\nexports.server = server;\nvar io = new _socket[\"default\"](server, {\n  pingInterval: 2000,\n  pingTimeout: 5000\n});\n(0, _sockets[\"default\"])(io);\n/* ----------  Sockets Hooks  ---------- */\n\napp.use(function (req, res, next) {\n  res.io = io;\n  next();\n});\n/* =============================================\n   =                   Routes                  =\n   ============================================= */\n\n/* ----------  Primary / Happy Path  ---------- */\n\napp.use('/', _index[\"default\"]);\napp.use('/lists', _lists[\"default\"]);\napp.use('/webhook', _webhooks[\"default\"]);\n/* ----------  Errors  ---------- */\n// catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\napp.use(function (err, req, res) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.render('error');\n});\n/**\n * development error handler\n * will print stacktrace\n */\n\nif (app.get('env') === 'development') {\n  app.use(function (err, req, res) {\n    res.status(err.status || 500);\n    new Error(err); // eslint-disable-line no-new\n  });\n}\n/**\n * production error handler\n * no stacktraces leaked to user\n */\n\n\napp.use(function (err, req, res) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n/* =============================================\n   =              Messenger Setup              =\n   ============================================= */\n\n_threadSetup[\"default\"].domainWhitelisting();\n\n_threadSetup[\"default\"].persistentMenu();\n\n_threadSetup[\"default\"].getStartedButton();\n/* =============================================\n   =            Complete Configuration         =\n   ============================================= */\n\n\nserver.listen(appPort);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "appPort",
        "process",
        "env",
        "PORT",
        "demo",
        "DEMO",
        "console",
        "log",
        "set",
        "use",
        "path",
        "join",
        "__dirname",
        "express",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "server",
        "io",
        "SocketServer",
        "pingInterval",
        "pingTimeout",
        "req",
        "res",
        "next",
        "index",
        "lists",
        "webhooks",
        "err",
        "Error",
        "status",
        "locals",
        "message",
        "error",
        "get",
        "render",
        "ThreadSetup",
        "domainWhitelisting",
        "persistentMenu",
        "getStartedButton",
        "listen"
      ],
      "mappings": ";;;;;;;AAQA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AAGA;;AACA;;AACA;;AAGA;;;;AA1BA;;;;;;AAOA;AAUA;AAGA;AAKA;;AAGA;;;AAIO,IAAMA,GAAG,GAAG,0BAAZ;;AACP,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAA5B;AACA,IAAMC,IAAI,GAAGH,OAAO,CAACC,GAAR,CAAYG,IAAZ,IAAoB,KAAjC;;AAEA,IAAID,IAAJ,EAAU;AAAEE,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAA4C;AAExD;;;;AAIA;;;AAEAR,GAAG,CAACS,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AAEA;;AAEAT,GAAG,CAACU,GAAJ,CAAQ,8BAAQC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,aAA/B,CAAR,CAAR,E,CAAiE;;AACjEb,GAAG,CAACU,GAAJ,CAAQI,8BAAeH,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR,E,CAAyD;;AAEzD;;AAEAb,GAAG,CAACU,GAAJ,CAAQK,uBAAWC,IAAX,EAAR;AACAhB,GAAG,CAACU,GAAJ,CAAQK,uBAAWE,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAtB,CAAR;AACAlB,GAAG,CAACU,GAAJ,CAAQ,+BAAR;AAEA;;AAEAV,GAAG,CAACU,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AAEA;;;;AAIA;AAEA;;AACO,IAAMS,MAAM,GAAG,kBAAOnB,GAAP,CAAf;;AACP,IAAMoB,EAAE,GAAG,IAAIC,kBAAJ,CAAiBF,MAAjB,EAAyB;AAACG,EAAAA,YAAY,EAAE,IAAf;AAAqBC,EAAAA,WAAW,EAAE;AAAlC,CAAzB,CAAX;AAEA,yBAAcH,EAAd;AAEA;;AAEApB,GAAG,CAACU,GAAJ,CAAQ,UAASc,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BD,EAAAA,GAAG,CAACL,EAAJ,GAASA,EAAT;AACAM,EAAAA,IAAI;AACL,CAHD;AAKA;;;;AAIA;;AAEA1B,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAaiB,iBAAb;AACA3B,GAAG,CAACU,GAAJ,CAAQ,QAAR,EAAkBkB,iBAAlB;AACA5B,GAAG,CAACU,GAAJ,CAAQ,UAAR,EAAoBmB,oBAApB;AAEA;AAEA;;AACA7B,GAAG,CAACU,GAAJ,CAAQ,UAACc,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAMI,GAAG,GAAG,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,EAAAA,GAAG,CAACE,MAAJ,GAAa,GAAb;AACAN,EAAAA,IAAI,CAACI,GAAD,CAAJ;AACD,CAJD;AAMA9B,GAAG,CAACU,GAAJ,CAAQ,UAACoB,GAAD,EAAMN,GAAN,EAAWC,GAAX,EAAmB;AACzB;AACAA,EAAAA,GAAG,CAACQ,MAAJ,CAAWC,OAAX,GAAqBJ,GAAG,CAACI,OAAzB;AACAT,EAAAA,GAAG,CAACQ,MAAJ,CAAWE,KAAX,GAAmBX,GAAG,CAACxB,GAAJ,CAAQoC,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE,CAHyB,CAKzB;;AACAL,EAAAA,GAAG,CAACO,MAAJ,CAAWF,GAAG,CAACE,MAAJ,IAAc,GAAzB;AACAP,EAAAA,GAAG,CAACY,MAAJ,CAAW,OAAX;AACD,CARD;AAUA;;;;;AAIA,IAAIrC,GAAG,CAACoC,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACpCpC,EAAAA,GAAG,CAACU,GAAJ,CAAQ,UAACoB,GAAD,EAAMN,GAAN,EAAWC,GAAX,EAAmB;AACzBA,IAAAA,GAAG,CAACO,MAAJ,CAAWF,GAAG,CAACE,MAAJ,IAAc,GAAzB;AACA,QAAID,KAAJ,CAAUD,GAAV,EAFyB,CAET;AACjB,GAHD;AAID;AAED;;;;;;AAIA9B,GAAG,CAACU,GAAJ,CAAQ,UAACoB,GAAD,EAAMN,GAAN,EAAWC,GAAX,EAAmB;AACzBA,EAAAA,GAAG,CAACO,MAAJ,CAAWF,GAAG,CAACE,MAAJ,IAAc,GAAzB;AACAP,EAAAA,GAAG,CAACY,MAAJ,CAAW,OAAX,EAAoB;AAClBH,IAAAA,OAAO,EAAEJ,GAAG,CAACI,OADK;AAElBC,IAAAA,KAAK,EAAE;AAFW,GAApB;AAID,CAND;AAQA;;;;AAIAG,wBAAYC,kBAAZ;;AACAD,wBAAYE,cAAZ;;AACAF,wBAAYG,gBAAZ;AAEA;;;;;AAIAtB,MAAM,CAACuB,MAAP,CAAczC,OAAd;eAEeD,G",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== MODULES ===============================================================\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport express from 'express';\nimport favicon from 'serve-favicon';\nimport logger from 'morgan';\nimport path from 'path';\nimport SocketServer from 'socket.io';\nimport {Server} from 'http';\n\n// ===== MESSENGER =============================================================\nimport ThreadSetup from './messenger-api-helpers/thread-setup';\n\n// ===== ROUTES ================================================================\nimport index from './routes/index';\nimport lists from './routes/lists';\nimport webhooks from './routes/webhooks';\n\n// ===== SOCKETS ===============================================================\nimport attachSockets from './sockets';\n\n/* =============================================\n   =                Initialize                 =\n   ============================================= */\n\nexport const app = express();\nconst appPort = process.env.PORT;\nconst demo = process.env.DEMO || false;\n\nif (demo) { console.log('====> RUNNING IN DEMO MODE'); }\n\n/* =============================================\n   =           Basic Configuration             =\n   ============================================= */\n\n/* ----------  Views  ---------- */\n\napp.set('view engine', 'ejs');\n\n/* ----------  Static Assets  ---------- */\n\napp.use(favicon(path.join(__dirname, 'public', 'favicon.ico'))); // eslint-disable-line\napp.use(express.static(path.join(__dirname, 'public'))); // eslint-disable-line\n\n/* ----------  Parsers  ---------- */\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(cookieParser());\n\n/* ----------  Loggers &c  ---------- */\n\napp.use(logger('dev'));\n\n/* =============================================\n   =                   Sockets                 =\n   ============================================= */\n\n/* ----------  Sockets  ---------- */\n\n// Sockets\nexport const server = Server(app);\nconst io = new SocketServer(server, {pingInterval: 2000, pingTimeout: 5000});\n\nattachSockets(io);\n\n/* ----------  Sockets Hooks  ---------- */\n\napp.use(function(req, res, next) {\n  res.io = io;\n  next();\n});\n\n/* =============================================\n   =                   Routes                  =\n   ============================================= */\n\n/* ----------  Primary / Happy Path  ---------- */\n\napp.use('/', index);\napp.use('/lists', lists);\napp.use('/webhook', webhooks);\n\n/* ----------  Errors  ---------- */\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n  const err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\napp.use((err, req, res) => {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n/**\n * development error handler\n * will print stacktrace\n */\nif (app.get('env') === 'development') {\n  app.use((err, req, res) => {\n    res.status(err.status || 500);\n    new Error(err); // eslint-disable-line no-new\n  });\n}\n\n/**\n * production error handler\n * no stacktraces leaked to user\n */\napp.use((err, req, res) => {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {},\n  });\n});\n\n/* =============================================\n   =              Messenger Setup              =\n   ============================================= */\n\nThreadSetup.domainWhitelisting();\nThreadSetup.persistentMenu();\nThreadSetup.getStartedButton();\n\n/* =============================================\n   =            Complete Configuration         =\n   ============================================= */\n\nserver.listen(appPort);\n\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/thread-setup.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/thread-setup.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/thread-setup.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/thread-setup.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
        "sourceFileName": "thread-setup.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _api = _interopRequireDefault(require(\"./api\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable camelcase */\n// ===== MESSENGER =============================================================\n\n/* ----------  Globals  ---------- */\nvar APP_URL = process.env.APP_URL;\n/* ----------  Functions  ---------- */\n\n/**\n * Adds the server url to the Messenger App's whitelist.\n *\n * This is required to use Messenger Extensions which\n * this demo uses to get UserId's from a Messenger WebView.\n *\n * @returns {undefined}\n */\n\nvar domainWhitelisting = function domainWhitelisting() {\n  _api[\"default\"].callMessengerProfileAPI({\n    whitelisted_domains: [APP_URL]\n  });\n};\n/**\n * Sets the persistent menu for the application\n *\n * @returns {undefined}\n */\n\n\nvar persistentMenu = function persistentMenu() {\n  _api[\"default\"].callMessengerProfileAPI({\n    persistent_menu: [{\n      locale: 'default',\n      composer_input_disabled: true,\n      call_to_actions: [{\n        type: 'web_url',\n        title: 'Create List',\n        url: \"\".concat(APP_URL, \"/lists/new\"),\n        webview_height_ratio: 'tall',\n        messenger_extensions: true\n      }, {\n        type: 'postback',\n        title: 'My Lists',\n        payload: 'owned_lists'\n      }, {\n        type: 'postback',\n        title: 'Shared With Me',\n        payload: 'subscribed_lists'\n      }]\n    }]\n  });\n};\n/**\n * Sets the Get Started button for the application\n *\n * @returns {undefined}\n */\n\n\nvar getStartedButton = function getStartedButton() {\n  _api[\"default\"].callMessengerProfileAPI({\n    get_started: {\n      payload: 'get_started'\n    }\n  });\n};\n\nvar _default = {\n  domainWhitelisting: domainWhitelisting,\n  persistentMenu: persistentMenu,\n  getStartedButton: getStartedButton\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRocmVhZC1zZXR1cC5qcyJdLCJuYW1lcyI6WyJBUFBfVVJMIiwicHJvY2VzcyIsImVudiIsImRvbWFpbldoaXRlbGlzdGluZyIsImFwaSIsImNhbGxNZXNzZW5nZXJQcm9maWxlQVBJIiwid2hpdGVsaXN0ZWRfZG9tYWlucyIsInBlcnNpc3RlbnRNZW51IiwicGVyc2lzdGVudF9tZW51IiwibG9jYWxlIiwiY29tcG9zZXJfaW5wdXRfZGlzYWJsZWQiLCJjYWxsX3RvX2FjdGlvbnMiLCJ0eXBlIiwidGl0bGUiLCJ1cmwiLCJ3ZWJ2aWV3X2hlaWdodF9yYXRpbyIsIm1lc3Nlbmdlcl9leHRlbnNpb25zIiwicGF5bG9hZCIsImdldFN0YXJ0ZWRCdXR0b24iLCJnZXRfc3RhcnRlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVVBOzs7O0FBVkE7Ozs7Ozs7QUFPQTtBQUVBOztBQUdBO0lBQ09BLE8sR0FBV0MsT0FBTyxDQUFDQyxHLENBQW5CRixPO0FBRVA7O0FBRUE7Ozs7Ozs7OztBQVFBLElBQU1HLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBcUIsR0FBTTtBQUMvQkMsa0JBQUlDLHVCQUFKLENBQ0U7QUFDRUMsSUFBQUEsbUJBQW1CLEVBQUUsQ0FBQ04sT0FBRDtBQUR2QixHQURGO0FBS0QsQ0FORDtBQVFBOzs7Ozs7O0FBS0EsSUFBTU8sY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixHQUFNO0FBQzNCSCxrQkFBSUMsdUJBQUosQ0FDRTtBQUNFRyxJQUFBQSxlQUFlLEVBQUUsQ0FDZjtBQUNFQyxNQUFBQSxNQUFNLEVBQUUsU0FEVjtBQUVFQyxNQUFBQSx1QkFBdUIsRUFBRSxJQUYzQjtBQUdFQyxNQUFBQSxlQUFlLEVBQUUsQ0FDZjtBQUNFQyxRQUFBQSxJQUFJLEVBQUUsU0FEUjtBQUVFQyxRQUFBQSxLQUFLLEVBQUUsYUFGVDtBQUdFQyxRQUFBQSxHQUFHLFlBQUtkLE9BQUwsZUFITDtBQUlFZSxRQUFBQSxvQkFBb0IsRUFBRSxNQUp4QjtBQUtFQyxRQUFBQSxvQkFBb0IsRUFBRTtBQUx4QixPQURlLEVBUWY7QUFDRUosUUFBQUEsSUFBSSxFQUFFLFVBRFI7QUFFRUMsUUFBQUEsS0FBSyxFQUFFLFVBRlQ7QUFHRUksUUFBQUEsT0FBTyxFQUFFO0FBSFgsT0FSZSxFQWFmO0FBQ0VMLFFBQUFBLElBQUksRUFBRSxVQURSO0FBRUVDLFFBQUFBLEtBQUssRUFBRSxnQkFGVDtBQUdFSSxRQUFBQSxPQUFPLEVBQUU7QUFIWCxPQWJlO0FBSG5CLEtBRGU7QUFEbkIsR0FERjtBQTZCRCxDQTlCRDtBQWdDQTs7Ozs7OztBQUtBLElBQU1DLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsR0FBTTtBQUM3QmQsa0JBQUlDLHVCQUFKLENBQ0U7QUFDRWMsSUFBQUEsV0FBVyxFQUFFO0FBQ1hGLE1BQUFBLE9BQU8sRUFBRTtBQURFO0FBRGYsR0FERjtBQU9ELENBUkQ7O2VBVWU7QUFDYmQsRUFBQUEsa0JBQWtCLEVBQWxCQSxrQkFEYTtBQUViSSxFQUFBQSxjQUFjLEVBQWRBLGNBRmE7QUFHYlcsRUFBQUEsZ0JBQWdCLEVBQWhCQTtBQUhhLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2RlZXBpa2EvRG9jdW1lbnRzL0dpdEh1Yi9mYWNlYm9va0hhY2thdGhvbi9jaGF0LWV4dGVuc2lvbnMvbWVzc2VuZ2VyLWFwaS1oZWxwZXJzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG5cbi8vID09PT09IE1FU1NFTkdFUiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQgYXBpIGZyb20gJy4vYXBpJztcblxuLyogLS0tLS0tLS0tLSAgR2xvYmFscyAgLS0tLS0tLS0tLSAqL1xuY29uc3Qge0FQUF9VUkx9ID0gcHJvY2Vzcy5lbnY7XG5cbi8qIC0tLS0tLS0tLS0gIEZ1bmN0aW9ucyAgLS0tLS0tLS0tLSAqL1xuXG4vKipcbiAqIEFkZHMgdGhlIHNlcnZlciB1cmwgdG8gdGhlIE1lc3NlbmdlciBBcHAncyB3aGl0ZWxpc3QuXG4gKlxuICogVGhpcyBpcyByZXF1aXJlZCB0byB1c2UgTWVzc2VuZ2VyIEV4dGVuc2lvbnMgd2hpY2hcbiAqIHRoaXMgZGVtbyB1c2VzIHRvIGdldCBVc2VySWQncyBmcm9tIGEgTWVzc2VuZ2VyIFdlYlZpZXcuXG4gKlxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuY29uc3QgZG9tYWluV2hpdGVsaXN0aW5nID0gKCkgPT4ge1xuICBhcGkuY2FsbE1lc3NlbmdlclByb2ZpbGVBUEkoXG4gICAge1xuICAgICAgd2hpdGVsaXN0ZWRfZG9tYWluczogW0FQUF9VUkxdLFxuICAgIH1cbiAgKTtcbn07XG5cbi8qKlxuICogU2V0cyB0aGUgcGVyc2lzdGVudCBtZW51IGZvciB0aGUgYXBwbGljYXRpb25cbiAqXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICovXG5jb25zdCBwZXJzaXN0ZW50TWVudSA9ICgpID0+IHtcbiAgYXBpLmNhbGxNZXNzZW5nZXJQcm9maWxlQVBJKFxuICAgIHtcbiAgICAgIHBlcnNpc3RlbnRfbWVudTogW1xuICAgICAgICB7XG4gICAgICAgICAgbG9jYWxlOiAnZGVmYXVsdCcsXG4gICAgICAgICAgY29tcG9zZXJfaW5wdXRfZGlzYWJsZWQ6IHRydWUsXG4gICAgICAgICAgY2FsbF90b19hY3Rpb25zOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHR5cGU6ICd3ZWJfdXJsJyxcbiAgICAgICAgICAgICAgdGl0bGU6ICdDcmVhdGUgTGlzdCcsXG4gICAgICAgICAgICAgIHVybDogYCR7QVBQX1VSTH0vbGlzdHMvbmV3YCxcbiAgICAgICAgICAgICAgd2Vidmlld19oZWlnaHRfcmF0aW86ICd0YWxsJyxcbiAgICAgICAgICAgICAgbWVzc2VuZ2VyX2V4dGVuc2lvbnM6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB0eXBlOiAncG9zdGJhY2snLFxuICAgICAgICAgICAgICB0aXRsZTogJ015IExpc3RzJyxcbiAgICAgICAgICAgICAgcGF5bG9hZDogJ293bmVkX2xpc3RzJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHR5cGU6ICdwb3N0YmFjaycsXG4gICAgICAgICAgICAgIHRpdGxlOiAnU2hhcmVkIFdpdGggTWUnLFxuICAgICAgICAgICAgICBwYXlsb2FkOiAnc3Vic2NyaWJlZF9saXN0cycsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH1cbiAgKTtcbn07XG5cbi8qKlxuICogU2V0cyB0aGUgR2V0IFN0YXJ0ZWQgYnV0dG9uIGZvciB0aGUgYXBwbGljYXRpb25cbiAqXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICovXG5jb25zdCBnZXRTdGFydGVkQnV0dG9uID0gKCkgPT4ge1xuICBhcGkuY2FsbE1lc3NlbmdlclByb2ZpbGVBUEkoXG4gICAge1xuICAgICAgZ2V0X3N0YXJ0ZWQ6IHtcbiAgICAgICAgcGF5bG9hZDogJ2dldF9zdGFydGVkJyxcbiAgICAgIH0sXG4gICAgfVxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBkb21haW5XaGl0ZWxpc3RpbmcsXG4gIHBlcnNpc3RlbnRNZW51LFxuICBnZXRTdGFydGVkQnV0dG9uLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "thread-setup.js"
      ],
      "names": [
        "APP_URL",
        "process",
        "env",
        "domainWhitelisting",
        "api",
        "callMessengerProfileAPI",
        "whitelisted_domains",
        "persistentMenu",
        "persistent_menu",
        "locale",
        "composer_input_disabled",
        "call_to_actions",
        "type",
        "title",
        "url",
        "webview_height_ratio",
        "messenger_extensions",
        "payload",
        "getStartedButton",
        "get_started"
      ],
      "mappings": ";;;;;;;AAUA;;;;AAVA;;;;;;;AAOA;AAEA;;AAGA;IACOA,O,GAAWC,OAAO,CAACC,G,CAAnBF,O;AAEP;;AAEA;;;;;;;;;AAQA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BC,kBAAIC,uBAAJ,CACE;AACEC,IAAAA,mBAAmB,EAAE,CAACN,OAAD;AADvB,GADF;AAKD,CAND;AAQA;;;;;;;AAKA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BH,kBAAIC,uBAAJ,CACE;AACEG,IAAAA,eAAe,EAAE,CACf;AACEC,MAAAA,MAAM,EAAE,SADV;AAEEC,MAAAA,uBAAuB,EAAE,IAF3B;AAGEC,MAAAA,eAAe,EAAE,CACf;AACEC,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,KAAK,EAAE,aAFT;AAGEC,QAAAA,GAAG,YAAKd,OAAL,eAHL;AAIEe,QAAAA,oBAAoB,EAAE,MAJxB;AAKEC,QAAAA,oBAAoB,EAAE;AALxB,OADe,EAQf;AACEJ,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,KAAK,EAAE,UAFT;AAGEI,QAAAA,OAAO,EAAE;AAHX,OARe,EAaf;AACEL,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,KAAK,EAAE,gBAFT;AAGEI,QAAAA,OAAO,EAAE;AAHX,OAbe;AAHnB,KADe;AADnB,GADF;AA6BD,CA9BD;AAgCA;;;;;;;AAKA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7Bd,kBAAIC,uBAAJ,CACE;AACEc,IAAAA,WAAW,EAAE;AACXF,MAAAA,OAAO,EAAE;AADE;AADf,GADF;AAOD,CARD;;eAUe;AACbd,EAAAA,kBAAkB,EAAlBA,kBADa;AAEbI,EAAAA,cAAc,EAAdA,cAFa;AAGbW,EAAAA,gBAAgB,EAAhBA;AAHa,C",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable camelcase */\n\n// ===== MESSENGER =============================================================\nimport api from './api';\n\n/* ----------  Globals  ---------- */\nconst {APP_URL} = process.env;\n\n/* ----------  Functions  ---------- */\n\n/**\n * Adds the server url to the Messenger App's whitelist.\n *\n * This is required to use Messenger Extensions which\n * this demo uses to get UserId's from a Messenger WebView.\n *\n * @returns {undefined}\n */\nconst domainWhitelisting = () => {\n  api.callMessengerProfileAPI(\n    {\n      whitelisted_domains: [APP_URL],\n    }\n  );\n};\n\n/**\n * Sets the persistent menu for the application\n *\n * @returns {undefined}\n */\nconst persistentMenu = () => {\n  api.callMessengerProfileAPI(\n    {\n      persistent_menu: [\n        {\n          locale: 'default',\n          composer_input_disabled: true,\n          call_to_actions: [\n            {\n              type: 'web_url',\n              title: 'Create List',\n              url: `${APP_URL}/lists/new`,\n              webview_height_ratio: 'tall',\n              messenger_extensions: true,\n            },\n            {\n              type: 'postback',\n              title: 'My Lists',\n              payload: 'owned_lists',\n            },\n            {\n              type: 'postback',\n              title: 'Shared With Me',\n              payload: 'subscribed_lists',\n            },\n          ],\n        },\n      ],\n    }\n  );\n};\n\n/**\n * Sets the Get Started button for the application\n *\n * @returns {undefined}\n */\nconst getStartedButton = () => {\n  api.callMessengerProfileAPI(\n    {\n      get_started: {\n        payload: 'get_started',\n      },\n    }\n  );\n};\n\nexport default {\n  domainWhitelisting,\n  persistentMenu,\n  getStartedButton,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/api.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/api.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/api.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _castArray3 = _interopRequireDefault(require(\"lodash/castArray\"));\n\nvar _isEmpty = _interopRequireDefault(require(\"lodash/isEmpty\"));\n\nvar _request = _interopRequireDefault(require(\"request\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar PAGE_ACCESS_TOKEN = process.env.PAGE_ACCESS_TOKEN;\n/**\n * Send messages in order to the Facebook graph API.\n *\n * @param {String}          endPoint - Specific endpoint to send data to\n * @param {Object|Object[]} messageDataArray Payloads to send individually\n * @param {Object}          queryParams - Query Parameters\n * @param {Object}          retries - # of times to attempt to send a message.\n * @returns {undefined}\n */\n\nvar callAPI = function callAPI(endPoint, messageDataArray) {\n  var queryParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var retries = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n\n  // Error if developer forgot to specify an endpoint to send our request to\n  if (!endPoint) {\n    console.error('callAPI requires you to specify an endpoint.');\n    return;\n  }\n\n  if (!PAGE_ACCESS_TOKEN) {\n    console.error('callAPI requires you to specify a page access token.');\n    return;\n  } // Error if we've run out of retries.\n\n\n  if (retries < 0) {\n    console.error('No more retries left.', {\n      endPoint: endPoint,\n      messageDataArray: messageDataArray,\n      queryParams: queryParams\n    });\n    return;\n  } // ensure query parameters have a PAGE_ACCESS_TOKEN value\n\n  /* eslint-disable camelcase */\n\n\n  var query = Object.assign({\n    access_token: PAGE_ACCESS_TOKEN\n  }, queryParams);\n  /* eslint-enable camelcase */\n  // ready the first message in the array for send.\n\n  var _castArray = (0, _castArray3[\"default\"])(messageDataArray),\n      _castArray2 = _toArray(_castArray),\n      messageToSend = _castArray2[0],\n      queue = _castArray2.slice(1);\n\n  (0, _request[\"default\"])({\n    uri: \"https://graph.facebook.com/v3.2/me/\".concat(endPoint),\n    qs: query,\n    method: 'POST',\n    json: messageToSend\n  }, function (error, response, body) {\n    if (!error && response.statusCode === 200) {\n      // Message has been successfully received by Facebook\n      console.log(\"Successfully sent message to \".concat(endPoint, \" endpoint: \"), JSON.stringify(body)); // continue sending payloads until queue empty\n\n      if (!(0, _isEmpty[\"default\"])(queue)) {\n        callAPI(endPoint, queue, queryParams);\n      }\n    } else {\n      // Message has not been successfully received by Facebook\n      console.error(\"Failed calling Messenger API endpoint \".concat(endPoint), response.statusCode, response.statusMessage, body.error, queryParams); // Retry the request\n\n      console.error(\"Retrying Request: \".concat(retries, \" left\"));\n      callAPI(endPoint, messageDataArray, queryParams, retries - 1);\n    }\n  });\n};\n\nvar callMessagesAPI = function callMessagesAPI(messageDataArray) {\n  var queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return callAPI('messages', messageDataArray, queryParams);\n};\n\nvar callMessengerProfileAPI = function callMessengerProfileAPI(messageDataArray) {\n  var queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return callAPI('messenger_profile', messageDataArray, queryParams);\n};\n\nvar _default = {\n  callMessagesAPI: callMessagesAPI,\n  callMessengerProfileAPI: callMessengerProfileAPI\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJQQUdFX0FDQ0VTU19UT0tFTiIsInByb2Nlc3MiLCJlbnYiLCJjYWxsQVBJIiwiZW5kUG9pbnQiLCJtZXNzYWdlRGF0YUFycmF5IiwicXVlcnlQYXJhbXMiLCJyZXRyaWVzIiwiY29uc29sZSIsImVycm9yIiwicXVlcnkiLCJPYmplY3QiLCJhc3NpZ24iLCJhY2Nlc3NfdG9rZW4iLCJtZXNzYWdlVG9TZW5kIiwicXVldWUiLCJ1cmkiLCJxcyIsIm1ldGhvZCIsImpzb24iLCJyZXNwb25zZSIsImJvZHkiLCJzdGF0dXNDb2RlIiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsInN0YXR1c01lc3NhZ2UiLCJjYWxsTWVzc2FnZXNBUEkiLCJjYWxsTWVzc2VuZ2VyUHJvZmlsZUFQSSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVFBOztBQUNBOztBQUdBOzs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxpQkFBaUIsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLGlCQUF0QztBQUVBOzs7Ozs7Ozs7O0FBU0EsSUFBTUcsT0FBTyxHQUFHLFNBQVZBLE9BQVUsQ0FBQ0MsUUFBRCxFQUFXQyxnQkFBWCxFQUErRDtBQUFBLE1BQWxDQyxXQUFrQyx1RUFBcEIsRUFBb0I7QUFBQSxNQUFoQkMsT0FBZ0IsdUVBQU4sQ0FBTTs7QUFDN0U7QUFDQSxNQUFJLENBQUNILFFBQUwsRUFBZTtBQUNiSSxJQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBYyw4Q0FBZDtBQUNBO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDVCxpQkFBTCxFQUF3QjtBQUN0QlEsSUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWMsc0RBQWQ7QUFDQTtBQUNELEdBVjRFLENBWTdFOzs7QUFDQSxNQUFJRixPQUFPLEdBQUcsQ0FBZCxFQUFpQjtBQUNmQyxJQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FDRSx1QkFERixFQUVFO0FBQUNMLE1BQUFBLFFBQVEsRUFBUkEsUUFBRDtBQUFXQyxNQUFBQSxnQkFBZ0IsRUFBaEJBLGdCQUFYO0FBQTZCQyxNQUFBQSxXQUFXLEVBQVhBO0FBQTdCLEtBRkY7QUFLQTtBQUNELEdBcEI0RSxDQXNCN0U7O0FBQ0E7OztBQUNBLE1BQU1JLEtBQUssR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWM7QUFBQ0MsSUFBQUEsWUFBWSxFQUFFYjtBQUFmLEdBQWQsRUFBaURNLFdBQWpELENBQWQ7QUFDQTtBQUVBOztBQTNCNkUsbUJBNEIzQyw0QkFBVUQsZ0JBQVYsQ0E1QjJDO0FBQUE7QUFBQSxNQTRCdEVTLGFBNUJzRTtBQUFBLE1BNEJwREMsS0E1Qm9EOztBQTZCN0UsMkJBQVE7QUFDTkMsSUFBQUEsR0FBRywrQ0FBd0NaLFFBQXhDLENBREc7QUFFTmEsSUFBQUEsRUFBRSxFQUFFUCxLQUZFO0FBR05RLElBQUFBLE1BQU0sRUFBRSxNQUhGO0FBSU5DLElBQUFBLElBQUksRUFBRUw7QUFKQSxHQUFSLEVBTUcsVUFBQ0wsS0FBRCxFQUFRVyxRQUFSLEVBQWtCQyxJQUFsQixFQUEyQjtBQUM1QixRQUFJLENBQUNaLEtBQUQsSUFBVVcsUUFBUSxDQUFDRSxVQUFULEtBQXdCLEdBQXRDLEVBQTJDO0FBQ3pDO0FBQ0FkLE1BQUFBLE9BQU8sQ0FBQ2UsR0FBUix3Q0FDa0NuQixRQURsQyxrQkFFRW9CLElBQUksQ0FBQ0MsU0FBTCxDQUFlSixJQUFmLENBRkYsRUFGeUMsQ0FPekM7O0FBQ0EsVUFBSSxDQUFDLHlCQUFRTixLQUFSLENBQUwsRUFBcUI7QUFDbkJaLFFBQUFBLE9BQU8sQ0FBQ0MsUUFBRCxFQUFXVyxLQUFYLEVBQWtCVCxXQUFsQixDQUFQO0FBQ0Q7QUFDRixLQVhELE1BV087QUFDTDtBQUNBRSxNQUFBQSxPQUFPLENBQUNDLEtBQVIsaURBQzJDTCxRQUQzQyxHQUVFZ0IsUUFBUSxDQUFDRSxVQUZYLEVBR0VGLFFBQVEsQ0FBQ00sYUFIWCxFQUlFTCxJQUFJLENBQUNaLEtBSlAsRUFLRUgsV0FMRixFQUZLLENBVUw7O0FBQ0FFLE1BQUFBLE9BQU8sQ0FBQ0MsS0FBUiw2QkFBbUNGLE9BQW5DO0FBQ0FKLE1BQUFBLE9BQU8sQ0FBQ0MsUUFBRCxFQUFXQyxnQkFBWCxFQUE2QkMsV0FBN0IsRUFBMENDLE9BQU8sR0FBRyxDQUFwRCxDQUFQO0FBQ0Q7QUFDRixHQWhDRDtBQWlDRCxDQTlERDs7QUFnRUEsSUFBTW9CLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ3RCLGdCQUFELEVBQXdDO0FBQUEsTUFBckJDLFdBQXFCLHVFQUFQLEVBQU87QUFDOUQsU0FBT0gsT0FBTyxDQUFDLFVBQUQsRUFBYUUsZ0JBQWIsRUFBK0JDLFdBQS9CLENBQWQ7QUFDRCxDQUZEOztBQUlBLElBQU1zQix1QkFBdUIsR0FBRyxTQUExQkEsdUJBQTBCLENBQUN2QixnQkFBRCxFQUF3QztBQUFBLE1BQXJCQyxXQUFxQix1RUFBUCxFQUFPO0FBQ3RFLFNBQU9ILE9BQU8sQ0FBQyxtQkFBRCxFQUFzQkUsZ0JBQXRCLEVBQXdDQyxXQUF4QyxDQUFkO0FBQ0QsQ0FGRDs7ZUFJZTtBQUNicUIsRUFBQUEsZUFBZSxFQUFmQSxlQURhO0FBRWJDLEVBQUFBLHVCQUF1QixFQUF2QkE7QUFGYSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kZWVwaWthL0RvY3VtZW50cy9HaXRIdWIvZmFjZWJvb2tIYWNrYXRob24vY2hhdC1leHRlbnNpb25zL21lc3Nlbmdlci1hcGktaGVscGVycyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8vID09PT09IExPREFTSCA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQgY2FzdEFycmF5IGZyb20gJ2xvZGFzaC9jYXN0QXJyYXknO1xuaW1wb3J0IGlzRW1wdHkgZnJvbSAnbG9kYXNoL2lzRW1wdHknO1xuXG4vLyA9PT09PSBNT0RVTEVTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaW1wb3J0IHJlcXVlc3QgZnJvbSAncmVxdWVzdCc7XG5cbmNvbnN0IFBBR0VfQUNDRVNTX1RPS0VOID0gcHJvY2Vzcy5lbnYuUEFHRV9BQ0NFU1NfVE9LRU47XG5cbi8qKlxuICogU2VuZCBtZXNzYWdlcyBpbiBvcmRlciB0byB0aGUgRmFjZWJvb2sgZ3JhcGggQVBJLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSAgICAgICAgICBlbmRQb2ludCAtIFNwZWNpZmljIGVuZHBvaW50IHRvIHNlbmQgZGF0YSB0b1xuICogQHBhcmFtIHtPYmplY3R8T2JqZWN0W119IG1lc3NhZ2VEYXRhQXJyYXkgUGF5bG9hZHMgdG8gc2VuZCBpbmRpdmlkdWFsbHlcbiAqIEBwYXJhbSB7T2JqZWN0fSAgICAgICAgICBxdWVyeVBhcmFtcyAtIFF1ZXJ5IFBhcmFtZXRlcnNcbiAqIEBwYXJhbSB7T2JqZWN0fSAgICAgICAgICByZXRyaWVzIC0gIyBvZiB0aW1lcyB0byBhdHRlbXB0IHRvIHNlbmQgYSBtZXNzYWdlLlxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuY29uc3QgY2FsbEFQSSA9IChlbmRQb2ludCwgbWVzc2FnZURhdGFBcnJheSwgcXVlcnlQYXJhbXMgPSB7fSwgcmV0cmllcyA9IDUpID0+IHtcbiAgLy8gRXJyb3IgaWYgZGV2ZWxvcGVyIGZvcmdvdCB0byBzcGVjaWZ5IGFuIGVuZHBvaW50IHRvIHNlbmQgb3VyIHJlcXVlc3QgdG9cbiAgaWYgKCFlbmRQb2ludCkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ2NhbGxBUEkgcmVxdWlyZXMgeW91IHRvIHNwZWNpZnkgYW4gZW5kcG9pbnQuJyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKCFQQUdFX0FDQ0VTU19UT0tFTikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ2NhbGxBUEkgcmVxdWlyZXMgeW91IHRvIHNwZWNpZnkgYSBwYWdlIGFjY2VzcyB0b2tlbi4nKTtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBFcnJvciBpZiB3ZSd2ZSBydW4gb3V0IG9mIHJldHJpZXMuXG4gIGlmIChyZXRyaWVzIDwgMCkge1xuICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAnTm8gbW9yZSByZXRyaWVzIGxlZnQuJyxcbiAgICAgIHtlbmRQb2ludCwgbWVzc2FnZURhdGFBcnJheSwgcXVlcnlQYXJhbXN9XG4gICAgKTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIGVuc3VyZSBxdWVyeSBwYXJhbWV0ZXJzIGhhdmUgYSBQQUdFX0FDQ0VTU19UT0tFTiB2YWx1ZVxuICAvKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cbiAgY29uc3QgcXVlcnkgPSBPYmplY3QuYXNzaWduKHthY2Nlc3NfdG9rZW46IFBBR0VfQUNDRVNTX1RPS0VOfSwgcXVlcnlQYXJhbXMpO1xuICAvKiBlc2xpbnQtZW5hYmxlIGNhbWVsY2FzZSAqL1xuXG4gIC8vIHJlYWR5IHRoZSBmaXJzdCBtZXNzYWdlIGluIHRoZSBhcnJheSBmb3Igc2VuZC5cbiAgY29uc3QgW21lc3NhZ2VUb1NlbmQsIC4uLnF1ZXVlXSA9IGNhc3RBcnJheShtZXNzYWdlRGF0YUFycmF5KTtcbiAgcmVxdWVzdCh7XG4gICAgdXJpOiBgaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjMuMi9tZS8ke2VuZFBvaW50fWAsXG4gICAgcXM6IHF1ZXJ5LFxuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGpzb246IG1lc3NhZ2VUb1NlbmQsXG5cbiAgfSwgKGVycm9yLCByZXNwb25zZSwgYm9keSkgPT4ge1xuICAgIGlmICghZXJyb3IgJiYgcmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gMjAwKSB7XG4gICAgICAvLyBNZXNzYWdlIGhhcyBiZWVuIHN1Y2Nlc3NmdWxseSByZWNlaXZlZCBieSBGYWNlYm9va1xuICAgICAgY29uc29sZS5sb2coXG4gICAgICAgIGBTdWNjZXNzZnVsbHkgc2VudCBtZXNzYWdlIHRvICR7ZW5kUG9pbnR9IGVuZHBvaW50OiBgLFxuICAgICAgICBKU09OLnN0cmluZ2lmeShib2R5KVxuICAgICAgKTtcblxuICAgICAgLy8gY29udGludWUgc2VuZGluZyBwYXlsb2FkcyB1bnRpbCBxdWV1ZSBlbXB0eVxuICAgICAgaWYgKCFpc0VtcHR5KHF1ZXVlKSkge1xuICAgICAgICBjYWxsQVBJKGVuZFBvaW50LCBxdWV1ZSwgcXVlcnlQYXJhbXMpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBNZXNzYWdlIGhhcyBub3QgYmVlbiBzdWNjZXNzZnVsbHkgcmVjZWl2ZWQgYnkgRmFjZWJvb2tcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgIGBGYWlsZWQgY2FsbGluZyBNZXNzZW5nZXIgQVBJIGVuZHBvaW50ICR7ZW5kUG9pbnR9YCxcbiAgICAgICAgcmVzcG9uc2Uuc3RhdHVzQ29kZSxcbiAgICAgICAgcmVzcG9uc2Uuc3RhdHVzTWVzc2FnZSxcbiAgICAgICAgYm9keS5lcnJvcixcbiAgICAgICAgcXVlcnlQYXJhbXNcbiAgICAgICk7XG5cbiAgICAgIC8vIFJldHJ5IHRoZSByZXF1ZXN0XG4gICAgICBjb25zb2xlLmVycm9yKGBSZXRyeWluZyBSZXF1ZXN0OiAke3JldHJpZXN9IGxlZnRgKTtcbiAgICAgIGNhbGxBUEkoZW5kUG9pbnQsIG1lc3NhZ2VEYXRhQXJyYXksIHF1ZXJ5UGFyYW1zLCByZXRyaWVzIC0gMSk7XG4gICAgfVxuICB9KTtcbn07XG5cbmNvbnN0IGNhbGxNZXNzYWdlc0FQSSA9IChtZXNzYWdlRGF0YUFycmF5LCBxdWVyeVBhcmFtcyA9IHt9KSA9PiB7XG4gIHJldHVybiBjYWxsQVBJKCdtZXNzYWdlcycsIG1lc3NhZ2VEYXRhQXJyYXksIHF1ZXJ5UGFyYW1zKTtcbn07XG5cbmNvbnN0IGNhbGxNZXNzZW5nZXJQcm9maWxlQVBJID0gKG1lc3NhZ2VEYXRhQXJyYXksIHF1ZXJ5UGFyYW1zID0ge30pID0+IHtcbiAgcmV0dXJuIGNhbGxBUEkoJ21lc3Nlbmdlcl9wcm9maWxlJywgbWVzc2FnZURhdGFBcnJheSwgcXVlcnlQYXJhbXMpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBjYWxsTWVzc2FnZXNBUEksXG4gIGNhbGxNZXNzZW5nZXJQcm9maWxlQVBJLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "PAGE_ACCESS_TOKEN",
        "process",
        "env",
        "callAPI",
        "endPoint",
        "messageDataArray",
        "queryParams",
        "retries",
        "console",
        "error",
        "query",
        "Object",
        "assign",
        "access_token",
        "messageToSend",
        "queue",
        "uri",
        "qs",
        "method",
        "json",
        "response",
        "body",
        "statusCode",
        "log",
        "JSON",
        "stringify",
        "statusMessage",
        "callMessagesAPI",
        "callMessengerProfileAPI"
      ],
      "mappings": ";;;;;;;AAQA;;AACA;;AAGA;;;;;;;;;;;;AAEA,IAAMA,iBAAiB,GAAGC,OAAO,CAACC,GAAR,CAAYF,iBAAtC;AAEA;;;;;;;;;;AASA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAWC,gBAAX,EAA+D;AAAA,MAAlCC,WAAkC,uEAApB,EAAoB;AAAA,MAAhBC,OAAgB,uEAAN,CAAM;;AAC7E;AACA,MAAI,CAACH,QAAL,EAAe;AACbI,IAAAA,OAAO,CAACC,KAAR,CAAc,8CAAd;AACA;AACD;;AAED,MAAI,CAACT,iBAAL,EAAwB;AACtBQ,IAAAA,OAAO,CAACC,KAAR,CAAc,sDAAd;AACA;AACD,GAV4E,CAY7E;;;AACA,MAAIF,OAAO,GAAG,CAAd,EAAiB;AACfC,IAAAA,OAAO,CAACC,KAAR,CACE,uBADF,EAEE;AAACL,MAAAA,QAAQ,EAARA,QAAD;AAAWC,MAAAA,gBAAgB,EAAhBA,gBAAX;AAA6BC,MAAAA,WAAW,EAAXA;AAA7B,KAFF;AAKA;AACD,GApB4E,CAsB7E;;AACA;;;AACA,MAAMI,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc;AAACC,IAAAA,YAAY,EAAEb;AAAf,GAAd,EAAiDM,WAAjD,CAAd;AACA;AAEA;;AA3B6E,mBA4B3C,4BAAUD,gBAAV,CA5B2C;AAAA;AAAA,MA4BtES,aA5BsE;AAAA,MA4BpDC,KA5BoD;;AA6B7E,2BAAQ;AACNC,IAAAA,GAAG,+CAAwCZ,QAAxC,CADG;AAENa,IAAAA,EAAE,EAAEP,KAFE;AAGNQ,IAAAA,MAAM,EAAE,MAHF;AAINC,IAAAA,IAAI,EAAEL;AAJA,GAAR,EAMG,UAACL,KAAD,EAAQW,QAAR,EAAkBC,IAAlB,EAA2B;AAC5B,QAAI,CAACZ,KAAD,IAAUW,QAAQ,CAACE,UAAT,KAAwB,GAAtC,EAA2C;AACzC;AACAd,MAAAA,OAAO,CAACe,GAAR,wCACkCnB,QADlC,kBAEEoB,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFF,EAFyC,CAOzC;;AACA,UAAI,CAAC,yBAAQN,KAAR,CAAL,EAAqB;AACnBZ,QAAAA,OAAO,CAACC,QAAD,EAAWW,KAAX,EAAkBT,WAAlB,CAAP;AACD;AACF,KAXD,MAWO;AACL;AACAE,MAAAA,OAAO,CAACC,KAAR,iDAC2CL,QAD3C,GAEEgB,QAAQ,CAACE,UAFX,EAGEF,QAAQ,CAACM,aAHX,EAIEL,IAAI,CAACZ,KAJP,EAKEH,WALF,EAFK,CAUL;;AACAE,MAAAA,OAAO,CAACC,KAAR,6BAAmCF,OAAnC;AACAJ,MAAAA,OAAO,CAACC,QAAD,EAAWC,gBAAX,EAA6BC,WAA7B,EAA0CC,OAAO,GAAG,CAApD,CAAP;AACD;AACF,GAhCD;AAiCD,CA9DD;;AAgEA,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAACtB,gBAAD,EAAwC;AAAA,MAArBC,WAAqB,uEAAP,EAAO;AAC9D,SAAOH,OAAO,CAAC,UAAD,EAAaE,gBAAb,EAA+BC,WAA/B,CAAd;AACD,CAFD;;AAIA,IAAMsB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACvB,gBAAD,EAAwC;AAAA,MAArBC,WAAqB,uEAAP,EAAO;AACtE,SAAOH,OAAO,CAAC,mBAAD,EAAsBE,gBAAtB,EAAwCC,WAAxC,CAAd;AACD,CAFD;;eAIe;AACbqB,EAAAA,eAAe,EAAfA,eADa;AAEbC,EAAAA,uBAAuB,EAAvBA;AAFa,C",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== LODASH ================================================================\nimport castArray from 'lodash/castArray';\nimport isEmpty from 'lodash/isEmpty';\n\n// ===== MODULES ===============================================================\nimport request from 'request';\n\nconst PAGE_ACCESS_TOKEN = process.env.PAGE_ACCESS_TOKEN;\n\n/**\n * Send messages in order to the Facebook graph API.\n *\n * @param {String}          endPoint - Specific endpoint to send data to\n * @param {Object|Object[]} messageDataArray Payloads to send individually\n * @param {Object}          queryParams - Query Parameters\n * @param {Object}          retries - # of times to attempt to send a message.\n * @returns {undefined}\n */\nconst callAPI = (endPoint, messageDataArray, queryParams = {}, retries = 5) => {\n  // Error if developer forgot to specify an endpoint to send our request to\n  if (!endPoint) {\n    console.error('callAPI requires you to specify an endpoint.');\n    return;\n  }\n\n  if (!PAGE_ACCESS_TOKEN) {\n    console.error('callAPI requires you to specify a page access token.');\n    return;\n  }\n\n  // Error if we've run out of retries.\n  if (retries < 0) {\n    console.error(\n      'No more retries left.',\n      {endPoint, messageDataArray, queryParams}\n    );\n\n    return;\n  }\n\n  // ensure query parameters have a PAGE_ACCESS_TOKEN value\n  /* eslint-disable camelcase */\n  const query = Object.assign({access_token: PAGE_ACCESS_TOKEN}, queryParams);\n  /* eslint-enable camelcase */\n\n  // ready the first message in the array for send.\n  const [messageToSend, ...queue] = castArray(messageDataArray);\n  request({\n    uri: `https://graph.facebook.com/v3.2/me/${endPoint}`,\n    qs: query,\n    method: 'POST',\n    json: messageToSend,\n\n  }, (error, response, body) => {\n    if (!error && response.statusCode === 200) {\n      // Message has been successfully received by Facebook\n      console.log(\n        `Successfully sent message to ${endPoint} endpoint: `,\n        JSON.stringify(body)\n      );\n\n      // continue sending payloads until queue empty\n      if (!isEmpty(queue)) {\n        callAPI(endPoint, queue, queryParams);\n      }\n    } else {\n      // Message has not been successfully received by Facebook\n      console.error(\n        `Failed calling Messenger API endpoint ${endPoint}`,\n        response.statusCode,\n        response.statusMessage,\n        body.error,\n        queryParams\n      );\n\n      // Retry the request\n      console.error(`Retrying Request: ${retries} left`);\n      callAPI(endPoint, messageDataArray, queryParams, retries - 1);\n    }\n  });\n};\n\nconst callMessagesAPI = (messageDataArray, queryParams = {}) => {\n  return callAPI('messages', messageDataArray, queryParams);\n};\n\nconst callMessengerProfileAPI = (messageDataArray, queryParams = {}) => {\n  return callAPI('messenger_profile', messageDataArray, queryParams);\n};\n\nexport default {\n  callMessagesAPI,\n  callMessengerProfileAPI,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes/index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// ===== MODULES ===============================================================\nvar router = _express[\"default\"].Router(); // GET home page\n\n\nrouter.get('/', function (_, res) {\n  res.render('./index', {\n    demo: process.env.DEMO,\n    listId: null\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJfIiwicmVzIiwicmVuZGVyIiwiZGVtbyIsInByb2Nlc3MiLCJlbnYiLCJERU1PIiwibGlzdElkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBUUE7Ozs7QUFSQTs7Ozs7O0FBT0E7QUFHQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWYsQyxDQUVBOzs7QUFDQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFDQyxDQUFELEVBQUlDLEdBQUosRUFBWTtBQUMxQkEsRUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsU0FBWCxFQUFzQjtBQUNwQkMsSUFBQUEsSUFBSSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFERTtBQUVwQkMsSUFBQUEsTUFBTSxFQUFFO0FBRlksR0FBdEI7QUFJRCxDQUxEO2VBT2VYLE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2RlZXBpa2EvRG9jdW1lbnRzL0dpdEh1Yi9mYWNlYm9va0hhY2thdGhvbi9jaGF0LWV4dGVuc2lvbnMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLy8gPT09PT0gTU9EVUxFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vLyBHRVQgaG9tZSBwYWdlXG5yb3V0ZXIuZ2V0KCcvJywgKF8sIHJlcykgPT4ge1xuICByZXMucmVuZGVyKCcuL2luZGV4Jywge1xuICAgIGRlbW86IHByb2Nlc3MuZW52LkRFTU8sXG4gICAgbGlzdElkOiBudWxsLFxuICB9KTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "get",
        "_",
        "res",
        "render",
        "demo",
        "process",
        "env",
        "DEMO",
        "listId"
      ],
      "mappings": ";;;;;;;AAQA;;;;AARA;;;;;;AAOA;AAGA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAEA;;;AACAF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAACC,CAAD,EAAIC,GAAJ,EAAY;AAC1BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,SAAX,EAAsB;AACpBC,IAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,IADE;AAEpBC,IAAAA,MAAM,EAAE;AAFY,GAAtB;AAID,CALD;eAOeX,M",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== MODULES ===============================================================\nimport express from 'express';\n\nconst router = express.Router();\n\n// GET home page\nrouter.get('/', (_, res) => {\n  res.render('./index', {\n    demo: process.env.DEMO,\n    listId: null,\n  });\n});\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes/lists.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes/lists.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes/lists.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes/lists.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes",
        "sourceFileName": "lists.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _lists = _interopRequireDefault(require(\"../models/lists\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// ===== MODULES ===============================================================\n// ===== DB ====================================================================\nvar router = _express[\"default\"].Router();\n\nrouter.get('/:listId', function (req, res) {\n  var hostname = req.hostname;\n  var _process$env = process.env,\n      DEMO = _process$env.DEMO,\n      PORT = _process$env.PORT,\n      LOCAL = _process$env.LOCAL;\n  var reqId = req.params.listId;\n  var socketAddress = DEMO && LOCAL ? \"http://\".concat(hostname, \":\").concat(PORT) : \"wss://\".concat(hostname);\n\n  if (reqId === 'new') {\n    _lists[\"default\"].create().then(function (_ref) {\n      var id = _ref.id;\n      res.render('./index', {\n        listId: id,\n        socketAddress: socketAddress,\n        demo: DEMO\n      });\n    });\n  } else {\n    res.render('./index', {\n      listId: reqId,\n      socketAddress: socketAddress,\n      demo: DEMO\n    });\n  }\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJob3N0bmFtZSIsInByb2Nlc3MiLCJlbnYiLCJERU1PIiwiUE9SVCIsIkxPQ0FMIiwicmVxSWQiLCJwYXJhbXMiLCJsaXN0SWQiLCJzb2NrZXRBZGRyZXNzIiwiTGlzdHMiLCJjcmVhdGUiLCJ0aGVuIiwiaWQiLCJyZW5kZXIiLCJkZW1vIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBUUE7O0FBR0E7Ozs7QUFYQTs7Ozs7O0FBT0E7QUFHQTtBQUdBLElBQU1BLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZjs7QUFFQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsVUFBWCxFQUF1QixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLE1BQzVCQyxRQUQ0QixHQUNoQkYsR0FEZ0IsQ0FDNUJFLFFBRDRCO0FBQUEscUJBRVBDLE9BQU8sQ0FBQ0MsR0FGRDtBQUFBLE1BRTVCQyxJQUY0QixnQkFFNUJBLElBRjRCO0FBQUEsTUFFdEJDLElBRnNCLGdCQUV0QkEsSUFGc0I7QUFBQSxNQUVoQkMsS0FGZ0IsZ0JBRWhCQSxLQUZnQjtBQUduQyxNQUFNQyxLQUFLLEdBQUdSLEdBQUcsQ0FBQ1MsTUFBSixDQUFXQyxNQUF6QjtBQUNBLE1BQU1DLGFBQWEsR0FBSU4sSUFBSSxJQUFJRSxLQUFULG9CQUNWTCxRQURVLGNBQ0VJLElBREYsb0JBQ29CSixRQURwQixDQUF0Qjs7QUFHQSxNQUFJTSxLQUFLLEtBQUssS0FBZCxFQUFxQjtBQUNuQkksc0JBQU1DLE1BQU4sR0FBZUMsSUFBZixDQUFvQixnQkFBVTtBQUFBLFVBQVJDLEVBQVEsUUFBUkEsRUFBUTtBQUM1QmQsTUFBQUEsR0FBRyxDQUFDZSxNQUFKLENBQVcsU0FBWCxFQUFzQjtBQUFDTixRQUFBQSxNQUFNLEVBQUVLLEVBQVQ7QUFBYUosUUFBQUEsYUFBYSxFQUFiQSxhQUFiO0FBQTRCTSxRQUFBQSxJQUFJLEVBQUVaO0FBQWxDLE9BQXRCO0FBQ0QsS0FGRDtBQUdELEdBSkQsTUFJTztBQUNMSixJQUFBQSxHQUFHLENBQUNlLE1BQUosQ0FBVyxTQUFYLEVBQXNCO0FBQUNOLE1BQUFBLE1BQU0sRUFBRUYsS0FBVDtBQUFnQkcsTUFBQUEsYUFBYSxFQUFiQSxhQUFoQjtBQUErQk0sTUFBQUEsSUFBSSxFQUFFWjtBQUFyQyxLQUF0QjtBQUNEO0FBQ0YsQ0FkRDtlQWdCZVQsTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGVlcGlrYS9Eb2N1bWVudHMvR2l0SHViL2ZhY2Vib29rSGFja2F0aG9uL2NoYXQtZXh0ZW5zaW9ucy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vLyA9PT09PSBNT0RVTEVTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5cbi8vID09PT09IERCID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQgTGlzdHMgZnJvbSAnLi4vbW9kZWxzL2xpc3RzJztcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLmdldCgnLzpsaXN0SWQnLCAocmVxLCByZXMpID0+IHtcbiAgY29uc3Qge2hvc3RuYW1lfSA9IHJlcTtcbiAgY29uc3Qge0RFTU8sIFBPUlQsIExPQ0FMfSA9IHByb2Nlc3MuZW52O1xuICBjb25zdCByZXFJZCA9IHJlcS5wYXJhbXMubGlzdElkO1xuICBjb25zdCBzb2NrZXRBZGRyZXNzID0gKERFTU8gJiYgTE9DQUwpID9cbiAgICBgaHR0cDovLyR7aG9zdG5hbWV9OiR7UE9SVH1gIDogYHdzczovLyR7aG9zdG5hbWV9YDtcblxuICBpZiAocmVxSWQgPT09ICduZXcnKSB7XG4gICAgTGlzdHMuY3JlYXRlKCkudGhlbigoe2lkfSkgPT4ge1xuICAgICAgcmVzLnJlbmRlcignLi9pbmRleCcsIHtsaXN0SWQ6IGlkLCBzb2NrZXRBZGRyZXNzLCBkZW1vOiBERU1PfSk7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgcmVzLnJlbmRlcignLi9pbmRleCcsIHtsaXN0SWQ6IHJlcUlkLCBzb2NrZXRBZGRyZXNzLCBkZW1vOiBERU1PfSk7XG4gIH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "lists.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "get",
        "req",
        "res",
        "hostname",
        "process",
        "env",
        "DEMO",
        "PORT",
        "LOCAL",
        "reqId",
        "params",
        "listId",
        "socketAddress",
        "Lists",
        "create",
        "then",
        "id",
        "render",
        "demo"
      ],
      "mappings": ";;;;;;;AAQA;;AAGA;;;;AAXA;;;;;;AAOA;AAGA;AAGA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,GAAP,CAAW,UAAX,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,MAC5BC,QAD4B,GAChBF,GADgB,CAC5BE,QAD4B;AAAA,qBAEPC,OAAO,CAACC,GAFD;AAAA,MAE5BC,IAF4B,gBAE5BA,IAF4B;AAAA,MAEtBC,IAFsB,gBAEtBA,IAFsB;AAAA,MAEhBC,KAFgB,gBAEhBA,KAFgB;AAGnC,MAAMC,KAAK,GAAGR,GAAG,CAACS,MAAJ,CAAWC,MAAzB;AACA,MAAMC,aAAa,GAAIN,IAAI,IAAIE,KAAT,oBACVL,QADU,cACEI,IADF,oBACoBJ,QADpB,CAAtB;;AAGA,MAAIM,KAAK,KAAK,KAAd,EAAqB;AACnBI,sBAAMC,MAAN,GAAeC,IAAf,CAAoB,gBAAU;AAAA,UAARC,EAAQ,QAARA,EAAQ;AAC5Bd,MAAAA,GAAG,CAACe,MAAJ,CAAW,SAAX,EAAsB;AAACN,QAAAA,MAAM,EAAEK,EAAT;AAAaJ,QAAAA,aAAa,EAAbA,aAAb;AAA4BM,QAAAA,IAAI,EAAEZ;AAAlC,OAAtB;AACD,KAFD;AAGD,GAJD,MAIO;AACLJ,IAAAA,GAAG,CAACe,MAAJ,CAAW,SAAX,EAAsB;AAACN,MAAAA,MAAM,EAAEF,KAAT;AAAgBG,MAAAA,aAAa,EAAbA,aAAhB;AAA+BM,MAAAA,IAAI,EAAEZ;AAArC,KAAtB;AACD;AACF,CAdD;eAgBeT,M",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== MODULES ===============================================================\nimport express from 'express';\n\n// ===== DB ====================================================================\nimport Lists from '../models/lists';\n\nconst router = express.Router();\n\nrouter.get('/:listId', (req, res) => {\n  const {hostname} = req;\n  const {DEMO, PORT, LOCAL} = process.env;\n  const reqId = req.params.listId;\n  const socketAddress = (DEMO && LOCAL) ?\n    `http://${hostname}:${PORT}` : `wss://${hostname}`;\n\n  if (reqId === 'new') {\n    Lists.create().then(({id}) => {\n      res.render('./index', {listId: id, socketAddress, demo: DEMO});\n    });\n  } else {\n    res.render('./index', {listId: reqId, socketAddress, demo: DEMO});\n  }\n});\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/lists.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/lists.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/lists.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/lists.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models",
        "sourceFileName": "lists.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _knex = _interopRequireDefault(require(\"../db/knex\"));\n\nvar _util = require(\"./util\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar Lists = function Lists() {\n  return (0, _knex[\"default\"])('lists');\n};\n\nvar ListsItems = function ListsItems() {\n  return (0, _knex[\"default\"])('lists_items');\n};\n\nvar Users = function Users() {\n  return (0, _knex[\"default\"])('users');\n};\n\nvar UsersLists = function UsersLists() {\n  return (0, _knex[\"default\"])('users_lists');\n};\n/**\n * get - Gets the List with the given ID.\n * @param   {Number} listId - The ID of the List to return.\n * @returns {Object} list - The matched List.\n */\n\n\nvar get = function get(listId) {\n  return Lists().where('id', parseInt(listId, 10)).first().then(_util.camelCaseKeys);\n};\n/**\n * getAll - Gets all Lists\n * @returns {Array} lists - Array of all Lists.\n */\n\n\nvar getAll = function getAll() {\n  return Lists().select().then(function (lists) {\n    return lists.map(_util.camelCaseKeys);\n  });\n};\n/**\n * getAllItems - Gets all ListsItems for the List with the given ID.\n * @param   {Number} listId - The ID of the List to get items for.\n * @returns {Array} listsItems - Array of all ListsItems\n */\n\n\nvar getAllItems = function getAllItems(listId) {\n  return ListsItems().where('list_id', parseInt(listId, 10)).select().then(function (listsItems) {\n    return listsItems.map(_util.camelCaseKeys);\n  });\n};\n/**\n * getAllUsers - Gets all Users of the List with the given ID.\n * @param   {Number} listId - The ID of the List to get Users for.\n * @returns {Array} users - Array of all Users for the matched List.\n */\n\n\nvar getAllUsers = function getAllUsers(listId) {\n  return Users().join('users_lists', 'fb_id', 'users_lists.user_fb_id').where('list_id', parseInt(listId, 10)).select('fb_id').then(function (users) {\n    return users.map(_util.camelCaseKeys);\n  });\n};\n/**\n * getOwner - Gets the User who owns the List with the given ID.\n * @param   {Number} listId - The ID of the List to get the Owner of.\n * @returns {Object} user - The User who owns the list.\n */\n\n\nvar getOwner = function getOwner(listId) {\n  return Users().join('users_lists', 'fb_id', 'users_lists.user_fb_id').where({\n    list_id: parseInt(listId, 10),\n    owner: true\n  }).first('fb_id').then(_util.camelCaseKeys);\n};\n/**\n * getWithUsers - Returns the List with the given ID, with an array subscribed\n *                user FB IDs provided under `subscriberIds` key.\n * @param   {Number} listId - The ID of the List to return.\n * @returns {Object} list - The matched list, with `subscriberIds` key.\n */\n\n\nvar getWithUsers = function getWithUsers(listId) {\n  return Promise.all([get(listId), getAllUsers(listId)]).then(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        list = _ref2[0],\n        users = _ref2[1];\n\n    if (list) {\n      list.subscriberIds = users.map(function () {\n        var user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return user.fbId;\n      });\n    }\n\n    return list;\n  });\n};\n/**\n * getForUser - Returns all Lists associated with the given FB ID\n *              and ownership value.\n * @param   {Number} userFbId - The FB ID of the User to find Lists for.\n * @param   {Boolean} owner - The Ownership state to match Lists against.\n * @returns {Array} lists - The matched lists.\n */\n\n\nvar getForUser = function getForUser(userFbId, owner) {\n  var query = Lists().join('users_lists', 'lists.id', 'users_lists.list_id').where('user_fb_id', userFbId);\n\n  if (typeof owner !== 'undefined') {\n    query.andWhere({\n      owner: owner\n    });\n  }\n\n  return query.pluck('lists.id').then(function () {\n    var listIds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return Promise.all(listIds.map(getWithUsers));\n  });\n};\n/**\n * getOwnedForUser — Returns all Lists that a User owns.\n * @param   {Number} userFbId - The FB ID of the User to find Lists for.\n * @returns {Array} lists - Array of all lists owned by the User.\n */\n\n\nvar getOwnedForUser = function getOwnedForUser(userFbId) {\n  return getForUser(userFbId, true);\n};\n/**\n * getSharedToUser — Returns all Lists that have been shared with a User.\n * @param   {Number} userFbId - The FB ID of the User to find Lists for.\n * @returns {Array} lists - Array of all Lists shared with the User.\n */\n\n\nvar getSharedToUser = function getSharedToUser(userFbId) {\n  return getForUser(userFbId, false);\n};\n/**\n * addUser - Associates a User with a List, making\n *           them the owner if no other owner is found.\n * @param   {Number} listId - The ID of the List to subscribe a User to.\n * @param   {Number} userFbId - The FB ID of the User to add to a List.\n * @returns {Object} usersList\n */\n\n\nvar addUser = function addUser(listId, userFbId) {\n  return getOwner(listId).then(function (user) {\n    return !!user;\n  }).then(function (hasOwner) {\n    return UsersLists().where({\n      list_id: listId,\n      user_fb_id: userFbId\n    }).first().then(function (usersList) {\n      return {\n        hasOwner: hasOwner,\n        alreadyAdded: !!usersList\n      };\n    });\n  }).then(function (_ref3) {\n    var hasOwner = _ref3.hasOwner,\n        alreadyAdded = _ref3.alreadyAdded;\n\n    if (alreadyAdded && !hasOwner) {\n      return UsersLists().where({\n        list_id: listId,\n        user_fb_id: userFbId\n      }).first().update({\n        owner: true\n      }, ['id', 'list_id', 'user_fb_id', 'owner']).then(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 1),\n            usersList = _ref5[0];\n\n        return (0, _util.camelCaseKeys)(usersList);\n      });\n    } else if (alreadyAdded) {\n      return UsersLists().where({\n        list_id: listId,\n        user_fb_id: userFbId\n      }).first().then(_util.camelCaseKeys);\n    }\n\n    return UsersLists().insert({\n      owner: !hasOwner,\n      list_id: listId,\n      user_fb_id: userFbId\n    }, ['id', 'list_id', 'user_fb_id', 'owner']).then(function (_ref6) {\n      var _ref7 = _slicedToArray(_ref6, 1),\n          usersList = _ref7[0];\n\n      return (0, _util.camelCaseKeys)(usersList);\n    });\n  });\n};\n/**\n * setOwner - Make the User with the provided FB ID\n *            the owner of the List with the given ID.\n * @param   {Number} listId - The ID of the List to make the User the owner of.\n * @param   {Number} userFbId - The FB ID of the User to be made owner.\n * @returns {Object} usersList\n */\n\n\nvar setOwner = function setOwner(listId, userFbId) {\n  return getOwner(listId).then(function (user) {\n    if (!!user) {\n      return UsersLists().where({\n        list_id: listId,\n        user_fb_id: user.fbId\n      }).update({\n        owner: false\n      }, 'id').then(function () {\n        return addUser(listId, userFbId);\n      });\n    }\n\n    return addUser(listId, userFbId);\n  });\n};\n/**\n * setTitle - Sets the title of a given list.\n * @param   {String} newTitle - The new Title of the List\n * @param   {Number} listId - The ID of the list to be given the new title.\n * @returns {Object} list - The updated List.\n */\n\n\nvar setTitle = function setTitle() {\n  var newTitle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var listId = arguments.length > 1 ? arguments[1] : undefined;\n  var title = newTitle === null ? 'Shopping List' : newTitle;\n  return Lists().where('id', parseInt(listId, 10)).update({\n    title: title\n  }, ['id', 'title']).then(function (_ref8) {\n    var _ref9 = _slicedToArray(_ref8, 1),\n        list = _ref9[0];\n\n    return list;\n  });\n};\n/**\n * create - Creates a new list with the given title.\n * @param   {String} title - The title of the list to create.\n * @returns {Object} list - The newly created list.\n */\n\n\nvar create = function create() {\n  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Shopping List';\n  return Lists().insert({\n    title: title\n  }, 'id').then(get);\n};\n\nvar _default = {\n  addUser: addUser,\n  create: create,\n  get: get,\n  getAll: getAll,\n  getAllItems: getAllItems,\n  getAllUsers: getAllUsers,\n  getForUser: getForUser,\n  getOwnedForUser: getOwnedForUser,\n  getSharedToUser: getSharedToUser,\n  getOwner: getOwner,\n  getWithUsers: getWithUsers,\n  setOwner: setOwner,\n  setTitle: setTitle\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "lists.js"
      ],
      "names": [
        "Lists",
        "ListsItems",
        "Users",
        "UsersLists",
        "get",
        "listId",
        "where",
        "parseInt",
        "first",
        "then",
        "camelCaseKeys",
        "getAll",
        "select",
        "lists",
        "map",
        "getAllItems",
        "listsItems",
        "getAllUsers",
        "join",
        "users",
        "getOwner",
        "list_id",
        "owner",
        "getWithUsers",
        "Promise",
        "all",
        "list",
        "subscriberIds",
        "user",
        "fbId",
        "getForUser",
        "userFbId",
        "query",
        "andWhere",
        "pluck",
        "listIds",
        "getOwnedForUser",
        "getSharedToUser",
        "addUser",
        "hasOwner",
        "user_fb_id",
        "usersList",
        "alreadyAdded",
        "update",
        "insert",
        "setOwner",
        "setTitle",
        "newTitle",
        "title",
        "create"
      ],
      "mappings": ";;;;;;;AASA;;AAGA;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,sBAAK,OAAL,CAAN;AAAA,CAAd;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,sBAAK,aAAL,CAAN;AAAA,CAAnB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,sBAAK,OAAL,CAAN;AAAA,CAAd;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,sBAAK,aAAL,CAAN;AAAA,CAAnB;AAEA;;;;;;;AAKA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,MAAD;AAAA,SACVL,KAAK,GACFM,KADH,CACS,IADT,EACeC,QAAQ,CAACF,MAAD,EAAS,EAAT,CADvB,EAEGG,KAFH,GAGGC,IAHH,CAGQC,mBAHR,CADU;AAAA,CAAZ;AAMA;;;;;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SACbX,KAAK,GAAGY,MAAR,GACGH,IADH,CACQ,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACC,GAAN,CAAUJ,mBAAV,CAAX;AAAA,GADR,CADa;AAAA,CAAf;AAIA;;;;;;;AAKA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACV,MAAD;AAAA,SAClBJ,UAAU,GACPK,KADH,CACS,SADT,EACoBC,QAAQ,CAACF,MAAD,EAAS,EAAT,CAD5B,EAEGO,MAFH,GAGGH,IAHH,CAGQ,UAACO,UAAD;AAAA,WAAgBA,UAAU,CAACF,GAAX,CAAeJ,mBAAf,CAAhB;AAAA,GAHR,CADkB;AAAA,CAApB;AAMA;;;;;;;AAKA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACZ,MAAD;AAAA,SAClBH,KAAK,GACFgB,IADH,CACQ,aADR,EACuB,OADvB,EACgC,wBADhC,EAEGZ,KAFH,CAES,SAFT,EAEoBC,QAAQ,CAACF,MAAD,EAAS,EAAT,CAF5B,EAGGO,MAHH,CAGU,OAHV,EAIGH,IAJH,CAIQ,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACL,GAAN,CAAUJ,mBAAV,CAAX;AAAA,GAJR,CADkB;AAAA,CAApB;AAOA;;;;;;;AAKA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACf,MAAD;AAAA,SACfH,KAAK,GACFgB,IADH,CACQ,aADR,EACuB,OADvB,EACgC,wBADhC,EAEGZ,KAFH,CAES;AAACe,IAAAA,OAAO,EAAEd,QAAQ,CAACF,MAAD,EAAS,EAAT,CAAlB;AAAgCiB,IAAAA,KAAK,EAAE;AAAvC,GAFT,EAGGd,KAHH,CAGS,OAHT,EAIGC,IAJH,CAIQC,mBAJR,CADe;AAAA,CAAjB;AAOA;;;;;;;;AAMA,IAAMa,YAAY,GAAG,SAAfA,YAAe,CAAClB,MAAD;AAAA,SACnBmB,OAAO,CAACC,GAAR,CAAY,CAACrB,GAAG,CAACC,MAAD,CAAJ,EAAcY,WAAW,CAACZ,MAAD,CAAzB,CAAZ,EACGI,IADH,CACQ,gBAAmB;AAAA;AAAA,QAAjBiB,IAAiB;AAAA,QAAXP,KAAW;;AACvB,QAAIO,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAACC,aAAL,GAAqBR,KAAK,CAACL,GAAN,CAAU;AAAA,YAACc,IAAD,uEAAQ,EAAR;AAAA,eAAeA,IAAI,CAACC,IAApB;AAAA,OAAV,CAArB;AACD;;AAED,WAAOH,IAAP;AACD,GAPH,CADmB;AAAA,CAArB;AAUA;;;;;;;;;AAOA,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAWT,KAAX,EAAqB;AACtC,MAAMU,KAAK,GAAGhC,KAAK,GAChBkB,IADW,CACN,aADM,EACS,UADT,EACqB,qBADrB,EAEXZ,KAFW,CAEL,YAFK,EAESyB,QAFT,CAAd;;AAIA,MAAI,OAAOT,KAAP,KAAiB,WAArB,EAAkC;AAChCU,IAAAA,KAAK,CAACC,QAAN,CAAe;AAACX,MAAAA,KAAK,EAALA;AAAD,KAAf;AACD;;AAED,SAAOU,KAAK,CAACE,KAAN,CAAY,UAAZ,EACJzB,IADI,CACC;AAAA,QAAC0B,OAAD,uEAAW,EAAX;AAAA,WAAkBX,OAAO,CAACC,GAAR,CAAYU,OAAO,CAACrB,GAAR,CAAYS,YAAZ,CAAZ,CAAlB;AAAA,GADD,CAAP;AAED,CAXD;AAaA;;;;;;;AAKA,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACL,QAAD;AAAA,SAAcD,UAAU,CAACC,QAAD,EAAW,IAAX,CAAxB;AAAA,CAAxB;AAEA;;;;;;;AAKA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACN,QAAD;AAAA,SAAcD,UAAU,CAACC,QAAD,EAAW,KAAX,CAAxB;AAAA,CAAxB;AAEA;;;;;;;;;AAOA,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAACjC,MAAD,EAAS0B,QAAT,EAAsB;AACpC,SAAOX,QAAQ,CAACf,MAAD,CAAR,CACJI,IADI,CACC,UAACmB,IAAD;AAAA,WAAU,CAAC,CAACA,IAAZ;AAAA,GADD,EAEJnB,IAFI,CAEC,UAAC8B,QAAD;AAAA,WACJpC,UAAU,GACPG,KADH,CACS;AAACe,MAAAA,OAAO,EAAEhB,MAAV;AAAkBmC,MAAAA,UAAU,EAAET;AAA9B,KADT,EAEGvB,KAFH,GAGGC,IAHH,CAGQ,UAACgC,SAAD;AAAA,aAAgB;AAACF,QAAAA,QAAQ,EAARA,QAAD;AAAWG,QAAAA,YAAY,EAAE,CAAC,CAACD;AAA3B,OAAhB;AAAA,KAHR,CADI;AAAA,GAFD,EAQJhC,IARI,CAQC,iBAA8B;AAAA,QAA5B8B,QAA4B,SAA5BA,QAA4B;AAAA,QAAlBG,YAAkB,SAAlBA,YAAkB;;AAClC,QAAIA,YAAY,IAAI,CAACH,QAArB,EAA+B;AAC7B,aAAOpC,UAAU,GACdG,KADI,CACE;AAACe,QAAAA,OAAO,EAAEhB,MAAV;AAAkBmC,QAAAA,UAAU,EAAET;AAA9B,OADF,EAEJvB,KAFI,GAGJmC,MAHI,CAGG;AAACrB,QAAAA,KAAK,EAAE;AAAR,OAHH,EAGkB,CAAC,IAAD,EAAO,SAAP,EAAkB,YAAlB,EAAgC,OAAhC,CAHlB,EAIJb,IAJI,CAIC;AAAA;AAAA,YAAEgC,SAAF;;AAAA,eAAiB,yBAAcA,SAAd,CAAjB;AAAA,OAJD,CAAP;AAKD,KAND,MAMO,IAAIC,YAAJ,EAAkB;AACvB,aAAOvC,UAAU,GACdG,KADI,CACE;AAACe,QAAAA,OAAO,EAAEhB,MAAV;AAAkBmC,QAAAA,UAAU,EAAET;AAA9B,OADF,EAEJvB,KAFI,GAGJC,IAHI,CAGCC,mBAHD,CAAP;AAID;;AAED,WAAOP,UAAU,GACdyC,MADI,CAEH;AAACtB,MAAAA,KAAK,EAAE,CAACiB,QAAT;AAAmBlB,MAAAA,OAAO,EAAEhB,MAA5B;AAAoCmC,MAAAA,UAAU,EAAET;AAAhD,KAFG,EAGH,CAAC,IAAD,EAAO,SAAP,EAAkB,YAAlB,EAAgC,OAAhC,CAHG,EAKJtB,IALI,CAKC;AAAA;AAAA,UAAEgC,SAAF;;AAAA,aAAiB,yBAAcA,SAAd,CAAjB;AAAA,KALD,CAAP;AAMD,GA5BI,CAAP;AA6BD,CA9BD;AAgCA;;;;;;;;;AAOA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACxC,MAAD,EAAS0B,QAAT;AAAA,SACfX,QAAQ,CAACf,MAAD,CAAR,CACGI,IADH,CACQ,UAACmB,IAAD,EAAU;AACd,QAAI,CAAC,CAACA,IAAN,EAAY;AACV,aAAOzB,UAAU,GACdG,KADI,CACE;AAACe,QAAAA,OAAO,EAAEhB,MAAV;AAAkBmC,QAAAA,UAAU,EAAEZ,IAAI,CAACC;AAAnC,OADF,EAEJc,MAFI,CAEG;AAACrB,QAAAA,KAAK,EAAE;AAAR,OAFH,EAEmB,IAFnB,EAGJb,IAHI,CAGC;AAAA,eAAM6B,OAAO,CAACjC,MAAD,EAAS0B,QAAT,CAAb;AAAA,OAHD,CAAP;AAID;;AAED,WAAOO,OAAO,CAACjC,MAAD,EAAS0B,QAAT,CAAd;AACD,GAVH,CADe;AAAA,CAAjB;AAaA;;;;;;;;AAMA,IAAMe,QAAQ,GAAG,SAAXA,QAAW,GAA2B;AAAA,MAA1BC,QAA0B,uEAAf,EAAe;AAAA,MAAX1C,MAAW;AAC1C,MAAM2C,KAAK,GAAID,QAAQ,KAAK,IAAd,GAAsB,eAAtB,GAAwCA,QAAtD;AAEA,SAAO/C,KAAK,GACTM,KADI,CACE,IADF,EACQC,QAAQ,CAACF,MAAD,EAAS,EAAT,CADhB,EAC8BsC,MAD9B,CACqC;AAACK,IAAAA,KAAK,EAALA;AAAD,GADrC,EAC8C,CAAC,IAAD,EAAO,OAAP,CAD9C,EAEJvC,IAFI,CAEC;AAAA;AAAA,QAAEiB,IAAF;;AAAA,WAAYA,IAAZ;AAAA,GAFD,CAAP;AAGD,CAND;AAQA;;;;;;;AAKA,IAAMuB,MAAM,GAAG,SAATA,MAAS;AAAA,MAACD,KAAD,uEAAS,eAAT;AAAA,SACbhD,KAAK,GACF4C,MADH,CACU;AAACI,IAAAA,KAAK,EAALA;AAAD,GADV,EACmB,IADnB,EACyBvC,IADzB,CAC8BL,GAD9B,CADa;AAAA,CAAf;;eAIe;AACbkC,EAAAA,OAAO,EAAPA,OADa;AAEbW,EAAAA,MAAM,EAANA,MAFa;AAGb7C,EAAAA,GAAG,EAAHA,GAHa;AAIbO,EAAAA,MAAM,EAANA,MAJa;AAKbI,EAAAA,WAAW,EAAXA,WALa;AAMbE,EAAAA,WAAW,EAAXA,WANa;AAOba,EAAAA,UAAU,EAAVA,UAPa;AAQbM,EAAAA,eAAe,EAAfA,eARa;AASbC,EAAAA,eAAe,EAAfA,eATa;AAUbjB,EAAAA,QAAQ,EAARA,QAVa;AAWbG,EAAAA,YAAY,EAAZA,YAXa;AAYbsB,EAAAA,QAAQ,EAARA,QAZa;AAabC,EAAAA,QAAQ,EAARA;AAba,C",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n /* eslint-disable camelcase */\n\n// ===== DB ====================================================================\nimport Knex  from '../db/knex';\n\n// ===== UTIL ==================================================================\nimport {camelCaseKeys} from './util';\n\nconst Lists = () => Knex('lists');\nconst ListsItems = () => Knex('lists_items');\nconst Users = () => Knex('users');\nconst UsersLists = () => Knex('users_lists');\n\n/**\n * get - Gets the List with the given ID.\n * @param   {Number} listId - The ID of the List to return.\n * @returns {Object} list - The matched List.\n */\nconst get = (listId) =>\n  Lists()\n    .where('id', parseInt(listId, 10))\n    .first()\n    .then(camelCaseKeys);\n\n/**\n * getAll - Gets all Lists\n * @returns {Array} lists - Array of all Lists.\n */\nconst getAll = () =>\n  Lists().select()\n    .then((lists) => lists.map(camelCaseKeys));\n\n/**\n * getAllItems - Gets all ListsItems for the List with the given ID.\n * @param   {Number} listId - The ID of the List to get items for.\n * @returns {Array} listsItems - Array of all ListsItems\n */\nconst getAllItems = (listId) =>\n  ListsItems()\n    .where('list_id', parseInt(listId, 10))\n    .select()\n    .then((listsItems) => listsItems.map(camelCaseKeys));\n\n/**\n * getAllUsers - Gets all Users of the List with the given ID.\n * @param   {Number} listId - The ID of the List to get Users for.\n * @returns {Array} users - Array of all Users for the matched List.\n */\nconst getAllUsers = (listId) =>\n  Users()\n    .join('users_lists', 'fb_id', 'users_lists.user_fb_id')\n    .where('list_id', parseInt(listId, 10))\n    .select('fb_id')\n    .then((users) => users.map(camelCaseKeys));\n\n/**\n * getOwner - Gets the User who owns the List with the given ID.\n * @param   {Number} listId - The ID of the List to get the Owner of.\n * @returns {Object} user - The User who owns the list.\n */\nconst getOwner = (listId) =>\n  Users()\n    .join('users_lists', 'fb_id', 'users_lists.user_fb_id')\n    .where({list_id: parseInt(listId, 10), owner: true})\n    .first('fb_id')\n    .then(camelCaseKeys);\n\n/**\n * getWithUsers - Returns the List with the given ID, with an array subscribed\n *                user FB IDs provided under `subscriberIds` key.\n * @param   {Number} listId - The ID of the List to return.\n * @returns {Object} list - The matched list, with `subscriberIds` key.\n */\nconst getWithUsers = (listId) =>\n  Promise.all([get(listId), getAllUsers(listId)])\n    .then(([list, users]) => {\n      if (list) {\n        list.subscriberIds = users.map((user = {}) => user.fbId);\n      }\n\n      return list;\n    });\n\n/**\n * getForUser - Returns all Lists associated with the given FB ID\n *              and ownership value.\n * @param   {Number} userFbId - The FB ID of the User to find Lists for.\n * @param   {Boolean} owner - The Ownership state to match Lists against.\n * @returns {Array} lists - The matched lists.\n */\nconst getForUser = (userFbId, owner) => {\n  const query = Lists()\n    .join('users_lists', 'lists.id', 'users_lists.list_id')\n    .where('user_fb_id', userFbId);\n\n  if (typeof owner !== 'undefined') {\n    query.andWhere({owner});\n  }\n\n  return query.pluck('lists.id')\n    .then((listIds = []) => Promise.all(listIds.map(getWithUsers)));\n};\n\n/**\n * getOwnedForUser — Returns all Lists that a User owns.\n * @param   {Number} userFbId - The FB ID of the User to find Lists for.\n * @returns {Array} lists - Array of all lists owned by the User.\n */\nconst getOwnedForUser = (userFbId) => getForUser(userFbId, true);\n\n/**\n * getSharedToUser — Returns all Lists that have been shared with a User.\n * @param   {Number} userFbId - The FB ID of the User to find Lists for.\n * @returns {Array} lists - Array of all Lists shared with the User.\n */\nconst getSharedToUser = (userFbId) => getForUser(userFbId, false);\n\n/**\n * addUser - Associates a User with a List, making\n *           them the owner if no other owner is found.\n * @param   {Number} listId - The ID of the List to subscribe a User to.\n * @param   {Number} userFbId - The FB ID of the User to add to a List.\n * @returns {Object} usersList\n */\nconst addUser = (listId, userFbId) => {\n  return getOwner(listId)\n    .then((user) => !!user)\n    .then((hasOwner) =>\n      UsersLists()\n        .where({list_id: listId, user_fb_id: userFbId})\n        .first()\n        .then((usersList) => ({hasOwner, alreadyAdded: !!usersList}))\n    )\n    .then(({hasOwner, alreadyAdded}) => {\n      if (alreadyAdded && !hasOwner) {\n        return UsersLists()\n          .where({list_id: listId, user_fb_id: userFbId})\n          .first()\n          .update({owner: true}, ['id', 'list_id', 'user_fb_id', 'owner'])\n          .then(([usersList]) => camelCaseKeys(usersList));\n      } else if (alreadyAdded) {\n        return UsersLists()\n          .where({list_id: listId, user_fb_id: userFbId})\n          .first()\n          .then(camelCaseKeys);\n      }\n\n      return UsersLists()\n        .insert(\n          {owner: !hasOwner, list_id: listId, user_fb_id: userFbId},\n          ['id', 'list_id', 'user_fb_id', 'owner']\n        )\n        .then(([usersList]) => camelCaseKeys(usersList));\n    });\n};\n\n/**\n * setOwner - Make the User with the provided FB ID\n *            the owner of the List with the given ID.\n * @param   {Number} listId - The ID of the List to make the User the owner of.\n * @param   {Number} userFbId - The FB ID of the User to be made owner.\n * @returns {Object} usersList\n */\nconst setOwner = (listId, userFbId) =>\n  getOwner(listId)\n    .then((user) => {\n      if (!!user) {\n        return UsersLists()\n          .where({list_id: listId, user_fb_id: user.fbId})\n          .update({owner: false}, 'id')\n          .then(() => addUser(listId, userFbId));\n      }\n\n      return addUser(listId, userFbId);\n    });\n\n/**\n * setTitle - Sets the title of a given list.\n * @param   {String} newTitle - The new Title of the List\n * @param   {Number} listId - The ID of the list to be given the new title.\n * @returns {Object} list - The updated List.\n */\nconst setTitle = (newTitle = '', listId) => {\n  const title = (newTitle === null) ? 'Shopping List' : newTitle;\n\n  return Lists()\n    .where('id', parseInt(listId, 10)).update({title}, ['id', 'title'])\n    .then(([list]) => list);\n};\n\n/**\n * create - Creates a new list with the given title.\n * @param   {String} title - The title of the list to create.\n * @returns {Object} list - The newly created list.\n */\nconst create = (title = 'Shopping List') =>\n  Lists()\n    .insert({title}, 'id').then(get);\n\nexport default {\n  addUser,\n  create,\n  get,\n  getAll,\n  getAllItems,\n  getAllUsers,\n  getForUser,\n  getOwnedForUser,\n  getSharedToUser,\n  getOwner,\n  getWithUsers,\n  setOwner,\n  setTitle,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/db\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/db/knex.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/db",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/db/knex.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/db/knex.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/db/knex.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/db",
        "sourceFileName": "knex.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _knex = _interopRequireDefault(require(\"knex\"));\n\nvar _knexfile = _interopRequireDefault(require(\"../knexfile\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// ===== MODULES ===============================================================\n// ===== KNEXFILE ==============================================================\nvar environment = process.env.NODE_ENV || 'development';\nvar knexConfig = _knexfile[\"default\"][environment];\n\nvar _default = (0, _knex[\"default\"])(knexConfig);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtuZXguanMiXSwibmFtZXMiOlsiZW52aXJvbm1lbnQiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJrbmV4Q29uZmlnIiwia25leEZpbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFRQTs7QUFHQTs7OztBQVhBOzs7Ozs7QUFPQTtBQUdBO0FBR0EsSUFBTUEsV0FBVyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixJQUF3QixhQUE1QztBQUNBLElBQU1DLFVBQVUsR0FBR0MscUJBQVNMLFdBQVQsQ0FBbkI7O2VBRWUsc0JBQUtJLFVBQUwsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGVlcGlrYS9Eb2N1bWVudHMvR2l0SHViL2ZhY2Vib29rSGFja2F0aG9uL2NoYXQtZXh0ZW5zaW9ucy9kYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8vID09PT09IE1PRFVMRVMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQga25leCBmcm9tICdrbmV4JztcblxuLy8gPT09PT0gS05FWEZJTEUgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmltcG9ydCBrbmV4RmlsZSBmcm9tICcuLi9rbmV4ZmlsZSc7XG5cbmNvbnN0IGVudmlyb25tZW50ID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHwgJ2RldmVsb3BtZW50JztcbmNvbnN0IGtuZXhDb25maWcgPSBrbmV4RmlsZVtlbnZpcm9ubWVudF07XG5cbmV4cG9ydCBkZWZhdWx0IGtuZXgoa25leENvbmZpZyk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "knex.js"
      ],
      "names": [
        "environment",
        "process",
        "env",
        "NODE_ENV",
        "knexConfig",
        "knexFile"
      ],
      "mappings": ";;;;;;;AAQA;;AAGA;;;;AAXA;;;;;;AAOA;AAGA;AAGA,IAAMA,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,aAA5C;AACA,IAAMC,UAAU,GAAGC,qBAASL,WAAT,CAAnB;;eAEe,sBAAKI,UAAL,C",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/db",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== MODULES ===============================================================\nimport knex from 'knex';\n\n// ===== KNEXFILE ==============================================================\nimport knexFile from '../knexfile';\n\nconst environment = process.env.NODE_ENV || 'development';\nconst knexConfig = knexFile[environment];\n\nexport default knex(knexConfig);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/knexfile.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/knexfile.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/knexfile.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/knexfile.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
        "sourceFileName": "knexfile.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// eslint-disable-next-line\nmodule.exports = {\n  test: {\n    client: 'pg',\n    connection: 'postgres://localhost/list_bot_test',\n    migrations: {\n      directory: \"\".concat(__dirname, \"/db/migrations\")\n    },\n    seeds: {\n      directory: \"\".concat(__dirname, \"/db/seeds/test\")\n    }\n  },\n  development: {\n    client: 'pg',\n    connection: 'postgres://localhost/list_bot_dev',\n    migrations: {\n      directory: \"\".concat(__dirname, \"/db/migrations\")\n    },\n    seeds: {\n      directory: \"\".concat(__dirname, \"/db/seeds/development\")\n    }\n  },\n  production: {\n    client: 'pg',\n    connection: \"\".concat(process.env.DATABASE_URL, \"?ssl=true\"),\n    migrations: {\n      directory: \"\".concat(__dirname, \"/db/migrations\")\n    },\n    seeds: {\n      directory: \"\".concat(__dirname, \"/db/seeds/production\")\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtuZXhmaWxlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ0ZXN0IiwiY2xpZW50IiwiY29ubmVjdGlvbiIsIm1pZ3JhdGlvbnMiLCJkaXJlY3RvcnkiLCJfX2Rpcm5hbWUiLCJzZWVkcyIsImRldmVsb3BtZW50IiwicHJvZHVjdGlvbiIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU9BO0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkMsSUFBQUEsTUFBTSxFQUFFLElBREo7QUFFSkMsSUFBQUEsVUFBVSxFQUFFLG9DQUZSO0FBR0pDLElBQUFBLFVBQVUsRUFBRTtBQUNWQyxNQUFBQSxTQUFTLFlBQUtDLFNBQUw7QUFEQyxLQUhSO0FBTUpDLElBQUFBLEtBQUssRUFBRTtBQUNMRixNQUFBQSxTQUFTLFlBQUtDLFNBQUw7QUFESjtBQU5ILEdBRFM7QUFXZkUsRUFBQUEsV0FBVyxFQUFFO0FBQ1hOLElBQUFBLE1BQU0sRUFBRSxJQURHO0FBRVhDLElBQUFBLFVBQVUsRUFBRSxtQ0FGRDtBQUdYQyxJQUFBQSxVQUFVLEVBQUU7QUFDVkMsTUFBQUEsU0FBUyxZQUFLQyxTQUFMO0FBREMsS0FIRDtBQU1YQyxJQUFBQSxLQUFLLEVBQUU7QUFDTEYsTUFBQUEsU0FBUyxZQUFLQyxTQUFMO0FBREo7QUFOSSxHQVhFO0FBcUJmRyxFQUFBQSxVQUFVLEVBQUU7QUFDVlAsSUFBQUEsTUFBTSxFQUFFLElBREU7QUFFVkMsSUFBQUEsVUFBVSxZQUFLTyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsWUFBakIsY0FGQTtBQUdWUixJQUFBQSxVQUFVLEVBQUU7QUFDVkMsTUFBQUEsU0FBUyxZQUFLQyxTQUFMO0FBREMsS0FIRjtBQU1WQyxJQUFBQSxLQUFLLEVBQUU7QUFDTEYsTUFBQUEsU0FBUyxZQUFLQyxTQUFMO0FBREo7QUFORztBQXJCRyxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGVlcGlrYS9Eb2N1bWVudHMvR2l0SHViL2ZhY2Vib29rSGFja2F0aG9uL2NoYXQtZXh0ZW5zaW9ucyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHRlc3Q6IHtcbiAgICBjbGllbnQ6ICdwZycsXG4gICAgY29ubmVjdGlvbjogJ3Bvc3RncmVzOi8vbG9jYWxob3N0L2xpc3RfYm90X3Rlc3QnLFxuICAgIG1pZ3JhdGlvbnM6IHtcbiAgICAgIGRpcmVjdG9yeTogYCR7X19kaXJuYW1lfS9kYi9taWdyYXRpb25zYCxcbiAgICB9LFxuICAgIHNlZWRzOiB7XG4gICAgICBkaXJlY3Rvcnk6IGAke19fZGlybmFtZX0vZGIvc2VlZHMvdGVzdGAsXG4gICAgfSxcbiAgfSxcbiAgZGV2ZWxvcG1lbnQ6IHtcbiAgICBjbGllbnQ6ICdwZycsXG4gICAgY29ubmVjdGlvbjogJ3Bvc3RncmVzOi8vbG9jYWxob3N0L2xpc3RfYm90X2RldicsXG4gICAgbWlncmF0aW9uczoge1xuICAgICAgZGlyZWN0b3J5OiBgJHtfX2Rpcm5hbWV9L2RiL21pZ3JhdGlvbnNgLFxuICAgIH0sXG4gICAgc2VlZHM6IHtcbiAgICAgIGRpcmVjdG9yeTogYCR7X19kaXJuYW1lfS9kYi9zZWVkcy9kZXZlbG9wbWVudGAsXG4gICAgfSxcbiAgfSxcbiAgcHJvZHVjdGlvbjoge1xuICAgIGNsaWVudDogJ3BnJyxcbiAgICBjb25uZWN0aW9uOiBgJHtwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkx9P3NzbD10cnVlYCxcbiAgICBtaWdyYXRpb25zOiB7XG4gICAgICBkaXJlY3Rvcnk6IGAke19fZGlybmFtZX0vZGIvbWlncmF0aW9uc2AsXG4gICAgfSxcbiAgICBzZWVkczoge1xuICAgICAgZGlyZWN0b3J5OiBgJHtfX2Rpcm5hbWV9L2RiL3NlZWRzL3Byb2R1Y3Rpb25gLFxuICAgIH0sXG4gIH0sXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "knexfile.js"
      ],
      "names": [
        "module",
        "exports",
        "test",
        "client",
        "connection",
        "migrations",
        "directory",
        "__dirname",
        "seeds",
        "development",
        "production",
        "process",
        "env",
        "DATABASE_URL"
      ],
      "mappings": ";;AAAA;;;;;;AAOA;AACAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,IADJ;AAEJC,IAAAA,UAAU,EAAE,oCAFR;AAGJC,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,YAAKC,SAAL;AADC,KAHR;AAMJC,IAAAA,KAAK,EAAE;AACLF,MAAAA,SAAS,YAAKC,SAAL;AADJ;AANH,GADS;AAWfE,EAAAA,WAAW,EAAE;AACXN,IAAAA,MAAM,EAAE,IADG;AAEXC,IAAAA,UAAU,EAAE,mCAFD;AAGXC,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,YAAKC,SAAL;AADC,KAHD;AAMXC,IAAAA,KAAK,EAAE;AACLF,MAAAA,SAAS,YAAKC,SAAL;AADJ;AANI,GAXE;AAqBfG,EAAAA,UAAU,EAAE;AACVP,IAAAA,MAAM,EAAE,IADE;AAEVC,IAAAA,UAAU,YAAKO,OAAO,CAACC,GAAR,CAAYC,YAAjB,cAFA;AAGVR,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,YAAKC,SAAL;AADC,KAHF;AAMVC,IAAAA,KAAK,EAAE;AACLF,MAAAA,SAAS,YAAKC,SAAL;AADJ;AANG;AArBG,CAAjB",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// eslint-disable-next-line\nmodule.exports = {\n  test: {\n    client: 'pg',\n    connection: 'postgres://localhost/list_bot_test',\n    migrations: {\n      directory: `${__dirname}/db/migrations`,\n    },\n    seeds: {\n      directory: `${__dirname}/db/seeds/test`,\n    },\n  },\n  development: {\n    client: 'pg',\n    connection: 'postgres://localhost/list_bot_dev',\n    migrations: {\n      directory: `${__dirname}/db/migrations`,\n    },\n    seeds: {\n      directory: `${__dirname}/db/seeds/development`,\n    },\n  },\n  production: {\n    client: 'pg',\n    connection: `${process.env.DATABASE_URL}?ssl=true`,\n    migrations: {\n      directory: `${__dirname}/db/migrations`,\n    },\n    seeds: {\n      directory: `${__dirname}/db/seeds/production`,\n    },\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/util.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/util.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/util.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/util.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models",
        "sourceFileName": "util.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.snakeCaseKeys = exports.camelCaseKeys = void 0;\n\nvar _camelCase = _interopRequireDefault(require(\"lodash/fp/camelCase\"));\n\nvar _mapKeys = _interopRequireDefault(require(\"lodash/fp/mapKeys\"));\n\nvar _snakeCase = _interopRequireDefault(require(\"lodash/fp/snakeCase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * getKeyFormatter - Returns a fn for mapping an Object's keys to values\n *                   created by the provided formatter fn.\n * @param  {Function} formatter — Formats key values, should return a string.\n * @returns {Function} - Maps an Object's keys to new values.\n */\nvar getKeyFormatter = function getKeyFormatter(formatter) {\n  return function (object) {\n    return _typeof(object) === 'object' ? (0, _mapKeys[\"default\"])(formatter, object) : object;\n  };\n};\n\nvar camelCaseKeys = getKeyFormatter(_camelCase[\"default\"]);\nexports.camelCaseKeys = camelCaseKeys;\nvar snakeCaseKeys = getKeyFormatter(_snakeCase[\"default\"]);\nexports.snakeCaseKeys = snakeCaseKeys;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWwuanMiXSwibmFtZXMiOlsiZ2V0S2V5Rm9ybWF0dGVyIiwiZm9ybWF0dGVyIiwib2JqZWN0IiwiY2FtZWxDYXNlS2V5cyIsImNhbWVsQ2FzZSIsInNuYWtlQ2FzZUtleXMiLCJzbmFrZUNhc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFRQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUE7Ozs7OztBQU1BLElBQU1BLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ0MsU0FBRCxFQUFlO0FBQ3JDLFNBQU8sVUFBQ0MsTUFBRDtBQUFBLFdBQ0osUUFBT0EsTUFBUCxNQUFrQixRQUFuQixHQUNJLHlCQUFRRCxTQUFSLEVBQW1CQyxNQUFuQixDQURKLEdBRUlBLE1BSEM7QUFBQSxHQUFQO0FBSUQsQ0FMRDs7QUFPTyxJQUFNQyxhQUFhLEdBQUdILGVBQWUsQ0FBQ0kscUJBQUQsQ0FBckM7O0FBQ0EsSUFBTUMsYUFBYSxHQUFHTCxlQUFlLENBQUNNLHFCQUFELENBQXJDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kZWVwaWthL0RvY3VtZW50cy9HaXRIdWIvZmFjZWJvb2tIYWNrYXRob24vY2hhdC1leHRlbnNpb25zL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8vID09PT09IExPREFTSCA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQgY2FtZWxDYXNlIGZyb20gJ2xvZGFzaC9mcC9jYW1lbENhc2UnO1xuaW1wb3J0IG1hcEtleXMgZnJvbSAnbG9kYXNoL2ZwL21hcEtleXMnO1xuaW1wb3J0IHNuYWtlQ2FzZSBmcm9tICdsb2Rhc2gvZnAvc25ha2VDYXNlJztcblxuLyoqXG4gKiBnZXRLZXlGb3JtYXR0ZXIgLSBSZXR1cm5zIGEgZm4gZm9yIG1hcHBpbmcgYW4gT2JqZWN0J3Mga2V5cyB0byB2YWx1ZXNcbiAqICAgICAgICAgICAgICAgICAgIGNyZWF0ZWQgYnkgdGhlIHByb3ZpZGVkIGZvcm1hdHRlciBmbi5cbiAqIEBwYXJhbSAge0Z1bmN0aW9ufSBmb3JtYXR0ZXIg4oCUIEZvcm1hdHMga2V5IHZhbHVlcywgc2hvdWxkIHJldHVybiBhIHN0cmluZy5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gLSBNYXBzIGFuIE9iamVjdCdzIGtleXMgdG8gbmV3IHZhbHVlcy5cbiAqL1xuY29uc3QgZ2V0S2V5Rm9ybWF0dGVyID0gKGZvcm1hdHRlcikgPT4ge1xuICByZXR1cm4gKG9iamVjdCkgPT5cbiAgICAodHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcpXG4gICAgICA/IG1hcEtleXMoZm9ybWF0dGVyLCBvYmplY3QpXG4gICAgICA6IG9iamVjdDtcbn07XG5cbmV4cG9ydCBjb25zdCBjYW1lbENhc2VLZXlzID0gZ2V0S2V5Rm9ybWF0dGVyKGNhbWVsQ2FzZSk7XG5leHBvcnQgY29uc3Qgc25ha2VDYXNlS2V5cyA9IGdldEtleUZvcm1hdHRlcihzbmFrZUNhc2UpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "util.js"
      ],
      "names": [
        "getKeyFormatter",
        "formatter",
        "object",
        "camelCaseKeys",
        "camelCase",
        "snakeCaseKeys",
        "snakeCase"
      ],
      "mappings": ";;;;;;;AAQA;;AACA;;AACA;;;;;;AAEA;;;;;;AAMA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD,EAAe;AACrC,SAAO,UAACC,MAAD;AAAA,WACJ,QAAOA,MAAP,MAAkB,QAAnB,GACI,yBAAQD,SAAR,EAAmBC,MAAnB,CADJ,GAEIA,MAHC;AAAA,GAAP;AAID,CALD;;AAOO,IAAMC,aAAa,GAAGH,eAAe,CAACI,qBAAD,CAArC;;AACA,IAAMC,aAAa,GAAGL,eAAe,CAACM,qBAAD,CAArC",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== LODASH ================================================================\nimport camelCase from 'lodash/fp/camelCase';\nimport mapKeys from 'lodash/fp/mapKeys';\nimport snakeCase from 'lodash/fp/snakeCase';\n\n/**\n * getKeyFormatter - Returns a fn for mapping an Object's keys to values\n *                   created by the provided formatter fn.\n * @param  {Function} formatter — Formats key values, should return a string.\n * @returns {Function} - Maps an Object's keys to new values.\n */\nconst getKeyFormatter = (formatter) => {\n  return (object) =>\n    (typeof object === 'object')\n      ? mapKeys(formatter, object)\n      : object;\n};\n\nexport const camelCaseKeys = getKeyFormatter(camelCase);\nexport const snakeCaseKeys = getKeyFormatter(snakeCase);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes/webhooks.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes/webhooks.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes/webhooks.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes/webhooks.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes",
        "sourceFileName": "webhooks.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _receive = _interopRequireDefault(require(\"../messenger-api-helpers/receive\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// ===== MODULES ===============================================================\n// ===== MESSENGER =============================================================\nvar router = _express[\"default\"].Router();\n/**\n * This is used so that Facebook can verify that they have\n * the correct Webhook location for your app.\n *\n * The Webhook token must be set in your app's configuration page\n * as well as in your servers environment.\n */\n\n\nrouter.get('/', function (req, res) {\n  if (req.query['hub.verify_token'] === process.env.WEBHOOK_TOKEN) {\n    res.send(req.query['hub.challenge']);\n  } else {\n    res.send('Error, wrong token');\n  }\n});\n/**\n * Once your Webhook is verified this is where you will receive\n * all interactions from the users of you Messenger Application.\n *\n * You can subscribe to many different types of messages.\n * However for this demo we've only handled what is necessary:\n * 1. Regular messages\n * 2. Postbacks\n */\n\nrouter.post('/', function (req, res) {\n  /*\n  You must send back a status of 200(success) within 20 seconds\n  to let us know you've successfully received the callback.\n  Otherwise, the request will time out.\n   When a request times out from Facebook the service attempts\n  to resend the message.\n   This is why it is good to send a response immediately so you\n  don't get duplicate messages in the event that a request takes\n  awhile to process.\n  */\n  res.sendStatus(200);\n  var data = req.body;\n  console.log('Webhook POST', JSON.stringify(data)); // Make sure this is a page subscription\n\n  if (data.object === 'page') {\n    // Iterate over each entry\n    // There may be multiple if batched\n    data.entry.forEach(function (pageEntry) {\n      if (!pageEntry.messaging) {\n        return;\n      } // Iterate over each messaging event and handle accordingly\n\n\n      pageEntry.messaging.forEach(function (messagingEvent) {\n        console.log({\n          messagingEvent: messagingEvent\n        });\n\n        if (messagingEvent.message) {\n          _receive[\"default\"].handleReceiveMessage(messagingEvent);\n        }\n\n        if (messagingEvent.postback) {\n          _receive[\"default\"].handleReceivePostback(messagingEvent);\n        } else {\n          console.log('Webhook received unknown messagingEvent: ', messagingEvent);\n        }\n      });\n    });\n  }\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYmhvb2tzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJxdWVyeSIsInByb2Nlc3MiLCJlbnYiLCJXRUJIT09LX1RPS0VOIiwic2VuZCIsInBvc3QiLCJzZW5kU3RhdHVzIiwiZGF0YSIsImJvZHkiLCJjb25zb2xlIiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsIm9iamVjdCIsImVudHJ5IiwiZm9yRWFjaCIsInBhZ2VFbnRyeSIsIm1lc3NhZ2luZyIsIm1lc3NhZ2luZ0V2ZW50IiwibWVzc2FnZSIsInJlY2VpdmVBcGkiLCJoYW5kbGVSZWNlaXZlTWVzc2FnZSIsInBvc3RiYWNrIiwiaGFuZGxlUmVjZWl2ZVBvc3RiYWNrIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBUUE7O0FBR0E7Ozs7QUFYQTs7Ozs7O0FBT0E7QUFHQTtBQUdBLElBQU1BLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZjtBQUVBOzs7Ozs7Ozs7QUFPQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM1QixNQUFJRCxHQUFHLENBQUNFLEtBQUosQ0FBVSxrQkFBVixNQUFrQ0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLGFBQWxELEVBQWlFO0FBQy9ESixJQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBU04sR0FBRyxDQUFDRSxLQUFKLENBQVUsZUFBVixDQUFUO0FBQ0QsR0FGRCxNQUVPO0FBQ0xELElBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLG9CQUFUO0FBQ0Q7QUFDRixDQU5EO0FBUUE7Ozs7Ozs7Ozs7QUFTQVYsTUFBTSxDQUFDVyxJQUFQLENBQVksR0FBWixFQUFpQixVQUFDUCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMzQjs7Ozs7Ozs7OztBQVlGQSxFQUFBQSxHQUFHLENBQUNPLFVBQUosQ0FBZSxHQUFmO0FBRUEsTUFBTUMsSUFBSSxHQUFHVCxHQUFHLENBQUNVLElBQWpCO0FBQ0FDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGNBQVosRUFBNEJDLElBQUksQ0FBQ0MsU0FBTCxDQUFlTCxJQUFmLENBQTVCLEVBaEI2QixDQWtCN0I7O0FBQ0EsTUFBSUEsSUFBSSxDQUFDTSxNQUFMLEtBQWdCLE1BQXBCLEVBQTRCO0FBQzFCO0FBQ0E7QUFDQU4sSUFBQUEsSUFBSSxDQUFDTyxLQUFMLENBQVdDLE9BQVgsQ0FBbUIsVUFBQ0MsU0FBRCxFQUFlO0FBQ2hDLFVBQUksQ0FBQ0EsU0FBUyxDQUFDQyxTQUFmLEVBQTBCO0FBQ3hCO0FBQ0QsT0FIK0IsQ0FJaEM7OztBQUNBRCxNQUFBQSxTQUFTLENBQUNDLFNBQVYsQ0FBb0JGLE9BQXBCLENBQTRCLFVBQUNHLGNBQUQsRUFBb0I7QUFDOUNULFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZO0FBQUNRLFVBQUFBLGNBQWMsRUFBZEE7QUFBRCxTQUFaOztBQUVBLFlBQUlBLGNBQWMsQ0FBQ0MsT0FBbkIsRUFBNEI7QUFDMUJDLDhCQUFXQyxvQkFBWCxDQUFnQ0gsY0FBaEM7QUFDRDs7QUFFRCxZQUFJQSxjQUFjLENBQUNJLFFBQW5CLEVBQTZCO0FBQzNCRiw4QkFBV0cscUJBQVgsQ0FBaUNMLGNBQWpDO0FBQ0QsU0FGRCxNQUVPO0FBQ0xULFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUNFLDJDQURGLEVBRUVRLGNBRkY7QUFJRDtBQUNGLE9BZkQ7QUFnQkQsS0FyQkQ7QUFzQkQ7QUFDRixDQTdDRDtlQStDZXhCLE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2RlZXBpa2EvRG9jdW1lbnRzL0dpdEh1Yi9mYWNlYm9va0hhY2thdGhvbi9jaGF0LWV4dGVuc2lvbnMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLy8gPT09PT0gTU9EVUxFUyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG4vLyA9PT09PSBNRVNTRU5HRVIgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaW1wb3J0IHJlY2VpdmVBcGkgZnJvbSAnLi4vbWVzc2VuZ2VyLWFwaS1oZWxwZXJzL3JlY2VpdmUnO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vKipcbiAqIFRoaXMgaXMgdXNlZCBzbyB0aGF0IEZhY2Vib29rIGNhbiB2ZXJpZnkgdGhhdCB0aGV5IGhhdmVcbiAqIHRoZSBjb3JyZWN0IFdlYmhvb2sgbG9jYXRpb24gZm9yIHlvdXIgYXBwLlxuICpcbiAqIFRoZSBXZWJob29rIHRva2VuIG11c3QgYmUgc2V0IGluIHlvdXIgYXBwJ3MgY29uZmlndXJhdGlvbiBwYWdlXG4gKiBhcyB3ZWxsIGFzIGluIHlvdXIgc2VydmVycyBlbnZpcm9ubWVudC5cbiAqL1xucm91dGVyLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICBpZiAocmVxLnF1ZXJ5WydodWIudmVyaWZ5X3Rva2VuJ10gPT09IHByb2Nlc3MuZW52LldFQkhPT0tfVE9LRU4pIHtcbiAgICByZXMuc2VuZChyZXEucXVlcnlbJ2h1Yi5jaGFsbGVuZ2UnXSk7XG4gIH0gZWxzZSB7XG4gICAgcmVzLnNlbmQoJ0Vycm9yLCB3cm9uZyB0b2tlbicpO1xuICB9XG59KTtcblxuLyoqXG4gKiBPbmNlIHlvdXIgV2ViaG9vayBpcyB2ZXJpZmllZCB0aGlzIGlzIHdoZXJlIHlvdSB3aWxsIHJlY2VpdmVcbiAqIGFsbCBpbnRlcmFjdGlvbnMgZnJvbSB0aGUgdXNlcnMgb2YgeW91IE1lc3NlbmdlciBBcHBsaWNhdGlvbi5cbiAqXG4gKiBZb3UgY2FuIHN1YnNjcmliZSB0byBtYW55IGRpZmZlcmVudCB0eXBlcyBvZiBtZXNzYWdlcy5cbiAqIEhvd2V2ZXIgZm9yIHRoaXMgZGVtbyB3ZSd2ZSBvbmx5IGhhbmRsZWQgd2hhdCBpcyBuZWNlc3Nhcnk6XG4gKiAxLiBSZWd1bGFyIG1lc3NhZ2VzXG4gKiAyLiBQb3N0YmFja3NcbiAqL1xucm91dGVyLnBvc3QoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgICAvKlxuICAgIFlvdSBtdXN0IHNlbmQgYmFjayBhIHN0YXR1cyBvZiAyMDAoc3VjY2Vzcykgd2l0aGluIDIwIHNlY29uZHNcbiAgICB0byBsZXQgdXMga25vdyB5b3UndmUgc3VjY2Vzc2Z1bGx5IHJlY2VpdmVkIHRoZSBjYWxsYmFjay5cbiAgICBPdGhlcndpc2UsIHRoZSByZXF1ZXN0IHdpbGwgdGltZSBvdXQuXG5cbiAgICBXaGVuIGEgcmVxdWVzdCB0aW1lcyBvdXQgZnJvbSBGYWNlYm9vayB0aGUgc2VydmljZSBhdHRlbXB0c1xuICAgIHRvIHJlc2VuZCB0aGUgbWVzc2FnZS5cblxuICAgIFRoaXMgaXMgd2h5IGl0IGlzIGdvb2QgdG8gc2VuZCBhIHJlc3BvbnNlIGltbWVkaWF0ZWx5IHNvIHlvdVxuICAgIGRvbid0IGdldCBkdXBsaWNhdGUgbWVzc2FnZXMgaW4gdGhlIGV2ZW50IHRoYXQgYSByZXF1ZXN0IHRha2VzXG4gICAgYXdoaWxlIHRvIHByb2Nlc3MuXG4gICovXG4gIHJlcy5zZW5kU3RhdHVzKDIwMCk7XG5cbiAgY29uc3QgZGF0YSA9IHJlcS5ib2R5O1xuICBjb25zb2xlLmxvZygnV2ViaG9vayBQT1NUJywgSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xuXG4gIC8vIE1ha2Ugc3VyZSB0aGlzIGlzIGEgcGFnZSBzdWJzY3JpcHRpb25cbiAgaWYgKGRhdGEub2JqZWN0ID09PSAncGFnZScpIHtcbiAgICAvLyBJdGVyYXRlIG92ZXIgZWFjaCBlbnRyeVxuICAgIC8vIFRoZXJlIG1heSBiZSBtdWx0aXBsZSBpZiBiYXRjaGVkXG4gICAgZGF0YS5lbnRyeS5mb3JFYWNoKChwYWdlRW50cnkpID0+IHtcbiAgICAgIGlmICghcGFnZUVudHJ5Lm1lc3NhZ2luZykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICAvLyBJdGVyYXRlIG92ZXIgZWFjaCBtZXNzYWdpbmcgZXZlbnQgYW5kIGhhbmRsZSBhY2NvcmRpbmdseVxuICAgICAgcGFnZUVudHJ5Lm1lc3NhZ2luZy5mb3JFYWNoKChtZXNzYWdpbmdFdmVudCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyh7bWVzc2FnaW5nRXZlbnR9KTtcblxuICAgICAgICBpZiAobWVzc2FnaW5nRXZlbnQubWVzc2FnZSkge1xuICAgICAgICAgIHJlY2VpdmVBcGkuaGFuZGxlUmVjZWl2ZU1lc3NhZ2UobWVzc2FnaW5nRXZlbnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG1lc3NhZ2luZ0V2ZW50LnBvc3RiYWNrKSB7XG4gICAgICAgICAgcmVjZWl2ZUFwaS5oYW5kbGVSZWNlaXZlUG9zdGJhY2sobWVzc2FnaW5nRXZlbnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgICAgJ1dlYmhvb2sgcmVjZWl2ZWQgdW5rbm93biBtZXNzYWdpbmdFdmVudDogJyxcbiAgICAgICAgICAgIG1lc3NhZ2luZ0V2ZW50XG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "webhooks.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "get",
        "req",
        "res",
        "query",
        "process",
        "env",
        "WEBHOOK_TOKEN",
        "send",
        "post",
        "sendStatus",
        "data",
        "body",
        "console",
        "log",
        "JSON",
        "stringify",
        "object",
        "entry",
        "forEach",
        "pageEntry",
        "messaging",
        "messagingEvent",
        "message",
        "receiveApi",
        "handleReceiveMessage",
        "postback",
        "handleReceivePostback"
      ],
      "mappings": ";;;;;;;AAQA;;AAGA;;;;AAXA;;;;;;AAOA;AAGA;AAGA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AAEA;;;;;;;;;AAOAF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5B,MAAID,GAAG,CAACE,KAAJ,CAAU,kBAAV,MAAkCC,OAAO,CAACC,GAAR,CAAYC,aAAlD,EAAiE;AAC/DJ,IAAAA,GAAG,CAACK,IAAJ,CAASN,GAAG,CAACE,KAAJ,CAAU,eAAV,CAAT;AACD,GAFD,MAEO;AACLD,IAAAA,GAAG,CAACK,IAAJ,CAAS,oBAAT;AACD;AACF,CAND;AAQA;;;;;;;;;;AASAV,MAAM,CAACW,IAAP,CAAY,GAAZ,EAAiB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAC3B;;;;;;;;;;AAYFA,EAAAA,GAAG,CAACO,UAAJ,CAAe,GAAf;AAEA,MAAMC,IAAI,GAAGT,GAAG,CAACU,IAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA5B,EAhB6B,CAkB7B;;AACA,MAAIA,IAAI,CAACM,MAAL,KAAgB,MAApB,EAA4B;AAC1B;AACA;AACAN,IAAAA,IAAI,CAACO,KAAL,CAAWC,OAAX,CAAmB,UAACC,SAAD,EAAe;AAChC,UAAI,CAACA,SAAS,CAACC,SAAf,EAA0B;AACxB;AACD,OAH+B,CAIhC;;;AACAD,MAAAA,SAAS,CAACC,SAAV,CAAoBF,OAApB,CAA4B,UAACG,cAAD,EAAoB;AAC9CT,QAAAA,OAAO,CAACC,GAAR,CAAY;AAACQ,UAAAA,cAAc,EAAdA;AAAD,SAAZ;;AAEA,YAAIA,cAAc,CAACC,OAAnB,EAA4B;AAC1BC,8BAAWC,oBAAX,CAAgCH,cAAhC;AACD;;AAED,YAAIA,cAAc,CAACI,QAAnB,EAA6B;AAC3BF,8BAAWG,qBAAX,CAAiCL,cAAjC;AACD,SAFD,MAEO;AACLT,UAAAA,OAAO,CAACC,GAAR,CACE,2CADF,EAEEQ,cAFF;AAID;AACF,OAfD;AAgBD,KArBD;AAsBD;AACF,CA7CD;eA+CexB,M",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/routes",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== MODULES ===============================================================\nimport express from 'express';\n\n// ===== MESSENGER =============================================================\nimport receiveApi from '../messenger-api-helpers/receive';\n\nconst router = express.Router();\n\n/**\n * This is used so that Facebook can verify that they have\n * the correct Webhook location for your app.\n *\n * The Webhook token must be set in your app's configuration page\n * as well as in your servers environment.\n */\nrouter.get('/', (req, res) => {\n  if (req.query['hub.verify_token'] === process.env.WEBHOOK_TOKEN) {\n    res.send(req.query['hub.challenge']);\n  } else {\n    res.send('Error, wrong token');\n  }\n});\n\n/**\n * Once your Webhook is verified this is where you will receive\n * all interactions from the users of you Messenger Application.\n *\n * You can subscribe to many different types of messages.\n * However for this demo we've only handled what is necessary:\n * 1. Regular messages\n * 2. Postbacks\n */\nrouter.post('/', (req, res) => {\n    /*\n    You must send back a status of 200(success) within 20 seconds\n    to let us know you've successfully received the callback.\n    Otherwise, the request will time out.\n\n    When a request times out from Facebook the service attempts\n    to resend the message.\n\n    This is why it is good to send a response immediately so you\n    don't get duplicate messages in the event that a request takes\n    awhile to process.\n  */\n  res.sendStatus(200);\n\n  const data = req.body;\n  console.log('Webhook POST', JSON.stringify(data));\n\n  // Make sure this is a page subscription\n  if (data.object === 'page') {\n    // Iterate over each entry\n    // There may be multiple if batched\n    data.entry.forEach((pageEntry) => {\n      if (!pageEntry.messaging) {\n        return;\n      }\n      // Iterate over each messaging event and handle accordingly\n      pageEntry.messaging.forEach((messagingEvent) => {\n        console.log({messagingEvent});\n\n        if (messagingEvent.message) {\n          receiveApi.handleReceiveMessage(messagingEvent);\n        }\n\n        if (messagingEvent.postback) {\n          receiveApi.handleReceivePostback(messagingEvent);\n        } else {\n          console.log(\n            'Webhook received unknown messagingEvent: ',\n            messagingEvent\n          );\n        }\n      });\n    });\n  }\n});\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/receive.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/receive.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/receive.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/receive.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
        "sourceFileName": "receive.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _send = _interopRequireDefault(require(\"./send\"));\n\nvar _lists = _interopRequireDefault(require(\"../models/lists\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// ===== MESSENGER =============================================================\n// ===== MODELS ================================================================\n\n/**\n * sendSharedLists - Gets & Sends a list of all lists a user owns.\n * @param   {Number} senderId - FB ID to send to.\n * @param   {String} type - Postback Action type to respond to.\n * @returns {Undefined} - .\n */\nvar sendOwnedLists = function sendOwnedLists(senderId, type) {\n  _lists[\"default\"].getOwnedForUser(senderId).then(function (lists) {\n    _send[\"default\"].sendLists(senderId, type, lists, Number(type.substring(19)));\n  });\n};\n/**\n * sendSharedLists - Gets & Sends a list of all lists a user is associated with.\n * @param   {Number} senderId - FB ID to send to.\n * @param   {String} type - Action type to send.\n * @returns {Undefined} - .\n */\n\n\nvar sendSharedLists = function sendSharedLists(senderId, type) {\n  _lists[\"default\"].getSharedToUser(senderId).then(function (lists) {\n    _send[\"default\"].sendLists(senderId, type, lists, Number(type.substring(22)));\n  });\n};\n/*\n * handleReceivePostback — Postback event handler triggered by a postback\n * action you, the developer, specify on a button in a template. Read more at:\n * developers.facebook.com/docs/messenger-platform/webhook-reference/postback\n */\n\n\nvar handleReceivePostback = function handleReceivePostback(event) {\n  /**\n   * The 'payload' param is a developer-defined field which is\n   * set in a postbackbutton for Structured Messages.\n   *\n   * In this case we've defined our payload in our postback\n   * actions to be a string that represents a JSON object\n   * containing `type` and `data` properties. EG:\n   */\n  var type = event.postback.payload;\n  var senderId = event.sender.id; // Perform an action based on the type of payload received.\n\n  if (type.substring(0, 11) === 'owned_lists') {\n    sendOwnedLists(senderId, type);\n  } else if (type.substring(0, 16) === 'subscribed_lists') {\n    sendSharedLists(senderId, type);\n  } else if (type.substring(0, 11) === 'get_started') {\n    _send[\"default\"].sendWelcomeMessage(senderId);\n\n    return;\n  } else {\n    console.error(\"Unknown Postback called: \".concat(type));\n  }\n};\n/*\n * handleReceiveMessage - Message Event called when a message is sent to\n * your page. The 'message' object format can vary depending on the kind\n * of message that was received. Read more at: https://developers.facebook.com/\n * docs/messenger-platform/webhook-reference/message-received\n */\n\n\nvar handleReceiveMessage = function handleReceiveMessage(event) {\n  var message = event.message;\n  var senderId = event.sender.id; // It's good practice to send the user a read receipt so they know\n  // the bot has seen the message. This can prevent a user\n  // spamming the bot if the requests take some time to return.\n\n  _send[\"default\"].sendReadReceipt(senderId);\n\n  if (message.text) {\n    _send[\"default\"].sendWelcomeMessage(senderId);\n  }\n};\n\nvar _default = {\n  handleReceivePostback: handleReceivePostback,\n  handleReceiveMessage: handleReceiveMessage\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlY2VpdmUuanMiXSwibmFtZXMiOlsic2VuZE93bmVkTGlzdHMiLCJzZW5kZXJJZCIsInR5cGUiLCJMaXN0cyIsImdldE93bmVkRm9yVXNlciIsInRoZW4iLCJsaXN0cyIsInNlbmRBcGkiLCJzZW5kTGlzdHMiLCJOdW1iZXIiLCJzdWJzdHJpbmciLCJzZW5kU2hhcmVkTGlzdHMiLCJnZXRTaGFyZWRUb1VzZXIiLCJoYW5kbGVSZWNlaXZlUG9zdGJhY2siLCJldmVudCIsInBvc3RiYWNrIiwicGF5bG9hZCIsInNlbmRlciIsImlkIiwic2VuZFdlbGNvbWVNZXNzYWdlIiwiY29uc29sZSIsImVycm9yIiwiaGFuZGxlUmVjZWl2ZU1lc3NhZ2UiLCJtZXNzYWdlIiwic2VuZFJlYWRSZWNlaXB0IiwidGV4dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVFBOztBQUdBOzs7O0FBWEE7Ozs7OztBQU9BO0FBR0E7O0FBR0E7Ozs7OztBQU1BLElBQU1BLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsQ0FBQ0MsUUFBRCxFQUFXQyxJQUFYLEVBQW9CO0FBQ3pDQyxvQkFBTUMsZUFBTixDQUFzQkgsUUFBdEIsRUFDR0ksSUFESCxDQUNRLFVBQUNDLEtBQUQsRUFBVztBQUNmQyxxQkFBUUMsU0FBUixDQUFrQlAsUUFBbEIsRUFBNEJDLElBQTVCLEVBQWtDSSxLQUFsQyxFQUF5Q0csTUFBTSxDQUFDUCxJQUFJLENBQUNRLFNBQUwsQ0FBZSxFQUFmLENBQUQsQ0FBL0M7QUFDRCxHQUhIO0FBSUQsQ0FMRDtBQU9BOzs7Ozs7OztBQU1BLElBQU1DLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ1YsUUFBRCxFQUFXQyxJQUFYLEVBQW9CO0FBQzFDQyxvQkFBTVMsZUFBTixDQUFzQlgsUUFBdEIsRUFDR0ksSUFESCxDQUNRLFVBQUNDLEtBQUQsRUFBVztBQUNmQyxxQkFBUUMsU0FBUixDQUFrQlAsUUFBbEIsRUFBNEJDLElBQTVCLEVBQWtDSSxLQUFsQyxFQUF5Q0csTUFBTSxDQUFDUCxJQUFJLENBQUNRLFNBQUwsQ0FBZSxFQUFmLENBQUQsQ0FBL0M7QUFDRCxHQUhIO0FBSUQsQ0FMRDtBQU9BOzs7Ozs7O0FBS0EsSUFBTUcscUJBQXFCLEdBQUcsU0FBeEJBLHFCQUF3QixDQUFDQyxLQUFELEVBQVc7QUFDdkM7Ozs7Ozs7O0FBUUEsTUFBTVosSUFBSSxHQUFHWSxLQUFLLENBQUNDLFFBQU4sQ0FBZUMsT0FBNUI7QUFDQSxNQUFNZixRQUFRLEdBQUdhLEtBQUssQ0FBQ0csTUFBTixDQUFhQyxFQUE5QixDQVZ1QyxDQVl2Qzs7QUFDQSxNQUFJaEIsSUFBSSxDQUFDUSxTQUFMLENBQWUsQ0FBZixFQUFrQixFQUFsQixNQUEwQixhQUE5QixFQUE2QztBQUMzQ1YsSUFBQUEsY0FBYyxDQUFDQyxRQUFELEVBQVdDLElBQVgsQ0FBZDtBQUNELEdBRkQsTUFFTyxJQUFJQSxJQUFJLENBQUNRLFNBQUwsQ0FBZSxDQUFmLEVBQWtCLEVBQWxCLE1BQTBCLGtCQUE5QixFQUFrRDtBQUN2REMsSUFBQUEsZUFBZSxDQUFDVixRQUFELEVBQVdDLElBQVgsQ0FBZjtBQUNELEdBRk0sTUFFQSxJQUFJQSxJQUFJLENBQUNRLFNBQUwsQ0FBZSxDQUFmLEVBQWtCLEVBQWxCLE1BQTBCLGFBQTlCLEVBQTZDO0FBQ2xESCxxQkFBUVksa0JBQVIsQ0FBMkJsQixRQUEzQjs7QUFDQTtBQUNELEdBSE0sTUFHQTtBQUNMbUIsSUFBQUEsT0FBTyxDQUFDQyxLQUFSLG9DQUEwQ25CLElBQTFDO0FBQ0Q7QUFDRixDQXZCRDtBQXlCQTs7Ozs7Ozs7QUFNQSxJQUFNb0Isb0JBQW9CLEdBQUcsU0FBdkJBLG9CQUF1QixDQUFDUixLQUFELEVBQVc7QUFDdEMsTUFBTVMsT0FBTyxHQUFHVCxLQUFLLENBQUNTLE9BQXRCO0FBQ0EsTUFBTXRCLFFBQVEsR0FBR2EsS0FBSyxDQUFDRyxNQUFOLENBQWFDLEVBQTlCLENBRnNDLENBSXRDO0FBQ0E7QUFDQTs7QUFDQVgsbUJBQVFpQixlQUFSLENBQXdCdkIsUUFBeEI7O0FBRUEsTUFBSXNCLE9BQU8sQ0FBQ0UsSUFBWixFQUFrQjtBQUFFbEIscUJBQVFZLGtCQUFSLENBQTJCbEIsUUFBM0I7QUFBdUM7QUFDNUQsQ0FWRDs7ZUFZZTtBQUNiWSxFQUFBQSxxQkFBcUIsRUFBckJBLHFCQURhO0FBRWJTLEVBQUFBLG9CQUFvQixFQUFwQkE7QUFGYSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kZWVwaWthL0RvY3VtZW50cy9HaXRIdWIvZmFjZWJvb2tIYWNrYXRob24vY2hhdC1leHRlbnNpb25zL21lc3Nlbmdlci1hcGktaGVscGVycyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8vID09PT09IE1FU1NFTkdFUiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQgc2VuZEFwaSBmcm9tICcuL3NlbmQnO1xuXG4vLyA9PT09PSBNT0RFTFMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaW1wb3J0IExpc3RzIGZyb20gJy4uL21vZGVscy9saXN0cyc7XG5cbi8qKlxuICogc2VuZFNoYXJlZExpc3RzIC0gR2V0cyAmIFNlbmRzIGEgbGlzdCBvZiBhbGwgbGlzdHMgYSB1c2VyIG93bnMuXG4gKiBAcGFyYW0gICB7TnVtYmVyfSBzZW5kZXJJZCAtIEZCIElEIHRvIHNlbmQgdG8uXG4gKiBAcGFyYW0gICB7U3RyaW5nfSB0eXBlIC0gUG9zdGJhY2sgQWN0aW9uIHR5cGUgdG8gcmVzcG9uZCB0by5cbiAqIEByZXR1cm5zIHtVbmRlZmluZWR9IC0gLlxuICovXG5jb25zdCBzZW5kT3duZWRMaXN0cyA9IChzZW5kZXJJZCwgdHlwZSkgPT4ge1xuICBMaXN0cy5nZXRPd25lZEZvclVzZXIoc2VuZGVySWQpXG4gICAgLnRoZW4oKGxpc3RzKSA9PiB7XG4gICAgICBzZW5kQXBpLnNlbmRMaXN0cyhzZW5kZXJJZCwgdHlwZSwgbGlzdHMsIE51bWJlcih0eXBlLnN1YnN0cmluZygxOSkpKTtcbiAgICB9KTtcbn07XG5cbi8qKlxuICogc2VuZFNoYXJlZExpc3RzIC0gR2V0cyAmIFNlbmRzIGEgbGlzdCBvZiBhbGwgbGlzdHMgYSB1c2VyIGlzIGFzc29jaWF0ZWQgd2l0aC5cbiAqIEBwYXJhbSAgIHtOdW1iZXJ9IHNlbmRlcklkIC0gRkIgSUQgdG8gc2VuZCB0by5cbiAqIEBwYXJhbSAgIHtTdHJpbmd9IHR5cGUgLSBBY3Rpb24gdHlwZSB0byBzZW5kLlxuICogQHJldHVybnMge1VuZGVmaW5lZH0gLSAuXG4gKi9cbmNvbnN0IHNlbmRTaGFyZWRMaXN0cyA9IChzZW5kZXJJZCwgdHlwZSkgPT4ge1xuICBMaXN0cy5nZXRTaGFyZWRUb1VzZXIoc2VuZGVySWQpXG4gICAgLnRoZW4oKGxpc3RzKSA9PiB7XG4gICAgICBzZW5kQXBpLnNlbmRMaXN0cyhzZW5kZXJJZCwgdHlwZSwgbGlzdHMsIE51bWJlcih0eXBlLnN1YnN0cmluZygyMikpKTtcbiAgICB9KTtcbn07XG5cbi8qXG4gKiBoYW5kbGVSZWNlaXZlUG9zdGJhY2sg4oCUIFBvc3RiYWNrIGV2ZW50IGhhbmRsZXIgdHJpZ2dlcmVkIGJ5IGEgcG9zdGJhY2tcbiAqIGFjdGlvbiB5b3UsIHRoZSBkZXZlbG9wZXIsIHNwZWNpZnkgb24gYSBidXR0b24gaW4gYSB0ZW1wbGF0ZS4gUmVhZCBtb3JlIGF0OlxuICogZGV2ZWxvcGVycy5mYWNlYm9vay5jb20vZG9jcy9tZXNzZW5nZXItcGxhdGZvcm0vd2ViaG9vay1yZWZlcmVuY2UvcG9zdGJhY2tcbiAqL1xuY29uc3QgaGFuZGxlUmVjZWl2ZVBvc3RiYWNrID0gKGV2ZW50KSA9PiB7XG4gIC8qKlxuICAgKiBUaGUgJ3BheWxvYWQnIHBhcmFtIGlzIGEgZGV2ZWxvcGVyLWRlZmluZWQgZmllbGQgd2hpY2ggaXNcbiAgICogc2V0IGluIGEgcG9zdGJhY2tidXR0b24gZm9yIFN0cnVjdHVyZWQgTWVzc2FnZXMuXG4gICAqXG4gICAqIEluIHRoaXMgY2FzZSB3ZSd2ZSBkZWZpbmVkIG91ciBwYXlsb2FkIGluIG91ciBwb3N0YmFja1xuICAgKiBhY3Rpb25zIHRvIGJlIGEgc3RyaW5nIHRoYXQgcmVwcmVzZW50cyBhIEpTT04gb2JqZWN0XG4gICAqIGNvbnRhaW5pbmcgYHR5cGVgIGFuZCBgZGF0YWAgcHJvcGVydGllcy4gRUc6XG4gICAqL1xuICBjb25zdCB0eXBlID0gZXZlbnQucG9zdGJhY2sucGF5bG9hZDtcbiAgY29uc3Qgc2VuZGVySWQgPSBldmVudC5zZW5kZXIuaWQ7XG5cbiAgLy8gUGVyZm9ybSBhbiBhY3Rpb24gYmFzZWQgb24gdGhlIHR5cGUgb2YgcGF5bG9hZCByZWNlaXZlZC5cbiAgaWYgKHR5cGUuc3Vic3RyaW5nKDAsIDExKSA9PT0gJ293bmVkX2xpc3RzJykge1xuICAgIHNlbmRPd25lZExpc3RzKHNlbmRlcklkLCB0eXBlKTtcbiAgfSBlbHNlIGlmICh0eXBlLnN1YnN0cmluZygwLCAxNikgPT09ICdzdWJzY3JpYmVkX2xpc3RzJykge1xuICAgIHNlbmRTaGFyZWRMaXN0cyhzZW5kZXJJZCwgdHlwZSk7XG4gIH0gZWxzZSBpZiAodHlwZS5zdWJzdHJpbmcoMCwgMTEpID09PSAnZ2V0X3N0YXJ0ZWQnKSB7XG4gICAgc2VuZEFwaS5zZW5kV2VsY29tZU1lc3NhZ2Uoc2VuZGVySWQpO1xuICAgIHJldHVybjtcbiAgfSBlbHNlIHtcbiAgICBjb25zb2xlLmVycm9yKGBVbmtub3duIFBvc3RiYWNrIGNhbGxlZDogJHt0eXBlfWApO1xuICB9XG59O1xuXG4vKlxuICogaGFuZGxlUmVjZWl2ZU1lc3NhZ2UgLSBNZXNzYWdlIEV2ZW50IGNhbGxlZCB3aGVuIGEgbWVzc2FnZSBpcyBzZW50IHRvXG4gKiB5b3VyIHBhZ2UuIFRoZSAnbWVzc2FnZScgb2JqZWN0IGZvcm1hdCBjYW4gdmFyeSBkZXBlbmRpbmcgb24gdGhlIGtpbmRcbiAqIG9mIG1lc3NhZ2UgdGhhdCB3YXMgcmVjZWl2ZWQuIFJlYWQgbW9yZSBhdDogaHR0cHM6Ly9kZXZlbG9wZXJzLmZhY2Vib29rLmNvbS9cbiAqIGRvY3MvbWVzc2VuZ2VyLXBsYXRmb3JtL3dlYmhvb2stcmVmZXJlbmNlL21lc3NhZ2UtcmVjZWl2ZWRcbiAqL1xuY29uc3QgaGFuZGxlUmVjZWl2ZU1lc3NhZ2UgPSAoZXZlbnQpID0+IHtcbiAgY29uc3QgbWVzc2FnZSA9IGV2ZW50Lm1lc3NhZ2U7XG4gIGNvbnN0IHNlbmRlcklkID0gZXZlbnQuc2VuZGVyLmlkO1xuXG4gIC8vIEl0J3MgZ29vZCBwcmFjdGljZSB0byBzZW5kIHRoZSB1c2VyIGEgcmVhZCByZWNlaXB0IHNvIHRoZXkga25vd1xuICAvLyB0aGUgYm90IGhhcyBzZWVuIHRoZSBtZXNzYWdlLiBUaGlzIGNhbiBwcmV2ZW50IGEgdXNlclxuICAvLyBzcGFtbWluZyB0aGUgYm90IGlmIHRoZSByZXF1ZXN0cyB0YWtlIHNvbWUgdGltZSB0byByZXR1cm4uXG4gIHNlbmRBcGkuc2VuZFJlYWRSZWNlaXB0KHNlbmRlcklkKTtcblxuICBpZiAobWVzc2FnZS50ZXh0KSB7IHNlbmRBcGkuc2VuZFdlbGNvbWVNZXNzYWdlKHNlbmRlcklkKTsgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBoYW5kbGVSZWNlaXZlUG9zdGJhY2ssXG4gIGhhbmRsZVJlY2VpdmVNZXNzYWdlLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "receive.js"
      ],
      "names": [
        "sendOwnedLists",
        "senderId",
        "type",
        "Lists",
        "getOwnedForUser",
        "then",
        "lists",
        "sendApi",
        "sendLists",
        "Number",
        "substring",
        "sendSharedLists",
        "getSharedToUser",
        "handleReceivePostback",
        "event",
        "postback",
        "payload",
        "sender",
        "id",
        "sendWelcomeMessage",
        "console",
        "error",
        "handleReceiveMessage",
        "message",
        "sendReadReceipt",
        "text"
      ],
      "mappings": ";;;;;;;AAQA;;AAGA;;;;AAXA;;;;;;AAOA;AAGA;;AAGA;;;;;;AAMA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAWC,IAAX,EAAoB;AACzCC,oBAAMC,eAAN,CAAsBH,QAAtB,EACGI,IADH,CACQ,UAACC,KAAD,EAAW;AACfC,qBAAQC,SAAR,CAAkBP,QAAlB,EAA4BC,IAA5B,EAAkCI,KAAlC,EAAyCG,MAAM,CAACP,IAAI,CAACQ,SAAL,CAAe,EAAf,CAAD,CAA/C;AACD,GAHH;AAID,CALD;AAOA;;;;;;;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACV,QAAD,EAAWC,IAAX,EAAoB;AAC1CC,oBAAMS,eAAN,CAAsBX,QAAtB,EACGI,IADH,CACQ,UAACC,KAAD,EAAW;AACfC,qBAAQC,SAAR,CAAkBP,QAAlB,EAA4BC,IAA5B,EAAkCI,KAAlC,EAAyCG,MAAM,CAACP,IAAI,CAACQ,SAAL,CAAe,EAAf,CAAD,CAA/C;AACD,GAHH;AAID,CALD;AAOA;;;;;;;AAKA,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AACvC;;;;;;;;AAQA,MAAMZ,IAAI,GAAGY,KAAK,CAACC,QAAN,CAAeC,OAA5B;AACA,MAAMf,QAAQ,GAAGa,KAAK,CAACG,MAAN,CAAaC,EAA9B,CAVuC,CAYvC;;AACA,MAAIhB,IAAI,CAACQ,SAAL,CAAe,CAAf,EAAkB,EAAlB,MAA0B,aAA9B,EAA6C;AAC3CV,IAAAA,cAAc,CAACC,QAAD,EAAWC,IAAX,CAAd;AACD,GAFD,MAEO,IAAIA,IAAI,CAACQ,SAAL,CAAe,CAAf,EAAkB,EAAlB,MAA0B,kBAA9B,EAAkD;AACvDC,IAAAA,eAAe,CAACV,QAAD,EAAWC,IAAX,CAAf;AACD,GAFM,MAEA,IAAIA,IAAI,CAACQ,SAAL,CAAe,CAAf,EAAkB,EAAlB,MAA0B,aAA9B,EAA6C;AAClDH,qBAAQY,kBAAR,CAA2BlB,QAA3B;;AACA;AACD,GAHM,MAGA;AACLmB,IAAAA,OAAO,CAACC,KAAR,oCAA0CnB,IAA1C;AACD;AACF,CAvBD;AAyBA;;;;;;;;AAMA,IAAMoB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACR,KAAD,EAAW;AACtC,MAAMS,OAAO,GAAGT,KAAK,CAACS,OAAtB;AACA,MAAMtB,QAAQ,GAAGa,KAAK,CAACG,MAAN,CAAaC,EAA9B,CAFsC,CAItC;AACA;AACA;;AACAX,mBAAQiB,eAAR,CAAwBvB,QAAxB;;AAEA,MAAIsB,OAAO,CAACE,IAAZ,EAAkB;AAAElB,qBAAQY,kBAAR,CAA2BlB,QAA3B;AAAuC;AAC5D,CAVD;;eAYe;AACbY,EAAAA,qBAAqB,EAArBA,qBADa;AAEbS,EAAAA,oBAAoB,EAApBA;AAFa,C",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== MESSENGER =============================================================\nimport sendApi from './send';\n\n// ===== MODELS ================================================================\nimport Lists from '../models/lists';\n\n/**\n * sendSharedLists - Gets & Sends a list of all lists a user owns.\n * @param   {Number} senderId - FB ID to send to.\n * @param   {String} type - Postback Action type to respond to.\n * @returns {Undefined} - .\n */\nconst sendOwnedLists = (senderId, type) => {\n  Lists.getOwnedForUser(senderId)\n    .then((lists) => {\n      sendApi.sendLists(senderId, type, lists, Number(type.substring(19)));\n    });\n};\n\n/**\n * sendSharedLists - Gets & Sends a list of all lists a user is associated with.\n * @param   {Number} senderId - FB ID to send to.\n * @param   {String} type - Action type to send.\n * @returns {Undefined} - .\n */\nconst sendSharedLists = (senderId, type) => {\n  Lists.getSharedToUser(senderId)\n    .then((lists) => {\n      sendApi.sendLists(senderId, type, lists, Number(type.substring(22)));\n    });\n};\n\n/*\n * handleReceivePostback — Postback event handler triggered by a postback\n * action you, the developer, specify on a button in a template. Read more at:\n * developers.facebook.com/docs/messenger-platform/webhook-reference/postback\n */\nconst handleReceivePostback = (event) => {\n  /**\n   * The 'payload' param is a developer-defined field which is\n   * set in a postbackbutton for Structured Messages.\n   *\n   * In this case we've defined our payload in our postback\n   * actions to be a string that represents a JSON object\n   * containing `type` and `data` properties. EG:\n   */\n  const type = event.postback.payload;\n  const senderId = event.sender.id;\n\n  // Perform an action based on the type of payload received.\n  if (type.substring(0, 11) === 'owned_lists') {\n    sendOwnedLists(senderId, type);\n  } else if (type.substring(0, 16) === 'subscribed_lists') {\n    sendSharedLists(senderId, type);\n  } else if (type.substring(0, 11) === 'get_started') {\n    sendApi.sendWelcomeMessage(senderId);\n    return;\n  } else {\n    console.error(`Unknown Postback called: ${type}`);\n  }\n};\n\n/*\n * handleReceiveMessage - Message Event called when a message is sent to\n * your page. The 'message' object format can vary depending on the kind\n * of message that was received. Read more at: https://developers.facebook.com/\n * docs/messenger-platform/webhook-reference/message-received\n */\nconst handleReceiveMessage = (event) => {\n  const message = event.message;\n  const senderId = event.sender.id;\n\n  // It's good practice to send the user a read receipt so they know\n  // the bot has seen the message. This can prevent a user\n  // spamming the bot if the requests take some time to return.\n  sendApi.sendReadReceipt(senderId);\n\n  if (message.text) { sendApi.sendWelcomeMessage(senderId); }\n};\n\nexport default {\n  handleReceivePostback,\n  handleReceiveMessage,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/send.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/send.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/send.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/send.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
        "sourceFileName": "send.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _castArray = _interopRequireDefault(require(\"lodash/castArray\"));\n\nvar _messages = _interopRequireDefault(require(\"./messages\"));\n\nvar _api = _interopRequireDefault(require(\"./api\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar APP_URL = process.env.APP_URL; // Turns typing indicator on.\n\nvar typingOn = function typingOn(recipientId) {\n  return {\n    recipient: {\n      id: recipientId\n    },\n    sender_action: 'typing_on' // eslint-disable-line camelcase\n\n  };\n}; // Wraps a message JSON object with recipient information.\n\n\nvar messageToJSON = function messageToJSON(recipientId, messagePayload) {\n  return {\n    recipient: {\n      id: recipientId\n    },\n    message: messagePayload\n  };\n}; // Send one or more messages using the Send API.\n\n\nvar sendMessage = function sendMessage(recipientId, messagePayloads) {\n  var messagePayloadArray = (0, _castArray[\"default\"])(messagePayloads).map(function (messagePayload) {\n    return messageToJSON(recipientId, messagePayload);\n  });\n\n  _api[\"default\"].callMessagesAPI([typingOn(recipientId)].concat(_toConsumableArray(messagePayloadArray)));\n}; // Send a read receipt to indicate the message has been read\n\n\nvar sendReadReceipt = function sendReadReceipt(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    sender_action: 'mark_seen' // eslint-disable-line camelcase\n\n  };\n\n  _api[\"default\"].callMessagesAPI(messageData);\n}; // Send the initial message welcoming & describing the bot.\n\n\nvar sendWelcomeMessage = function sendWelcomeMessage(recipientId) {\n  sendMessage(recipientId, _messages[\"default\"].welcomeMessage(APP_URL));\n}; // Let the user know that they don't have any lists yet.\n\n\nvar sendNoListsYet = function sendNoListsYet(recipientId) {\n  sendMessage(recipientId, _messages[\"default\"].noListsMessage(APP_URL));\n}; // Show user the lists they are associated with.\n\n\nvar sendLists = function sendLists(recipientId, action, lists, offset) {\n  // Show different responses based on number of lists.\n  switch (lists.length) {\n    case 0:\n      // Tell User they have no lists.\n      sendNoListsYet(recipientId);\n      break;\n\n    case 1:\n      // Show a single list — List view templates require\n      // a minimum of 2 Elements. Rease More at:\n      // https://developers.facebook.com/docs/\n      // messenger-platform/send-api-reference/list-template\n      var _lists$ = lists[0],\n          id = _lists$.id,\n          title = _lists$.title;\n      sendMessage(recipientId, _messages[\"default\"].shareListMessage(APP_URL, id, title, 'Open List'));\n      break;\n\n    default:\n      // Show a paginated set of lists — List view templates require\n      // a maximum of 4 Elements. Rease More at:\n      // https://developers.facebook.com/docs/\n      // messenger-platform/send-api-reference/list-template\n      sendMessage(recipientId, _messages[\"default\"].paginatedListsMessage(APP_URL, action, lists, offset));\n      break;\n  }\n}; // Send a message notifying the user their list has been created.\n\n\nvar sendListCreated = function sendListCreated(recipientId, listId, title) {\n  sendMessage(recipientId, [_messages[\"default\"].listCreatedMessage, _messages[\"default\"].shareListMessage(APP_URL, listId, title, 'Open List')]);\n}; // Send a message notifying the user their list can be shared.\n\n\nvar sendListShareItem = function sendListShareItem(recipientId, listId, title) {\n  sendMessage(recipientId, [_messages[\"default\"].listShareMessage, _messages[\"default\"].shareListMessage(APP_URL, listId, title, 'Open List')]);\n};\n\nvar _default = {\n  sendListCreated: sendListCreated,\n  sendLists: sendLists,\n  sendListShareItem: sendListShareItem,\n  sendMessage: sendMessage,\n  sendNoListsYet: sendNoListsYet,\n  sendReadReceipt: sendReadReceipt,\n  sendWelcomeMessage: sendWelcomeMessage\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "send.js"
      ],
      "names": [
        "APP_URL",
        "process",
        "env",
        "typingOn",
        "recipientId",
        "recipient",
        "id",
        "sender_action",
        "messageToJSON",
        "messagePayload",
        "message",
        "sendMessage",
        "messagePayloads",
        "messagePayloadArray",
        "map",
        "api",
        "callMessagesAPI",
        "sendReadReceipt",
        "messageData",
        "sendWelcomeMessage",
        "messages",
        "welcomeMessage",
        "sendNoListsYet",
        "noListsMessage",
        "sendLists",
        "action",
        "lists",
        "offset",
        "length",
        "title",
        "shareListMessage",
        "paginatedListsMessage",
        "sendListCreated",
        "listId",
        "listCreatedMessage",
        "sendListShareItem",
        "listShareMessage"
      ],
      "mappings": ";;;;;;;AAQA;;AAGA;;AACA;;;;;;;;;;;;IAEOA,O,GAAWC,OAAO,CAACC,G,CAAnBF,O,EAEP;;AACA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD,EAAiB;AAChC,SAAO;AACLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAEF;AADK,KADN;AAILG,IAAAA,aAAa,EAAE,WAJV,CAIuB;;AAJvB,GAAP;AAMD,CAPD,C,CASA;;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACJ,WAAD,EAAcK,cAAd,EAAiC;AACrD,SAAO;AACLJ,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAEF;AADK,KADN;AAILM,IAAAA,OAAO,EAAED;AAJJ,GAAP;AAMD,CAPD,C,CASA;;;AACA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACP,WAAD,EAAcQ,eAAd,EAAkC;AACpD,MAAMC,mBAAmB,GAAG,2BAAUD,eAAV,EACzBE,GADyB,CACrB,UAACL,cAAD;AAAA,WAAoBD,aAAa,CAACJ,WAAD,EAAcK,cAAd,CAAjC;AAAA,GADqB,CAA5B;;AAGAM,kBAAIC,eAAJ,EACEb,QAAQ,CAACC,WAAD,CADV,4BAEKS,mBAFL;AAID,CARD,C,CAUA;;;AACA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACb,WAAD,EAAiB;AACvC,MAAMc,WAAW,GAAG;AAClBb,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAEF;AADK,KADO;AAIlBG,IAAAA,aAAa,EAAE,WAJG,CAIU;;AAJV,GAApB;;AAOAQ,kBAAIC,eAAJ,CAAoBE,WAApB;AACD,CATD,C,CAWA;;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACf,WAAD,EAAiB;AAC1CO,EAAAA,WAAW,CAACP,WAAD,EAAcgB,qBAASC,cAAT,CAAwBrB,OAAxB,CAAd,CAAX;AACD,CAFD,C,CAIA;;;AACA,IAAMsB,cAAc,GAAG,SAAjBA,cAAiB,CAAClB,WAAD,EAAiB;AACtCO,EAAAA,WAAW,CAACP,WAAD,EAAcgB,qBAASG,cAAT,CAAwBvB,OAAxB,CAAd,CAAX;AACD,CAFD,C,CAIA;;;AACA,IAAMwB,SAAS,GAAG,SAAZA,SAAY,CAACpB,WAAD,EAAcqB,MAAd,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAwC;AACxD;AACA,UAAQD,KAAK,CAACE,MAAd;AACA,SAAK,CAAL;AACE;AACAN,MAAAA,cAAc,CAAClB,WAAD,CAAd;AACA;;AACF,SAAK,CAAL;AACE;AACA;AACA;AACA;AAJF,oBAKsBsB,KAAK,CAAC,CAAD,CAL3B;AAAA,UAKSpB,EALT,WAKSA,EALT;AAAA,UAKauB,KALb,WAKaA,KALb;AAOElB,MAAAA,WAAW,CACTP,WADS,EAETgB,qBAASU,gBAAT,CAA0B9B,OAA1B,EAAmCM,EAAnC,EAAuCuB,KAAvC,EAA8C,WAA9C,CAFS,CAAX;AAKA;;AACF;AACE;AACA;AACA;AACA;AACAlB,MAAAA,WAAW,CACTP,WADS,EAETgB,qBAASW,qBAAT,CAA+B/B,OAA/B,EAAwCyB,MAAxC,EAAgDC,KAAhD,EAAuDC,MAAvD,CAFS,CAAX;AAKA;AA5BF;AA8BD,CAhCD,C,CAkCA;;;AACA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAC5B,WAAD,EAAc6B,MAAd,EAAsBJ,KAAtB,EAAgC;AACtDlB,EAAAA,WAAW,CACTP,WADS,EAET,CACEgB,qBAASc,kBADX,EAEEd,qBAASU,gBAAT,CAA0B9B,OAA1B,EAAmCiC,MAAnC,EAA2CJ,KAA3C,EAAkD,WAAlD,CAFF,CAFS,CAAX;AAMD,CAPD,C,CASA;;;AACA,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC/B,WAAD,EAAc6B,MAAd,EAAsBJ,KAAtB,EAAgC;AACxDlB,EAAAA,WAAW,CACTP,WADS,EAET,CACEgB,qBAASgB,gBADX,EAEEhB,qBAASU,gBAAT,CAA0B9B,OAA1B,EAAmCiC,MAAnC,EAA2CJ,KAA3C,EAAkD,WAAlD,CAFF,CAFS,CAAX;AAMD,CAPD;;eASe;AACbG,EAAAA,eAAe,EAAfA,eADa;AAEbR,EAAAA,SAAS,EAATA,SAFa;AAGbW,EAAAA,iBAAiB,EAAjBA,iBAHa;AAIbxB,EAAAA,WAAW,EAAXA,WAJa;AAKbW,EAAAA,cAAc,EAAdA,cALa;AAMbL,EAAAA,eAAe,EAAfA,eANa;AAObE,EAAAA,kBAAkB,EAAlBA;AAPa,C",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== LODASH ================================================================\nimport castArray from 'lodash/castArray';\n\n// ===== MESSENGER =============================================================\nimport messages from './messages';\nimport api from './api';\n\nconst {APP_URL} = process.env;\n\n// Turns typing indicator on.\nconst typingOn = (recipientId) => {\n  return {\n    recipient: {\n      id: recipientId,\n    },\n    sender_action: 'typing_on', // eslint-disable-line camelcase\n  };\n};\n\n// Wraps a message JSON object with recipient information.\nconst messageToJSON = (recipientId, messagePayload) => {\n  return {\n    recipient: {\n      id: recipientId,\n    },\n    message: messagePayload,\n  };\n};\n\n// Send one or more messages using the Send API.\nconst sendMessage = (recipientId, messagePayloads) => {\n  const messagePayloadArray = castArray(messagePayloads)\n    .map((messagePayload) => messageToJSON(recipientId, messagePayload));\n\n  api.callMessagesAPI([\n    typingOn(recipientId),\n    ...messagePayloadArray,\n  ]);\n};\n\n// Send a read receipt to indicate the message has been read\nconst sendReadReceipt = (recipientId) => {\n  const messageData = {\n    recipient: {\n      id: recipientId,\n    },\n    sender_action: 'mark_seen', // eslint-disable-line camelcase\n  };\n\n  api.callMessagesAPI(messageData);\n};\n\n// Send the initial message welcoming & describing the bot.\nconst sendWelcomeMessage = (recipientId) => {\n  sendMessage(recipientId, messages.welcomeMessage(APP_URL));\n};\n\n// Let the user know that they don't have any lists yet.\nconst sendNoListsYet = (recipientId) => {\n  sendMessage(recipientId, messages.noListsMessage(APP_URL));\n};\n\n// Show user the lists they are associated with.\nconst sendLists = (recipientId, action, lists, offset) => {\n  // Show different responses based on number of lists.\n  switch (lists.length) {\n  case 0:\n    // Tell User they have no lists.\n    sendNoListsYet(recipientId);\n    break;\n  case 1:\n    // Show a single list — List view templates require\n    // a minimum of 2 Elements. Rease More at:\n    // https://developers.facebook.com/docs/\n    // messenger-platform/send-api-reference/list-template\n    const {id, title} = lists[0];\n\n    sendMessage(\n      recipientId,\n      messages.shareListMessage(APP_URL, id, title, 'Open List'),\n    );\n\n    break;\n  default:\n    // Show a paginated set of lists — List view templates require\n    // a maximum of 4 Elements. Rease More at:\n    // https://developers.facebook.com/docs/\n    // messenger-platform/send-api-reference/list-template\n    sendMessage(\n      recipientId,\n      messages.paginatedListsMessage(APP_URL, action, lists, offset)\n    );\n\n    break;\n  }\n};\n\n// Send a message notifying the user their list has been created.\nconst sendListCreated = (recipientId, listId, title) => {\n  sendMessage(\n    recipientId,\n    [\n      messages.listCreatedMessage,\n      messages.shareListMessage(APP_URL, listId, title, 'Open List'),\n    ]);\n};\n\n// Send a message notifying the user their list can be shared.\nconst sendListShareItem = (recipientId, listId, title) => {\n  sendMessage(\n    recipientId,\n    [\n      messages.listShareMessage,\n      messages.shareListMessage(APP_URL, listId, title, 'Open List'),\n    ]);\n};\n\nexport default {\n  sendListCreated,\n  sendLists,\n  sendListShareItem,\n  sendMessage,\n  sendNoListsYet,\n  sendReadReceipt,\n  sendWelcomeMessage,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/messages.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/messages.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/messages.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/messages.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
        "sourceFileName": "messages.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable camelcase */\n\n/* eslint-disable max-len */\n\n/*\n * BUTTONS\n *\n * Objects and methods that create objects that represent\n * buttons to be used in various UI elements.\n */\n\n/**\n * Button for opening a specific list in a webview\n *\n * @param {string} listUrl - URL for a specific list.\n * @param {string} buttonText - Text for the action button.\n * @returns {object} -\n *   Message to create a button pointing to the list in a webview.\n */\nvar openExistingListButton = function openExistingListButton(listUrl) {\n  var buttonText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Edit List';\n  return {\n    type: 'web_url',\n    title: buttonText,\n    url: listUrl,\n    messenger_extensions: true,\n    webview_height_ratio: 'tall'\n  };\n};\n/**\n * Button for opening a new list in a webview\n *\n * @param {string} apiUri - Hostname of the server.\n * @param {string=} buttonTitle - Button title.\n * @returns {object} -\n *   Message to create a button pointing to the new list form.\n */\n\n\nvar createListButton = function createListButton(apiUri) {\n  var buttonTitle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Create a List';\n  return {\n    type: 'web_url',\n    url: \"\".concat(apiUri, \"/lists/new\"),\n    title: buttonTitle,\n    webview_height_ratio: 'tall',\n    messenger_extensions: true\n  };\n};\n/*\n * MESSAGES\n *\n * Objects and methods that create objects that represent\n * messages sent to Messenger users.\n */\n\n/**\n * Message that welcomes the user to the bot\n *\n * @param {string} apiUri - Hostname of the server.\n * @returns {object} - Message with welcome text and a button to start a new list.\n */\n\n\nvar welcomeMessage = function welcomeMessage(apiUri) {\n  return {\n    attachment: {\n      type: 'template',\n      payload: {\n        template_type: 'button',\n        text: 'Ready to make a shared list with your friends? Everyone can add items, check things off, and stay in sync.',\n        buttons: [createListButton(apiUri)]\n      }\n    }\n  };\n};\n/**\n * Message for when the user has no lists yet.\n *\n * @param {string} apiUri - Hostname of the server.\n * @returns {object} - Message with welcome text and a button to start a new list.\n */\n\n\nvar noListsMessage = function noListsMessage(apiUri) {\n  return {\n    attachment: {\n      type: 'template',\n      payload: {\n        template_type: 'button',\n        text: 'It looks like you don’t have any lists yet. Would you like to create one?',\n        buttons: [createListButton(apiUri)]\n      }\n    }\n  };\n};\n/**\n * Helper to construct a URI for the desired list\n *\n * @param {string} apiUri -\n *   Base URI for the server.\n *   Because this moduele may be called from the front end, we need to pass it explicitely.\n * @param {int} listId - The list ID.\n * @returns {string} - URI for the required list.\n */\n\n\nvar listUrl = function listUrl(apiUri, listId) {\n  return \"\".concat(apiUri, \"/lists/\").concat(listId);\n};\n/**\n * A single list for the list template.\n * The name here is to distinguish lists and list templates.\n *\n * @param {string} id            - List ID.\n * @param {string} apiUri        - Url of endpoint.\n * @param {string} subscriberIds - Ids of each subscriber.\n * @param {string} title         - List title.\n * @returns {object} - Message with welcome text and a button to start a new list.\n */\n\n\nvar listElement = function listElement(_ref, apiUri) {\n  var id = _ref.id,\n      subscriberIds = _ref.subscriberIds,\n      title = _ref.title;\n  return {\n    title: title,\n    subtitle: \"Shared with \".concat(_toConsumableArray(subscriberIds).length, \" people\"),\n    default_action: {\n      type: 'web_url',\n      url: listUrl(apiUri, id),\n      messenger_extensions: true,\n      webview_height_ratio: 'tall'\n    }\n  };\n};\n/**\n * Messages for a list template of lists (meta!), offset by how many\n * \"read mores\" the user has been through\n *\n * @param {string} apiUri - Hostname of the server.\n * @param {string} action - The postback action\n * @param {Array.<Object>} lists - All of the lists to be (eventually) displayed.\n * @param {int=} offset - How far through the list we are so far.\n * @returns {object} - Message with welcome text and a button to start a new list.\n */\n\n\nvar paginatedListsMessage = function paginatedListsMessage(apiUri, action, lists) {\n  var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var pageLists = lists.slice(offset, offset + 4);\n  var buttons;\n\n  if (lists.length > offset + 4) {\n    buttons = [{\n      title: 'View More',\n      type: 'postback',\n      payload: \"\".concat(action, \"_OFFSET_\").concat(offset + 4)\n    }];\n  }\n\n  return {\n    attachment: {\n      type: 'template',\n      payload: {\n        template_type: 'list',\n        top_element_style: 'compact',\n        elements: pageLists.map(function (list) {\n          return listElement(list, apiUri);\n        }),\n        buttons: buttons\n      }\n    }\n  };\n};\n/**\n * Message that informs the user that their list has been created.\n */\n\n\nvar listCreatedMessage = {\n  text: 'Your list was created.'\n};\n/**\n * Message that informs the user that their list can be shared.\n */\n\nvar listShareMessage = {\n  text: 'To share the list, simply forward the item below to your friends.'\n};\n/**\n * Message template for sharing a list with another user\n *\n * @param {string} apiUri - Application basename\n * @param {string} listId - The ID for list to be shared\n * @param {string} title - Title of the list\n * @param {string} buttonText - Text for the action button.\n * @returns {object} - Message to configure the customized sharing menu.\n */\n\nvar shareListMessage = function shareListMessage(apiUri, listId, title, buttonText) {\n  var urlToList = listUrl(apiUri, listId);\n  console.log({\n    urlToList: urlToList\n  });\n  return {\n    attachment: {\n      type: 'template',\n      payload: {\n        template_type: 'generic',\n        elements: [{\n          title: title,\n          image_url: \"\".concat(apiUri, \"/media/button-cover.png\"),\n          subtitle: 'A shared list from Tasks',\n          default_action: {\n            type: 'web_url',\n            url: urlToList,\n            messenger_extensions: true\n          },\n          buttons: [openExistingListButton(urlToList, buttonText)]\n        }]\n      }\n    }\n  };\n};\n\nvar _default = {\n  welcomeMessage: welcomeMessage,\n  listCreatedMessage: listCreatedMessage,\n  listShareMessage: listShareMessage,\n  paginatedListsMessage: paginatedListsMessage,\n  createListButton: createListButton,\n  noListsMessage: noListsMessage,\n  shareListMessage: shareListMessage\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "messages.js"
      ],
      "names": [
        "openExistingListButton",
        "listUrl",
        "buttonText",
        "type",
        "title",
        "url",
        "messenger_extensions",
        "webview_height_ratio",
        "createListButton",
        "apiUri",
        "buttonTitle",
        "welcomeMessage",
        "attachment",
        "payload",
        "template_type",
        "text",
        "buttons",
        "noListsMessage",
        "listId",
        "listElement",
        "id",
        "subscriberIds",
        "subtitle",
        "length",
        "default_action",
        "paginatedListsMessage",
        "action",
        "lists",
        "offset",
        "pageLists",
        "slice",
        "top_element_style",
        "elements",
        "map",
        "list",
        "listCreatedMessage",
        "listShareMessage",
        "shareListMessage",
        "urlToList",
        "console",
        "log",
        "image_url"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;;;;;;AAOA;;AACA;;AAEA;;;;;;;AAOA;;;;;;;;AAQA,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,OAAD,EAAuC;AAAA,MAA7BC,UAA6B,uEAAhB,WAAgB;AACpE,SAAO;AACLC,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,KAAK,EAAEF,UAFF;AAGLG,IAAAA,GAAG,EAAEJ,OAHA;AAILK,IAAAA,oBAAoB,EAAE,IAJjB;AAKLC,IAAAA,oBAAoB,EAAE;AALjB,GAAP;AAOD,CARD;AAUA;;;;;;;;;;AAQA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAA2C;AAAA,MAAlCC,WAAkC,uEAApB,eAAoB;AAClE,SAAO;AACLP,IAAAA,IAAI,EAAE,SADD;AAELE,IAAAA,GAAG,YAAKI,MAAL,eAFE;AAGLL,IAAAA,KAAK,EAAEM,WAHF;AAILH,IAAAA,oBAAoB,EAAE,MAJjB;AAKLD,IAAAA,oBAAoB,EAAE;AALjB,GAAP;AAOD,CARD;AAUA;;;;;;;AAOA;;;;;;;;AAMA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACF,MAAD,EAAY;AACjC,SAAO;AACLG,IAAAA,UAAU,EAAE;AACVT,MAAAA,IAAI,EAAE,UADI;AAEVU,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,QADR;AAEPC,QAAAA,IAAI,EAAE,4GAFC;AAGPC,QAAAA,OAAO,EAAE,CACPR,gBAAgB,CAACC,MAAD,CADT;AAHF;AAFC;AADP,GAAP;AAYD,CAbD;AAeA;;;;;;;;AAMA,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACR,MAAD,EAAY;AACjC,SAAO;AACLG,IAAAA,UAAU,EAAE;AACVT,MAAAA,IAAI,EAAE,UADI;AAEVU,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,QADR;AAEPC,QAAAA,IAAI,EAAE,2EAFC;AAGPC,QAAAA,OAAO,EAAE,CACPR,gBAAgB,CAACC,MAAD,CADT;AAHF;AAFC;AADP,GAAP;AAYD,CAbD;AAeA;;;;;;;;;;;AASA,IAAMR,OAAO,GAAG,SAAVA,OAAU,CAACQ,MAAD,EAASS,MAAT;AAAA,mBAAuBT,MAAvB,oBAAuCS,MAAvC;AAAA,CAAhB;AAEA;;;;;;;;;;;;AAUA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA6BV,MAA7B,EAAwC;AAAA,MAAtCW,EAAsC,QAAtCA,EAAsC;AAAA,MAAlCC,aAAkC,QAAlCA,aAAkC;AAAA,MAAnBjB,KAAmB,QAAnBA,KAAmB;AAC1D,SAAO;AACLA,IAAAA,KAAK,EAAEA,KADF;AAELkB,IAAAA,QAAQ,wBAAiB,mBAAID,aAAJ,EAAmBE,MAApC,YAFH;AAGLC,IAAAA,cAAc,EAAE;AACdrB,MAAAA,IAAI,EAAE,SADQ;AAEdE,MAAAA,GAAG,EAAEJ,OAAO,CAACQ,MAAD,EAASW,EAAT,CAFE;AAGdd,MAAAA,oBAAoB,EAAE,IAHR;AAIdC,MAAAA,oBAAoB,EAAE;AAJR;AAHX,GAAP;AAUD,CAXD;AAaA;;;;;;;;;;;;AAUA,IAAMkB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAChB,MAAD,EAASiB,MAAT,EAAiBC,KAAjB,EAAuC;AAAA,MAAfC,MAAe,uEAAN,CAAM;AACnE,MAAMC,SAAS,GAAGF,KAAK,CAACG,KAAN,CAAYF,MAAZ,EAAoBA,MAAM,GAAG,CAA7B,CAAlB;AAEA,MAAIZ,OAAJ;;AACA,MAAIW,KAAK,CAACJ,MAAN,GAAgBK,MAAM,GAAG,CAA7B,EAAiC;AAC/BZ,IAAAA,OAAO,GAAG,CACR;AACEZ,MAAAA,KAAK,EAAE,WADT;AAEED,MAAAA,IAAI,EAAE,UAFR;AAGEU,MAAAA,OAAO,YAAKa,MAAL,qBAAsBE,MAAM,GAAG,CAA/B;AAHT,KADQ,CAAV;AAOD;;AAED,SAAO;AACLhB,IAAAA,UAAU,EAAE;AACVT,MAAAA,IAAI,EAAE,UADI;AAEVU,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,MADR;AAEPiB,QAAAA,iBAAiB,EAAE,SAFZ;AAGPC,QAAAA,QAAQ,EAAEH,SAAS,CAACI,GAAV,CAAc,UAACC,IAAD;AAAA,iBAAUf,WAAW,CAACe,IAAD,EAAOzB,MAAP,CAArB;AAAA,SAAd,CAHH;AAIPO,QAAAA,OAAO,EAAPA;AAJO;AAFC;AADP,GAAP;AAWD,CAzBD;AA2BA;;;;;AAGA,IAAMmB,kBAAkB,GAAG;AACzBpB,EAAAA,IAAI,EAAE;AADmB,CAA3B;AAIA;;;;AAGA,IAAMqB,gBAAgB,GAAG;AACvBrB,EAAAA,IAAI,EAAE;AADiB,CAAzB;AAIA;;;;;;;;;;AASA,IAAMsB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC5B,MAAD,EAASS,MAAT,EAAiBd,KAAjB,EAAwBF,UAAxB,EAAuC;AAC9D,MAAMoC,SAAS,GAAGrC,OAAO,CAACQ,MAAD,EAASS,MAAT,CAAzB;AACAqB,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA,SAAS,EAATA;AAAD,GAAZ;AACA,SAAO;AACL1B,IAAAA,UAAU,EAAE;AACVT,MAAAA,IAAI,EAAE,UADI;AAEVU,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,SADR;AAEPkB,QAAAA,QAAQ,EAAE,CAAC;AACT5B,UAAAA,KAAK,EAAEA,KADE;AAETqC,UAAAA,SAAS,YAAKhC,MAAL,4BAFA;AAGTa,UAAAA,QAAQ,EAAE,0BAHD;AAITE,UAAAA,cAAc,EAAE;AACdrB,YAAAA,IAAI,EAAE,SADQ;AAEdE,YAAAA,GAAG,EAAEiC,SAFS;AAGdhC,YAAAA,oBAAoB,EAAE;AAHR,WAJP;AASTU,UAAAA,OAAO,EAAE,CAAChB,sBAAsB,CAACsC,SAAD,EAAYpC,UAAZ,CAAvB;AATA,SAAD;AAFH;AAFC;AADP,GAAP;AAmBD,CAtBD;;eAwBe;AACbS,EAAAA,cAAc,EAAdA,cADa;AAEbwB,EAAAA,kBAAkB,EAAlBA,kBAFa;AAGbC,EAAAA,gBAAgB,EAAhBA,gBAHa;AAIbX,EAAAA,qBAAqB,EAArBA,qBAJa;AAKbjB,EAAAA,gBAAgB,EAAhBA,gBALa;AAMbS,EAAAA,cAAc,EAAdA,cANa;AAOboB,EAAAA,gBAAgB,EAAhBA;AAPa,C",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable camelcase */\n/* eslint-disable max-len */\n\n/*\n * BUTTONS\n *\n * Objects and methods that create objects that represent\n * buttons to be used in various UI elements.\n */\n\n/**\n * Button for opening a specific list in a webview\n *\n * @param {string} listUrl - URL for a specific list.\n * @param {string} buttonText - Text for the action button.\n * @returns {object} -\n *   Message to create a button pointing to the list in a webview.\n */\nconst openExistingListButton = (listUrl, buttonText = 'Edit List') => {\n  return {\n    type: 'web_url',\n    title: buttonText,\n    url: listUrl,\n    messenger_extensions: true,\n    webview_height_ratio: 'tall',\n  };\n};\n\n/**\n * Button for opening a new list in a webview\n *\n * @param {string} apiUri - Hostname of the server.\n * @param {string=} buttonTitle - Button title.\n * @returns {object} -\n *   Message to create a button pointing to the new list form.\n */\nconst createListButton = (apiUri, buttonTitle = 'Create a List') => {\n  return {\n    type: 'web_url',\n    url: `${apiUri}/lists/new`,\n    title: buttonTitle,\n    webview_height_ratio: 'tall',\n    messenger_extensions: true,\n  };\n};\n\n/*\n * MESSAGES\n *\n * Objects and methods that create objects that represent\n * messages sent to Messenger users.\n */\n\n/**\n * Message that welcomes the user to the bot\n *\n * @param {string} apiUri - Hostname of the server.\n * @returns {object} - Message with welcome text and a button to start a new list.\n */\nconst welcomeMessage = (apiUri) => {\n  return {\n    attachment: {\n      type: 'template',\n      payload: {\n        template_type: 'button',\n        text: 'Ready to make a shared list with your friends? Everyone can add items, check things off, and stay in sync.',\n        buttons: [\n          createListButton(apiUri),\n        ],\n      },\n    },\n  };\n};\n\n/**\n * Message for when the user has no lists yet.\n *\n * @param {string} apiUri - Hostname of the server.\n * @returns {object} - Message with welcome text and a button to start a new list.\n */\nconst noListsMessage = (apiUri) => {\n  return {\n    attachment: {\n      type: 'template',\n      payload: {\n        template_type: 'button',\n        text: 'It looks like you don’t have any lists yet. Would you like to create one?',\n        buttons: [\n          createListButton(apiUri),\n        ],\n      },\n    },\n  };\n};\n\n/**\n * Helper to construct a URI for the desired list\n *\n * @param {string} apiUri -\n *   Base URI for the server.\n *   Because this moduele may be called from the front end, we need to pass it explicitely.\n * @param {int} listId - The list ID.\n * @returns {string} - URI for the required list.\n */\nconst listUrl = (apiUri, listId) => `${apiUri}/lists/${listId}`;\n\n/**\n * A single list for the list template.\n * The name here is to distinguish lists and list templates.\n *\n * @param {string} id            - List ID.\n * @param {string} apiUri        - Url of endpoint.\n * @param {string} subscriberIds - Ids of each subscriber.\n * @param {string} title         - List title.\n * @returns {object} - Message with welcome text and a button to start a new list.\n */\nconst listElement = ({id, subscriberIds, title}, apiUri) => {\n  return {\n    title: title,\n    subtitle: `Shared with ${[...subscriberIds].length} people`,\n    default_action: {\n      type: 'web_url',\n      url: listUrl(apiUri, id),\n      messenger_extensions: true,\n      webview_height_ratio: 'tall',\n    },\n  };\n};\n\n/**\n * Messages for a list template of lists (meta!), offset by how many\n * \"read mores\" the user has been through\n *\n * @param {string} apiUri - Hostname of the server.\n * @param {string} action - The postback action\n * @param {Array.<Object>} lists - All of the lists to be (eventually) displayed.\n * @param {int=} offset - How far through the list we are so far.\n * @returns {object} - Message with welcome text and a button to start a new list.\n */\nconst paginatedListsMessage = (apiUri, action, lists, offset = 0) => {\n  const pageLists = lists.slice(offset, offset + 4);\n\n  let buttons;\n  if (lists.length > (offset + 4)) {\n    buttons = [\n      {\n        title: 'View More',\n        type: 'postback',\n        payload: `${action}_OFFSET_${offset + 4}`,\n      },\n    ];\n  }\n\n  return {\n    attachment: {\n      type: 'template',\n      payload: {\n        template_type: 'list',\n        top_element_style: 'compact',\n        elements: pageLists.map((list) => listElement(list, apiUri)),\n        buttons,\n      },\n    },\n  };\n};\n\n/**\n * Message that informs the user that their list has been created.\n */\nconst listCreatedMessage = {\n  text: 'Your list was created.',\n};\n\n/**\n * Message that informs the user that their list can be shared.\n */\nconst listShareMessage = {\n  text: 'To share the list, simply forward the item below to your friends.',\n};\n\n/**\n * Message template for sharing a list with another user\n *\n * @param {string} apiUri - Application basename\n * @param {string} listId - The ID for list to be shared\n * @param {string} title - Title of the list\n * @param {string} buttonText - Text for the action button.\n * @returns {object} - Message to configure the customized sharing menu.\n */\nconst shareListMessage = (apiUri, listId, title, buttonText) => {\n  const urlToList = listUrl(apiUri, listId);\n  console.log({urlToList});\n  return {\n    attachment: {\n      type: 'template',\n      payload: {\n        template_type: 'generic',\n        elements: [{\n          title: title,\n          image_url: `${apiUri}/media/button-cover.png`,\n          subtitle: 'A shared list from Tasks',\n          default_action: {\n            type: 'web_url',\n            url: urlToList,\n            messenger_extensions: true,\n          },\n          buttons: [openExistingListButton(urlToList, buttonText)],\n        }],\n      },\n    },\n  };\n};\n\nexport default {\n  welcomeMessage,\n  listCreatedMessage,\n  listShareMessage,\n  paginatedListsMessage,\n  createListButton,\n  noListsMessage,\n  shareListMessage,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets/index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = attachSockets;\n\nvar _listSocket = _interopRequireDefault(require(\"./list-socket\"));\n\nvar _userSocket = _interopRequireDefault(require(\"./user-socket\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// ===== SOCKETS ===============================================================\nvar socketUsers = new Map(); // {socketId: {userId, listId}}\n\nfunction attachSockets(io) {\n  io.on('connection', function (socket) {\n    var allInRoom = function allInRoom(roomId) {\n      return io.sockets[\"in\"](roomId);\n    };\n\n    var userSocket = io.sockets.connected[socket.id];\n\n    var channel = function channel(_channel, handler) {\n      socket.on(_channel, function (request, sendStatus) {\n        var _ref = socketUsers.get(socket.id) || {},\n            userId = _ref.userId,\n            listId = _ref.listId;\n\n        handler({\n          allInRoom: allInRoom,\n          listId: listId,\n          request: request,\n          sendStatus: sendStatus,\n          socket: socket,\n          socketUsers: socketUsers,\n          userId: userId,\n          userSocket: userSocket\n        });\n      });\n    };\n\n    console.log(\"A user connected (socket ID \".concat(socket.id, \")\"));\n    channel('disconnect', _userSocket[\"default\"].leave);\n    channel('push:item:add', _listSocket[\"default\"].addItem);\n    channel('push:item:update', _listSocket[\"default\"].updateItem);\n    channel('push:title:update', _listSocket[\"default\"].updateTitle);\n    channel('push:share:list', _listSocket[\"default\"].shareList);\n    channel('push:user:join', _userSocket[\"default\"].join);\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNvY2tldFVzZXJzIiwiTWFwIiwiYXR0YWNoU29ja2V0cyIsImlvIiwib24iLCJzb2NrZXQiLCJhbGxJblJvb20iLCJyb29tSWQiLCJzb2NrZXRzIiwidXNlclNvY2tldCIsImNvbm5lY3RlZCIsImlkIiwiY2hhbm5lbCIsImhhbmRsZXIiLCJyZXF1ZXN0Iiwic2VuZFN0YXR1cyIsImdldCIsInVzZXJJZCIsImxpc3RJZCIsImNvbnNvbGUiLCJsb2ciLCJVc2VyU29ja2V0IiwibGVhdmUiLCJMaXN0U29ja2V0IiwiYWRkSXRlbSIsInVwZGF0ZUl0ZW0iLCJ1cGRhdGVUaXRsZSIsInNoYXJlTGlzdCIsImpvaW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFRQTs7QUFDQTs7OztBQVRBOzs7Ozs7QUFPQTtBQUlBLElBQU1BLFdBQVcsR0FBRyxJQUFJQyxHQUFKLEVBQXBCLEMsQ0FBK0I7O0FBRWhCLFNBQVNDLGFBQVQsQ0FBdUJDLEVBQXZCLEVBQTJCO0FBQ3hDQSxFQUFBQSxFQUFFLENBQUNDLEVBQUgsQ0FBTSxZQUFOLEVBQW9CLFVBQUNDLE1BQUQsRUFBWTtBQUM5QixRQUFNQyxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFDQyxNQUFEO0FBQUEsYUFBWUosRUFBRSxDQUFDSyxPQUFILE9BQWNELE1BQWQsQ0FBWjtBQUFBLEtBQWxCOztBQUNBLFFBQU1FLFVBQVUsR0FBR04sRUFBRSxDQUFDSyxPQUFILENBQVdFLFNBQVgsQ0FBcUJMLE1BQU0sQ0FBQ00sRUFBNUIsQ0FBbkI7O0FBRUEsUUFBTUMsT0FBTyxHQUFHLGlCQUFDQSxRQUFELEVBQVVDLE9BQVYsRUFBc0I7QUFDcENSLE1BQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVUSxRQUFWLEVBQW1CLFVBQUNFLE9BQUQsRUFBVUMsVUFBVixFQUF5QjtBQUFBLG1CQUNqQmYsV0FBVyxDQUFDZ0IsR0FBWixDQUFnQlgsTUFBTSxDQUFDTSxFQUF2QixLQUE4QixFQURiO0FBQUEsWUFDbkNNLE1BRG1DLFFBQ25DQSxNQURtQztBQUFBLFlBQzNCQyxNQUQyQixRQUMzQkEsTUFEMkI7O0FBRzFDTCxRQUFBQSxPQUFPLENBQUM7QUFDTlAsVUFBQUEsU0FBUyxFQUFUQSxTQURNO0FBRU5ZLFVBQUFBLE1BQU0sRUFBTkEsTUFGTTtBQUdOSixVQUFBQSxPQUFPLEVBQVBBLE9BSE07QUFJTkMsVUFBQUEsVUFBVSxFQUFWQSxVQUpNO0FBS05WLFVBQUFBLE1BQU0sRUFBTkEsTUFMTTtBQU1OTCxVQUFBQSxXQUFXLEVBQVhBLFdBTk07QUFPTmlCLFVBQUFBLE1BQU0sRUFBTkEsTUFQTTtBQVFOUixVQUFBQSxVQUFVLEVBQVZBO0FBUk0sU0FBRCxDQUFQO0FBVUQsT0FiRDtBQWNELEtBZkQ7O0FBaUJBVSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsdUNBQTJDZixNQUFNLENBQUNNLEVBQWxEO0FBRUFDLElBQUFBLE9BQU8sQ0FBQyxZQUFELEVBQWVTLHVCQUFXQyxLQUExQixDQUFQO0FBQ0FWLElBQUFBLE9BQU8sQ0FBQyxlQUFELEVBQWtCVyx1QkFBV0MsT0FBN0IsQ0FBUDtBQUNBWixJQUFBQSxPQUFPLENBQUMsa0JBQUQsRUFBcUJXLHVCQUFXRSxVQUFoQyxDQUFQO0FBQ0FiLElBQUFBLE9BQU8sQ0FBQyxtQkFBRCxFQUFzQlcsdUJBQVdHLFdBQWpDLENBQVA7QUFDQWQsSUFBQUEsT0FBTyxDQUFDLGlCQUFELEVBQW9CVyx1QkFBV0ksU0FBL0IsQ0FBUDtBQUNBZixJQUFBQSxPQUFPLENBQUMsZ0JBQUQsRUFBbUJTLHVCQUFXTyxJQUE5QixDQUFQO0FBQ0QsR0E3QkQ7QUE4QkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2RlZXBpa2EvRG9jdW1lbnRzL0dpdEh1Yi9mYWNlYm9va0hhY2thdGhvbi9jaGF0LWV4dGVuc2lvbnMvc29ja2V0cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8vID09PT09IFNPQ0tFVFMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQgTGlzdFNvY2tldCBmcm9tICcuL2xpc3Qtc29ja2V0JztcbmltcG9ydCBVc2VyU29ja2V0IGZyb20gJy4vdXNlci1zb2NrZXQnO1xuXG5jb25zdCBzb2NrZXRVc2VycyA9IG5ldyBNYXAoKTsgLy8ge3NvY2tldElkOiB7dXNlcklkLCBsaXN0SWR9fVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhdHRhY2hTb2NrZXRzKGlvKSB7XG4gIGlvLm9uKCdjb25uZWN0aW9uJywgKHNvY2tldCkgPT4ge1xuICAgIGNvbnN0IGFsbEluUm9vbSA9IChyb29tSWQpID0+IGlvLnNvY2tldHMuaW4ocm9vbUlkKTtcbiAgICBjb25zdCB1c2VyU29ja2V0ID0gaW8uc29ja2V0cy5jb25uZWN0ZWRbc29ja2V0LmlkXTtcblxuICAgIGNvbnN0IGNoYW5uZWwgPSAoY2hhbm5lbCwgaGFuZGxlcikgPT4ge1xuICAgICAgc29ja2V0Lm9uKGNoYW5uZWwsIChyZXF1ZXN0LCBzZW5kU3RhdHVzKSA9PiB7XG4gICAgICAgIGNvbnN0IHt1c2VySWQsIGxpc3RJZH0gPSBzb2NrZXRVc2Vycy5nZXQoc29ja2V0LmlkKSB8fCB7fTtcblxuICAgICAgICBoYW5kbGVyKHtcbiAgICAgICAgICBhbGxJblJvb20sXG4gICAgICAgICAgbGlzdElkLFxuICAgICAgICAgIHJlcXVlc3QsXG4gICAgICAgICAgc2VuZFN0YXR1cyxcbiAgICAgICAgICBzb2NrZXQsXG4gICAgICAgICAgc29ja2V0VXNlcnMsXG4gICAgICAgICAgdXNlcklkLFxuICAgICAgICAgIHVzZXJTb2NrZXQsXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIGNvbnNvbGUubG9nKGBBIHVzZXIgY29ubmVjdGVkIChzb2NrZXQgSUQgJHtzb2NrZXQuaWR9KWApO1xuXG4gICAgY2hhbm5lbCgnZGlzY29ubmVjdCcsIFVzZXJTb2NrZXQubGVhdmUpO1xuICAgIGNoYW5uZWwoJ3B1c2g6aXRlbTphZGQnLCBMaXN0U29ja2V0LmFkZEl0ZW0pO1xuICAgIGNoYW5uZWwoJ3B1c2g6aXRlbTp1cGRhdGUnLCBMaXN0U29ja2V0LnVwZGF0ZUl0ZW0pO1xuICAgIGNoYW5uZWwoJ3B1c2g6dGl0bGU6dXBkYXRlJywgTGlzdFNvY2tldC51cGRhdGVUaXRsZSk7XG4gICAgY2hhbm5lbCgncHVzaDpzaGFyZTpsaXN0JywgTGlzdFNvY2tldC5zaGFyZUxpc3QpO1xuICAgIGNoYW5uZWwoJ3B1c2g6dXNlcjpqb2luJywgVXNlclNvY2tldC5qb2luKTtcbiAgfSk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "socketUsers",
        "Map",
        "attachSockets",
        "io",
        "on",
        "socket",
        "allInRoom",
        "roomId",
        "sockets",
        "userSocket",
        "connected",
        "id",
        "channel",
        "handler",
        "request",
        "sendStatus",
        "get",
        "userId",
        "listId",
        "console",
        "log",
        "UserSocket",
        "leave",
        "ListSocket",
        "addItem",
        "updateItem",
        "updateTitle",
        "shareList",
        "join"
      ],
      "mappings": ";;;;;;;AAQA;;AACA;;;;AATA;;;;;;AAOA;AAIA,IAAMA,WAAW,GAAG,IAAIC,GAAJ,EAApB,C,CAA+B;;AAEhB,SAASC,aAAT,CAAuBC,EAAvB,EAA2B;AACxCA,EAAAA,EAAE,CAACC,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD,EAAY;AAC9B,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD;AAAA,aAAYJ,EAAE,CAACK,OAAH,OAAcD,MAAd,CAAZ;AAAA,KAAlB;;AACA,QAAME,UAAU,GAAGN,EAAE,CAACK,OAAH,CAAWE,SAAX,CAAqBL,MAAM,CAACM,EAA5B,CAAnB;;AAEA,QAAMC,OAAO,GAAG,iBAACA,QAAD,EAAUC,OAAV,EAAsB;AACpCR,MAAAA,MAAM,CAACD,EAAP,CAAUQ,QAAV,EAAmB,UAACE,OAAD,EAAUC,UAAV,EAAyB;AAAA,mBACjBf,WAAW,CAACgB,GAAZ,CAAgBX,MAAM,CAACM,EAAvB,KAA8B,EADb;AAAA,YACnCM,MADmC,QACnCA,MADmC;AAAA,YAC3BC,MAD2B,QAC3BA,MAD2B;;AAG1CL,QAAAA,OAAO,CAAC;AACNP,UAAAA,SAAS,EAATA,SADM;AAENY,UAAAA,MAAM,EAANA,MAFM;AAGNJ,UAAAA,OAAO,EAAPA,OAHM;AAINC,UAAAA,UAAU,EAAVA,UAJM;AAKNV,UAAAA,MAAM,EAANA,MALM;AAMNL,UAAAA,WAAW,EAAXA,WANM;AAONiB,UAAAA,MAAM,EAANA,MAPM;AAQNR,UAAAA,UAAU,EAAVA;AARM,SAAD,CAAP;AAUD,OAbD;AAcD,KAfD;;AAiBAU,IAAAA,OAAO,CAACC,GAAR,uCAA2Cf,MAAM,CAACM,EAAlD;AAEAC,IAAAA,OAAO,CAAC,YAAD,EAAeS,uBAAWC,KAA1B,CAAP;AACAV,IAAAA,OAAO,CAAC,eAAD,EAAkBW,uBAAWC,OAA7B,CAAP;AACAZ,IAAAA,OAAO,CAAC,kBAAD,EAAqBW,uBAAWE,UAAhC,CAAP;AACAb,IAAAA,OAAO,CAAC,mBAAD,EAAsBW,uBAAWG,WAAjC,CAAP;AACAd,IAAAA,OAAO,CAAC,iBAAD,EAAoBW,uBAAWI,SAA/B,CAAP;AACAf,IAAAA,OAAO,CAAC,gBAAD,EAAmBS,uBAAWO,IAA9B,CAAP;AACD,GA7BD;AA8BD",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== SOCKETS ===============================================================\nimport ListSocket from './list-socket';\nimport UserSocket from './user-socket';\n\nconst socketUsers = new Map(); // {socketId: {userId, listId}}\n\nexport default function attachSockets(io) {\n  io.on('connection', (socket) => {\n    const allInRoom = (roomId) => io.sockets.in(roomId);\n    const userSocket = io.sockets.connected[socket.id];\n\n    const channel = (channel, handler) => {\n      socket.on(channel, (request, sendStatus) => {\n        const {userId, listId} = socketUsers.get(socket.id) || {};\n\n        handler({\n          allInRoom,\n          listId,\n          request,\n          sendStatus,\n          socket,\n          socketUsers,\n          userId,\n          userSocket,\n        });\n      });\n    };\n\n    console.log(`A user connected (socket ID ${socket.id})`);\n\n    channel('disconnect', UserSocket.leave);\n    channel('push:item:add', ListSocket.addItem);\n    channel('push:item:update', ListSocket.updateItem);\n    channel('push:title:update', ListSocket.updateTitle);\n    channel('push:share:list', ListSocket.shareList);\n    channel('push:user:join', UserSocket.join);\n  });\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets/list-socket.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets/list-socket.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets/list-socket.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets/list-socket.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets",
        "sourceFileName": "list-socket.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _lists = _interopRequireDefault(require(\"../models/lists\"));\n\nvar _listsItems = _interopRequireDefault(require(\"../models/lists-items\"));\n\nvar _send = _interopRequireDefault(require(\"../messenger-api-helpers/send\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// ===== DB ====================================================================\n// ===== MESSENGER =============================================================\n// Update the title of the given List and\n// notifies all subscribed users of the change.\nvar updateTitle = function updateTitle(_ref) {\n  var _ref$request = _ref.request,\n      listId = _ref$request.listId,\n      title = _ref$request.title,\n      sendStatus = _ref.sendStatus,\n      socket = _ref.socket;\n\n  _lists[\"default\"].setTitle(title, listId).then(function (list) {\n    socket.to(list.id).emit('title:update', list.title);\n    sendStatus('ok');\n  });\n}; // Creates a new ListItem and notifies\n// all subscribed users of the change.\n\n\nvar addItem = function addItem(_ref2) {\n  var _ref2$request = _ref2.request,\n      senderId = _ref2$request.senderId,\n      listId = _ref2$request.listId,\n      name = _ref2$request.name,\n      sendStatus = _ref2.sendStatus,\n      allInRoom = _ref2.allInRoom;\n\n  _listsItems[\"default\"].create(name, listId, senderId).then(function (listItem) {\n    allInRoom(listId).emit('item:add', listItem);\n    sendStatus('ok');\n  });\n}; // Updates an existing ListItem and notifies\n// all subscribed users of the change.\n\n\nvar updateItem = function updateItem(_ref3) {\n  var request = _ref3.request,\n      sendStatus = _ref3.sendStatus,\n      allInRoom = _ref3.allInRoom;\n  var listId = request.listId,\n      id = request.id,\n      name = request.name,\n      completerFbId = request.completerFbId;\n  console.log('request', {\n    listId: listId,\n    id: id,\n    name: name,\n    completerFbId: completerFbId\n  });\n\n  _listsItems[\"default\"].update({\n    id: id,\n    name: name,\n    completerFbId: completerFbId\n  }).then(function (_ref4) {\n    var id = _ref4.id,\n        name = _ref4.name,\n        completerFbId = _ref4.completerFbId;\n    allInRoom(listId).emit('item:update', {\n      id: id,\n      name: name,\n      completerFbId: completerFbId\n    });\n    sendStatus('ok');\n  });\n}; // Shares a list into the thread from where it can be forwarded to other users\n\n\nvar shareList = function shareList(_ref5) {\n  var _ref5$request = _ref5.request,\n      senderId = _ref5$request.senderId,\n      listId = _ref5$request.listId,\n      title = _ref5$request.title,\n      sendStatus = _ref5.sendStatus;\n\n  if (!listId) {\n    console.error('shareList: Invalid list ID');\n    return;\n  }\n\n  _send[\"default\"].sendListShareItem(senderId, listId, title);\n\n  sendStatus('ok');\n};\n\nvar _default = {\n  addItem: addItem,\n  updateItem: updateItem,\n  updateTitle: updateTitle,\n  shareList: shareList\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3Qtc29ja2V0LmpzIl0sIm5hbWVzIjpbInVwZGF0ZVRpdGxlIiwicmVxdWVzdCIsImxpc3RJZCIsInRpdGxlIiwic2VuZFN0YXR1cyIsInNvY2tldCIsIkxpc3RzIiwic2V0VGl0bGUiLCJ0aGVuIiwibGlzdCIsInRvIiwiaWQiLCJlbWl0IiwiYWRkSXRlbSIsInNlbmRlcklkIiwibmFtZSIsImFsbEluUm9vbSIsIkxpc3RzSXRlbXMiLCJjcmVhdGUiLCJsaXN0SXRlbSIsInVwZGF0ZUl0ZW0iLCJjb21wbGV0ZXJGYklkIiwiY29uc29sZSIsImxvZyIsInVwZGF0ZSIsInNoYXJlTGlzdCIsImVycm9yIiwic2VuZEFwaSIsInNlbmRMaXN0U2hhcmVJdGVtIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBUUE7O0FBQ0E7O0FBR0E7Ozs7QUFaQTs7Ozs7O0FBT0E7QUFJQTtBQUdBO0FBQ0E7QUFDQSxJQUFNQSxXQUFXLEdBQUcsU0FBZEEsV0FBYyxPQUFvRDtBQUFBLDBCQUFsREMsT0FBa0Q7QUFBQSxNQUF4Q0MsTUFBd0MsZ0JBQXhDQSxNQUF3QztBQUFBLE1BQWhDQyxLQUFnQyxnQkFBaENBLEtBQWdDO0FBQUEsTUFBeEJDLFVBQXdCLFFBQXhCQSxVQUF3QjtBQUFBLE1BQVpDLE1BQVksUUFBWkEsTUFBWTs7QUFDdEVDLG9CQUFNQyxRQUFOLENBQWVKLEtBQWYsRUFBc0JELE1BQXRCLEVBQ0dNLElBREgsQ0FDUSxVQUFDQyxJQUFELEVBQVU7QUFDZEosSUFBQUEsTUFBTSxDQUFDSyxFQUFQLENBQVVELElBQUksQ0FBQ0UsRUFBZixFQUFtQkMsSUFBbkIsQ0FBd0IsY0FBeEIsRUFBd0NILElBQUksQ0FBQ04sS0FBN0M7QUFDQUMsSUFBQUEsVUFBVSxDQUFDLElBQUQsQ0FBVjtBQUNELEdBSkg7QUFLRCxDQU5ELEMsQ0FRQTtBQUNBOzs7QUFDQSxJQUFNUyxPQUFPLEdBQUcsU0FBVkEsT0FBVSxRQUlWO0FBQUEsNEJBSEpaLE9BR0k7QUFBQSxNQUhNYSxRQUdOLGlCQUhNQSxRQUdOO0FBQUEsTUFIZ0JaLE1BR2hCLGlCQUhnQkEsTUFHaEI7QUFBQSxNQUh3QmEsSUFHeEIsaUJBSHdCQSxJQUd4QjtBQUFBLE1BRkpYLFVBRUksU0FGSkEsVUFFSTtBQUFBLE1BREpZLFNBQ0ksU0FESkEsU0FDSTs7QUFDSkMseUJBQVdDLE1BQVgsQ0FBa0JILElBQWxCLEVBQXdCYixNQUF4QixFQUFnQ1ksUUFBaEMsRUFDR04sSUFESCxDQUNRLFVBQUNXLFFBQUQsRUFBYztBQUNsQkgsSUFBQUEsU0FBUyxDQUFDZCxNQUFELENBQVQsQ0FBa0JVLElBQWxCLENBQXVCLFVBQXZCLEVBQW1DTyxRQUFuQztBQUNBZixJQUFBQSxVQUFVLENBQUMsSUFBRCxDQUFWO0FBQ0QsR0FKSDtBQUtELENBVkQsQyxDQVlBO0FBQ0E7OztBQUNBLElBQU1nQixVQUFVLEdBQUcsU0FBYkEsVUFBYSxRQUFzQztBQUFBLE1BQXBDbkIsT0FBb0MsU0FBcENBLE9BQW9DO0FBQUEsTUFBM0JHLFVBQTJCLFNBQTNCQSxVQUEyQjtBQUFBLE1BQWZZLFNBQWUsU0FBZkEsU0FBZTtBQUFBLE1BQ2hEZCxNQURnRCxHQUNiRCxPQURhLENBQ2hEQyxNQURnRDtBQUFBLE1BQ3hDUyxFQUR3QyxHQUNiVixPQURhLENBQ3hDVSxFQUR3QztBQUFBLE1BQ3BDSSxJQURvQyxHQUNiZCxPQURhLENBQ3BDYyxJQURvQztBQUFBLE1BQzlCTSxhQUQ4QixHQUNicEIsT0FEYSxDQUM5Qm9CLGFBRDhCO0FBRXZEQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxTQUFaLEVBQXVCO0FBQUNyQixJQUFBQSxNQUFNLEVBQU5BLE1BQUQ7QUFBU1MsSUFBQUEsRUFBRSxFQUFGQSxFQUFUO0FBQWFJLElBQUFBLElBQUksRUFBSkEsSUFBYjtBQUFtQk0sSUFBQUEsYUFBYSxFQUFiQTtBQUFuQixHQUF2Qjs7QUFFQUoseUJBQVdPLE1BQVgsQ0FBa0I7QUFBQ2IsSUFBQUEsRUFBRSxFQUFGQSxFQUFEO0FBQUtJLElBQUFBLElBQUksRUFBSkEsSUFBTDtBQUFXTSxJQUFBQSxhQUFhLEVBQWJBO0FBQVgsR0FBbEIsRUFDR2IsSUFESCxDQUNRLGlCQUErQjtBQUFBLFFBQTdCRyxFQUE2QixTQUE3QkEsRUFBNkI7QUFBQSxRQUF6QkksSUFBeUIsU0FBekJBLElBQXlCO0FBQUEsUUFBbkJNLGFBQW1CLFNBQW5CQSxhQUFtQjtBQUNuQ0wsSUFBQUEsU0FBUyxDQUFDZCxNQUFELENBQVQsQ0FDR1UsSUFESCxDQUNRLGFBRFIsRUFDdUI7QUFBQ0QsTUFBQUEsRUFBRSxFQUFGQSxFQUFEO0FBQUtJLE1BQUFBLElBQUksRUFBSkEsSUFBTDtBQUFXTSxNQUFBQSxhQUFhLEVBQWJBO0FBQVgsS0FEdkI7QUFFQWpCLElBQUFBLFVBQVUsQ0FBQyxJQUFELENBQVY7QUFDRCxHQUxIO0FBTUQsQ0FWRCxDLENBWUE7OztBQUNBLElBQU1xQixTQUFTLEdBQUcsU0FBWkEsU0FBWSxRQUdaO0FBQUEsNEJBRkp4QixPQUVJO0FBQUEsTUFGTWEsUUFFTixpQkFGTUEsUUFFTjtBQUFBLE1BRmdCWixNQUVoQixpQkFGZ0JBLE1BRWhCO0FBQUEsTUFGd0JDLEtBRXhCLGlCQUZ3QkEsS0FFeEI7QUFBQSxNQURKQyxVQUNJLFNBREpBLFVBQ0k7O0FBQ0osTUFBSSxDQUFDRixNQUFMLEVBQWE7QUFDWG9CLElBQUFBLE9BQU8sQ0FBQ0ksS0FBUixDQUFjLDRCQUFkO0FBQ0E7QUFDRDs7QUFDREMsbUJBQVFDLGlCQUFSLENBQTBCZCxRQUExQixFQUFvQ1osTUFBcEMsRUFBNENDLEtBQTVDOztBQUNBQyxFQUFBQSxVQUFVLENBQUMsSUFBRCxDQUFWO0FBQ0QsQ0FWRDs7ZUFZZTtBQUNiUyxFQUFBQSxPQUFPLEVBQVBBLE9BRGE7QUFFYk8sRUFBQUEsVUFBVSxFQUFWQSxVQUZhO0FBR2JwQixFQUFBQSxXQUFXLEVBQVhBLFdBSGE7QUFJYnlCLEVBQUFBLFNBQVMsRUFBVEE7QUFKYSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kZWVwaWthL0RvY3VtZW50cy9HaXRIdWIvZmFjZWJvb2tIYWNrYXRob24vY2hhdC1leHRlbnNpb25zL3NvY2tldHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vLyA9PT09PSBEQiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaW1wb3J0IExpc3RzIGZyb20gJy4uL21vZGVscy9saXN0cyc7XG5pbXBvcnQgTGlzdHNJdGVtcyBmcm9tICcuLi9tb2RlbHMvbGlzdHMtaXRlbXMnO1xuXG4vLyA9PT09PSBNRVNTRU5HRVIgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaW1wb3J0IHNlbmRBcGkgZnJvbSAnLi4vbWVzc2VuZ2VyLWFwaS1oZWxwZXJzL3NlbmQnO1xuXG4vLyBVcGRhdGUgdGhlIHRpdGxlIG9mIHRoZSBnaXZlbiBMaXN0IGFuZFxuLy8gbm90aWZpZXMgYWxsIHN1YnNjcmliZWQgdXNlcnMgb2YgdGhlIGNoYW5nZS5cbmNvbnN0IHVwZGF0ZVRpdGxlID0gKHtyZXF1ZXN0OiB7bGlzdElkLCB0aXRsZX0sIHNlbmRTdGF0dXMsIHNvY2tldH0pID0+IHtcbiAgTGlzdHMuc2V0VGl0bGUodGl0bGUsIGxpc3RJZClcbiAgICAudGhlbigobGlzdCkgPT4ge1xuICAgICAgc29ja2V0LnRvKGxpc3QuaWQpLmVtaXQoJ3RpdGxlOnVwZGF0ZScsIGxpc3QudGl0bGUpO1xuICAgICAgc2VuZFN0YXR1cygnb2snKTtcbiAgICB9KTtcbn07XG5cbi8vIENyZWF0ZXMgYSBuZXcgTGlzdEl0ZW0gYW5kIG5vdGlmaWVzXG4vLyBhbGwgc3Vic2NyaWJlZCB1c2VycyBvZiB0aGUgY2hhbmdlLlxuY29uc3QgYWRkSXRlbSA9ICh7XG4gIHJlcXVlc3Q6IHtzZW5kZXJJZCwgbGlzdElkLCBuYW1lfSxcbiAgc2VuZFN0YXR1cyxcbiAgYWxsSW5Sb29tLFxufSkgPT4ge1xuICBMaXN0c0l0ZW1zLmNyZWF0ZShuYW1lLCBsaXN0SWQsIHNlbmRlcklkKVxuICAgIC50aGVuKChsaXN0SXRlbSkgPT4ge1xuICAgICAgYWxsSW5Sb29tKGxpc3RJZCkuZW1pdCgnaXRlbTphZGQnLCBsaXN0SXRlbSk7XG4gICAgICBzZW5kU3RhdHVzKCdvaycpO1xuICAgIH0pO1xufTtcblxuLy8gVXBkYXRlcyBhbiBleGlzdGluZyBMaXN0SXRlbSBhbmQgbm90aWZpZXNcbi8vIGFsbCBzdWJzY3JpYmVkIHVzZXJzIG9mIHRoZSBjaGFuZ2UuXG5jb25zdCB1cGRhdGVJdGVtID0gKHtyZXF1ZXN0LCBzZW5kU3RhdHVzLCBhbGxJblJvb219KSA9PiB7XG4gIGNvbnN0IHtsaXN0SWQsIGlkLCBuYW1lLCBjb21wbGV0ZXJGYklkfSA9IHJlcXVlc3Q7XG4gIGNvbnNvbGUubG9nKCdyZXF1ZXN0Jywge2xpc3RJZCwgaWQsIG5hbWUsIGNvbXBsZXRlckZiSWR9KTtcblxuICBMaXN0c0l0ZW1zLnVwZGF0ZSh7aWQsIG5hbWUsIGNvbXBsZXRlckZiSWR9KVxuICAgIC50aGVuKCh7aWQsIG5hbWUsIGNvbXBsZXRlckZiSWR9KSA9PiB7XG4gICAgICBhbGxJblJvb20obGlzdElkKVxuICAgICAgICAuZW1pdCgnaXRlbTp1cGRhdGUnLCB7aWQsIG5hbWUsIGNvbXBsZXRlckZiSWR9KTtcbiAgICAgIHNlbmRTdGF0dXMoJ29rJyk7XG4gICAgfSk7XG59O1xuXG4vLyBTaGFyZXMgYSBsaXN0IGludG8gdGhlIHRocmVhZCBmcm9tIHdoZXJlIGl0IGNhbiBiZSBmb3J3YXJkZWQgdG8gb3RoZXIgdXNlcnNcbmNvbnN0IHNoYXJlTGlzdCA9ICh7XG4gIHJlcXVlc3Q6IHtzZW5kZXJJZCwgbGlzdElkLCB0aXRsZX0sXG4gIHNlbmRTdGF0dXNcbn0pID0+IHtcbiAgaWYgKCFsaXN0SWQpIHtcbiAgICBjb25zb2xlLmVycm9yKCdzaGFyZUxpc3Q6IEludmFsaWQgbGlzdCBJRCcpO1xuICAgIHJldHVybjtcbiAgfVxuICBzZW5kQXBpLnNlbmRMaXN0U2hhcmVJdGVtKHNlbmRlcklkLCBsaXN0SWQsIHRpdGxlKTtcbiAgc2VuZFN0YXR1cygnb2snKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgYWRkSXRlbSxcbiAgdXBkYXRlSXRlbSxcbiAgdXBkYXRlVGl0bGUsXG4gIHNoYXJlTGlzdCxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "list-socket.js"
      ],
      "names": [
        "updateTitle",
        "request",
        "listId",
        "title",
        "sendStatus",
        "socket",
        "Lists",
        "setTitle",
        "then",
        "list",
        "to",
        "id",
        "emit",
        "addItem",
        "senderId",
        "name",
        "allInRoom",
        "ListsItems",
        "create",
        "listItem",
        "updateItem",
        "completerFbId",
        "console",
        "log",
        "update",
        "shareList",
        "error",
        "sendApi",
        "sendListShareItem"
      ],
      "mappings": ";;;;;;;AAQA;;AACA;;AAGA;;;;AAZA;;;;;;AAOA;AAIA;AAGA;AACA;AACA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAAoD;AAAA,0BAAlDC,OAAkD;AAAA,MAAxCC,MAAwC,gBAAxCA,MAAwC;AAAA,MAAhCC,KAAgC,gBAAhCA,KAAgC;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,MAAY,QAAZA,MAAY;;AACtEC,oBAAMC,QAAN,CAAeJ,KAAf,EAAsBD,MAAtB,EACGM,IADH,CACQ,UAACC,IAAD,EAAU;AACdJ,IAAAA,MAAM,CAACK,EAAP,CAAUD,IAAI,CAACE,EAAf,EAAmBC,IAAnB,CAAwB,cAAxB,EAAwCH,IAAI,CAACN,KAA7C;AACAC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAJH;AAKD,CAND,C,CAQA;AACA;;;AACA,IAAMS,OAAO,GAAG,SAAVA,OAAU,QAIV;AAAA,4BAHJZ,OAGI;AAAA,MAHMa,QAGN,iBAHMA,QAGN;AAAA,MAHgBZ,MAGhB,iBAHgBA,MAGhB;AAAA,MAHwBa,IAGxB,iBAHwBA,IAGxB;AAAA,MAFJX,UAEI,SAFJA,UAEI;AAAA,MADJY,SACI,SADJA,SACI;;AACJC,yBAAWC,MAAX,CAAkBH,IAAlB,EAAwBb,MAAxB,EAAgCY,QAAhC,EACGN,IADH,CACQ,UAACW,QAAD,EAAc;AAClBH,IAAAA,SAAS,CAACd,MAAD,CAAT,CAAkBU,IAAlB,CAAuB,UAAvB,EAAmCO,QAAnC;AACAf,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAJH;AAKD,CAVD,C,CAYA;AACA;;;AACA,IAAMgB,UAAU,GAAG,SAAbA,UAAa,QAAsC;AAAA,MAApCnB,OAAoC,SAApCA,OAAoC;AAAA,MAA3BG,UAA2B,SAA3BA,UAA2B;AAAA,MAAfY,SAAe,SAAfA,SAAe;AAAA,MAChDd,MADgD,GACbD,OADa,CAChDC,MADgD;AAAA,MACxCS,EADwC,GACbV,OADa,CACxCU,EADwC;AAAA,MACpCI,IADoC,GACbd,OADa,CACpCc,IADoC;AAAA,MAC9BM,aAD8B,GACbpB,OADa,CAC9BoB,aAD8B;AAEvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB;AAACrB,IAAAA,MAAM,EAANA,MAAD;AAASS,IAAAA,EAAE,EAAFA,EAAT;AAAaI,IAAAA,IAAI,EAAJA,IAAb;AAAmBM,IAAAA,aAAa,EAAbA;AAAnB,GAAvB;;AAEAJ,yBAAWO,MAAX,CAAkB;AAACb,IAAAA,EAAE,EAAFA,EAAD;AAAKI,IAAAA,IAAI,EAAJA,IAAL;AAAWM,IAAAA,aAAa,EAAbA;AAAX,GAAlB,EACGb,IADH,CACQ,iBAA+B;AAAA,QAA7BG,EAA6B,SAA7BA,EAA6B;AAAA,QAAzBI,IAAyB,SAAzBA,IAAyB;AAAA,QAAnBM,aAAmB,SAAnBA,aAAmB;AACnCL,IAAAA,SAAS,CAACd,MAAD,CAAT,CACGU,IADH,CACQ,aADR,EACuB;AAACD,MAAAA,EAAE,EAAFA,EAAD;AAAKI,MAAAA,IAAI,EAAJA,IAAL;AAAWM,MAAAA,aAAa,EAAbA;AAAX,KADvB;AAEAjB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GALH;AAMD,CAVD,C,CAYA;;;AACA,IAAMqB,SAAS,GAAG,SAAZA,SAAY,QAGZ;AAAA,4BAFJxB,OAEI;AAAA,MAFMa,QAEN,iBAFMA,QAEN;AAAA,MAFgBZ,MAEhB,iBAFgBA,MAEhB;AAAA,MAFwBC,KAExB,iBAFwBA,KAExB;AAAA,MADJC,UACI,SADJA,UACI;;AACJ,MAAI,CAACF,MAAL,EAAa;AACXoB,IAAAA,OAAO,CAACI,KAAR,CAAc,4BAAd;AACA;AACD;;AACDC,mBAAQC,iBAAR,CAA0Bd,QAA1B,EAAoCZ,MAApC,EAA4CC,KAA5C;;AACAC,EAAAA,UAAU,CAAC,IAAD,CAAV;AACD,CAVD;;eAYe;AACbS,EAAAA,OAAO,EAAPA,OADa;AAEbO,EAAAA,UAAU,EAAVA,UAFa;AAGbpB,EAAAA,WAAW,EAAXA,WAHa;AAIbyB,EAAAA,SAAS,EAATA;AAJa,C",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== DB ====================================================================\nimport Lists from '../models/lists';\nimport ListsItems from '../models/lists-items';\n\n// ===== MESSENGER =============================================================\nimport sendApi from '../messenger-api-helpers/send';\n\n// Update the title of the given List and\n// notifies all subscribed users of the change.\nconst updateTitle = ({request: {listId, title}, sendStatus, socket}) => {\n  Lists.setTitle(title, listId)\n    .then((list) => {\n      socket.to(list.id).emit('title:update', list.title);\n      sendStatus('ok');\n    });\n};\n\n// Creates a new ListItem and notifies\n// all subscribed users of the change.\nconst addItem = ({\n  request: {senderId, listId, name},\n  sendStatus,\n  allInRoom,\n}) => {\n  ListsItems.create(name, listId, senderId)\n    .then((listItem) => {\n      allInRoom(listId).emit('item:add', listItem);\n      sendStatus('ok');\n    });\n};\n\n// Updates an existing ListItem and notifies\n// all subscribed users of the change.\nconst updateItem = ({request, sendStatus, allInRoom}) => {\n  const {listId, id, name, completerFbId} = request;\n  console.log('request', {listId, id, name, completerFbId});\n\n  ListsItems.update({id, name, completerFbId})\n    .then(({id, name, completerFbId}) => {\n      allInRoom(listId)\n        .emit('item:update', {id, name, completerFbId});\n      sendStatus('ok');\n    });\n};\n\n// Shares a list into the thread from where it can be forwarded to other users\nconst shareList = ({\n  request: {senderId, listId, title},\n  sendStatus\n}) => {\n  if (!listId) {\n    console.error('shareList: Invalid list ID');\n    return;\n  }\n  sendApi.sendListShareItem(senderId, listId, title);\n  sendStatus('ok');\n};\n\nexport default {\n  addItem,\n  updateItem,\n  updateTitle,\n  shareList,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/lists-items.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/lists-items.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/lists-items.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/lists-items.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models",
        "sourceFileName": "lists-items.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.update = exports.create = exports.get = void 0;\n\nvar _knex = _interopRequireDefault(require(\"../db/knex\"));\n\nvar _util = require(\"./util\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable camelcase */\n// ===== DB ====================================================================\n// ===== UTIL ==================================================================\nvar ListsItems = function ListsItems() {\n  return (0, _knex[\"default\"])('lists_items');\n};\n/**\n * get - Gets the ListItem with the given ID.\n * @param   {Number} listsItemId - the ID of the ListItem to return.\n * @returns {Objst} listsItem - The matching ListsItem object.\n */\n\n\nvar get = function get(listsItemId) {\n  return ListsItems().where('id', parseInt(listsItemId, 10)).first().then(_util.camelCaseKeys);\n};\n/**\n * create - Creates a new ListsItem.\n * @param   {String} name - The name of the ListsItem to create.\n * @param   {Number} listId - The ID of the List to create the ListsItem for.\n * @param   {Number} ownerFbId - The FB ID of the User who owns the list.\n * @returns {Object} listsItem - The newly created ListsItem.\n */\n\n\nexports.get = get;\n\nvar create = function create() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var listId = arguments.length > 1 ? arguments[1] : undefined;\n  var ownerFbId = arguments.length > 2 ? arguments[2] : undefined;\n  return ListsItems().insert({\n    list_id: listId,\n    name: name,\n    owner_fb_id: ownerFbId\n  }, 'id').then(function (listsItemId) {\n    return get(listsItemId);\n  });\n};\n/**\n * update - Update a ListsItem with the given values.\n * @param   {Number} options.id - The ID of the ListsItem to update.\n * @param   {String} options.name - The updated name of the ListsItem.\n * @param   {Number} options.completerFbId - FB ID of the Completer\n * @returns {Object} listsItem - the updated ListsItem.\n */\n\n\nexports.create = create;\n\nvar update = function update(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      completerFbId = _ref.completerFbId;\n  return ListsItems().where('id', parseInt(id, 10)).update({\n    completer_fb_id: completerFbId,\n    name: name\n  }, 'id').then(function (listsItemId) {\n    return get(listsItemId);\n  });\n};\n\nexports.update = update;\nvar _default = {\n  create: create,\n  get: get,\n  update: update\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RzLWl0ZW1zLmpzIl0sIm5hbWVzIjpbIkxpc3RzSXRlbXMiLCJnZXQiLCJsaXN0c0l0ZW1JZCIsIndoZXJlIiwicGFyc2VJbnQiLCJmaXJzdCIsInRoZW4iLCJjYW1lbENhc2VLZXlzIiwiY3JlYXRlIiwibmFtZSIsImxpc3RJZCIsIm93bmVyRmJJZCIsImluc2VydCIsImxpc3RfaWQiLCJvd25lcl9mYl9pZCIsInVwZGF0ZSIsImlkIiwiY29tcGxldGVyRmJJZCIsImNvbXBsZXRlcl9mYl9pZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVNBOztBQUdBOzs7O0FBWkE7Ozs7Ozs7QUFNQTtBQUVBO0FBR0E7QUFHQSxJQUFNQSxVQUFVLEdBQUcsU0FBYkEsVUFBYTtBQUFBLFNBQU0sc0JBQUssYUFBTCxDQUFOO0FBQUEsQ0FBbkI7QUFFQTs7Ozs7OztBQUtPLElBQU1DLEdBQUcsR0FBRyxTQUFOQSxHQUFNLENBQUNDLFdBQUQ7QUFBQSxTQUNqQkYsVUFBVSxHQUNQRyxLQURILENBQ1MsSUFEVCxFQUNlQyxRQUFRLENBQUNGLFdBQUQsRUFBYyxFQUFkLENBRHZCLEVBRUdHLEtBRkgsR0FHR0MsSUFISCxDQUdRQyxtQkFIUixDQURpQjtBQUFBLENBQVo7QUFNUDs7Ozs7Ozs7Ozs7QUFPTyxJQUFNQyxNQUFNLEdBQUcsU0FBVEEsTUFBUztBQUFBLE1BQUNDLElBQUQsdUVBQVEsRUFBUjtBQUFBLE1BQVlDLE1BQVo7QUFBQSxNQUFvQkMsU0FBcEI7QUFBQSxTQUNwQlgsVUFBVSxHQUFHWSxNQUFiLENBQW9CO0FBQ2xCQyxJQUFBQSxPQUFPLEVBQUVILE1BRFM7QUFFbEJELElBQUFBLElBQUksRUFBRUEsSUFGWTtBQUdsQkssSUFBQUEsV0FBVyxFQUFFSDtBQUhLLEdBQXBCLEVBSUcsSUFKSCxFQUtHTCxJQUxILENBS1EsVUFBQ0osV0FBRDtBQUFBLFdBQWlCRCxHQUFHLENBQUNDLFdBQUQsQ0FBcEI7QUFBQSxHQUxSLENBRG9CO0FBQUEsQ0FBZjtBQVFQOzs7Ozs7Ozs7OztBQU9PLElBQU1hLE1BQU0sR0FBRyxTQUFUQSxNQUFTO0FBQUEsTUFBRUMsRUFBRixRQUFFQSxFQUFGO0FBQUEsTUFBTVAsSUFBTixRQUFNQSxJQUFOO0FBQUEsTUFBWVEsYUFBWixRQUFZQSxhQUFaO0FBQUEsU0FDcEJqQixVQUFVLEdBQUdHLEtBQWIsQ0FBbUIsSUFBbkIsRUFBeUJDLFFBQVEsQ0FBQ1ksRUFBRCxFQUFLLEVBQUwsQ0FBakMsRUFBMkNELE1BQTNDLENBQWtEO0FBQ2hERyxJQUFBQSxlQUFlLEVBQUVELGFBRCtCO0FBRWhEUixJQUFBQSxJQUFJLEVBQUpBO0FBRmdELEdBQWxELEVBR0csSUFISCxFQUdTSCxJQUhULENBR2MsVUFBQ0osV0FBRDtBQUFBLFdBQWlCRCxHQUFHLENBQUNDLFdBQUQsQ0FBcEI7QUFBQSxHQUhkLENBRG9CO0FBQUEsQ0FBZjs7O2VBTVE7QUFBQ00sRUFBQUEsTUFBTSxFQUFOQSxNQUFEO0FBQVNQLEVBQUFBLEdBQUcsRUFBSEEsR0FBVDtBQUFjYyxFQUFBQSxNQUFNLEVBQU5BO0FBQWQsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGVlcGlrYS9Eb2N1bWVudHMvR2l0SHViL2ZhY2Vib29rSGFja2F0aG9uL2NoYXQtZXh0ZW5zaW9ucy9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG5cbi8vID09PT09IERCID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQgS25leCAgZnJvbSAnLi4vZGIva25leCc7XG5cbi8vID09PT09IFVUSUwgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQge2NhbWVsQ2FzZUtleXN9IGZyb20gJy4vdXRpbCc7XG5cbmNvbnN0IExpc3RzSXRlbXMgPSAoKSA9PiBLbmV4KCdsaXN0c19pdGVtcycpO1xuXG4vKipcbiAqIGdldCAtIEdldHMgdGhlIExpc3RJdGVtIHdpdGggdGhlIGdpdmVuIElELlxuICogQHBhcmFtICAge051bWJlcn0gbGlzdHNJdGVtSWQgLSB0aGUgSUQgb2YgdGhlIExpc3RJdGVtIHRvIHJldHVybi5cbiAqIEByZXR1cm5zIHtPYmpzdH0gbGlzdHNJdGVtIC0gVGhlIG1hdGNoaW5nIExpc3RzSXRlbSBvYmplY3QuXG4gKi9cbmV4cG9ydCBjb25zdCBnZXQgPSAobGlzdHNJdGVtSWQpID0+XG4gIExpc3RzSXRlbXMoKVxuICAgIC53aGVyZSgnaWQnLCBwYXJzZUludChsaXN0c0l0ZW1JZCwgMTApKVxuICAgIC5maXJzdCgpXG4gICAgLnRoZW4oY2FtZWxDYXNlS2V5cyk7XG5cbi8qKlxuICogY3JlYXRlIC0gQ3JlYXRlcyBhIG5ldyBMaXN0c0l0ZW0uXG4gKiBAcGFyYW0gICB7U3RyaW5nfSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIExpc3RzSXRlbSB0byBjcmVhdGUuXG4gKiBAcGFyYW0gICB7TnVtYmVyfSBsaXN0SWQgLSBUaGUgSUQgb2YgdGhlIExpc3QgdG8gY3JlYXRlIHRoZSBMaXN0c0l0ZW0gZm9yLlxuICogQHBhcmFtICAge051bWJlcn0gb3duZXJGYklkIC0gVGhlIEZCIElEIG9mIHRoZSBVc2VyIHdobyBvd25zIHRoZSBsaXN0LlxuICogQHJldHVybnMge09iamVjdH0gbGlzdHNJdGVtIC0gVGhlIG5ld2x5IGNyZWF0ZWQgTGlzdHNJdGVtLlxuICovXG5leHBvcnQgY29uc3QgY3JlYXRlID0gKG5hbWUgPSAnJywgbGlzdElkLCBvd25lckZiSWQpID0+XG4gIExpc3RzSXRlbXMoKS5pbnNlcnQoe1xuICAgIGxpc3RfaWQ6IGxpc3RJZCxcbiAgICBuYW1lOiBuYW1lLFxuICAgIG93bmVyX2ZiX2lkOiBvd25lckZiSWQsXG4gIH0sICdpZCcpXG4gICAgLnRoZW4oKGxpc3RzSXRlbUlkKSA9PiBnZXQobGlzdHNJdGVtSWQpKTtcblxuLyoqXG4gKiB1cGRhdGUgLSBVcGRhdGUgYSBMaXN0c0l0ZW0gd2l0aCB0aGUgZ2l2ZW4gdmFsdWVzLlxuICogQHBhcmFtICAge051bWJlcn0gb3B0aW9ucy5pZCAtIFRoZSBJRCBvZiB0aGUgTGlzdHNJdGVtIHRvIHVwZGF0ZS5cbiAqIEBwYXJhbSAgIHtTdHJpbmd9IG9wdGlvbnMubmFtZSAtIFRoZSB1cGRhdGVkIG5hbWUgb2YgdGhlIExpc3RzSXRlbS5cbiAqIEBwYXJhbSAgIHtOdW1iZXJ9IG9wdGlvbnMuY29tcGxldGVyRmJJZCAtIEZCIElEIG9mIHRoZSBDb21wbGV0ZXJcbiAqIEByZXR1cm5zIHtPYmplY3R9IGxpc3RzSXRlbSAtIHRoZSB1cGRhdGVkIExpc3RzSXRlbS5cbiAqL1xuZXhwb3J0IGNvbnN0IHVwZGF0ZSA9ICh7aWQsIG5hbWUsIGNvbXBsZXRlckZiSWR9KSA9PlxuICBMaXN0c0l0ZW1zKCkud2hlcmUoJ2lkJywgcGFyc2VJbnQoaWQsIDEwKSkudXBkYXRlKHtcbiAgICBjb21wbGV0ZXJfZmJfaWQ6IGNvbXBsZXRlckZiSWQsXG4gICAgbmFtZSxcbiAgfSwgJ2lkJykudGhlbigobGlzdHNJdGVtSWQpID0+IGdldChsaXN0c0l0ZW1JZCkpO1xuXG5leHBvcnQgZGVmYXVsdCB7Y3JlYXRlLCBnZXQsIHVwZGF0ZX07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "lists-items.js"
      ],
      "names": [
        "ListsItems",
        "get",
        "listsItemId",
        "where",
        "parseInt",
        "first",
        "then",
        "camelCaseKeys",
        "create",
        "name",
        "listId",
        "ownerFbId",
        "insert",
        "list_id",
        "owner_fb_id",
        "update",
        "id",
        "completerFbId",
        "completer_fb_id"
      ],
      "mappings": ";;;;;;;AASA;;AAGA;;;;AAZA;;;;;;;AAMA;AAEA;AAGA;AAGA,IAAMA,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,sBAAK,aAAL,CAAN;AAAA,CAAnB;AAEA;;;;;;;AAKO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,WAAD;AAAA,SACjBF,UAAU,GACPG,KADH,CACS,IADT,EACeC,QAAQ,CAACF,WAAD,EAAc,EAAd,CADvB,EAEGG,KAFH,GAGGC,IAHH,CAGQC,mBAHR,CADiB;AAAA,CAAZ;AAMP;;;;;;;;;;;AAOO,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAACC,IAAD,uEAAQ,EAAR;AAAA,MAAYC,MAAZ;AAAA,MAAoBC,SAApB;AAAA,SACpBX,UAAU,GAAGY,MAAb,CAAoB;AAClBC,IAAAA,OAAO,EAAEH,MADS;AAElBD,IAAAA,IAAI,EAAEA,IAFY;AAGlBK,IAAAA,WAAW,EAAEH;AAHK,GAApB,EAIG,IAJH,EAKGL,IALH,CAKQ,UAACJ,WAAD;AAAA,WAAiBD,GAAG,CAACC,WAAD,CAApB;AAAA,GALR,CADoB;AAAA,CAAf;AAQP;;;;;;;;;;;AAOO,IAAMa,MAAM,GAAG,SAATA,MAAS;AAAA,MAAEC,EAAF,QAAEA,EAAF;AAAA,MAAMP,IAAN,QAAMA,IAAN;AAAA,MAAYQ,aAAZ,QAAYA,aAAZ;AAAA,SACpBjB,UAAU,GAAGG,KAAb,CAAmB,IAAnB,EAAyBC,QAAQ,CAACY,EAAD,EAAK,EAAL,CAAjC,EAA2CD,MAA3C,CAAkD;AAChDG,IAAAA,eAAe,EAAED,aAD+B;AAEhDR,IAAAA,IAAI,EAAJA;AAFgD,GAAlD,EAGG,IAHH,EAGSH,IAHT,CAGc,UAACJ,WAAD;AAAA,WAAiBD,GAAG,CAACC,WAAD,CAApB;AAAA,GAHd,CADoB;AAAA,CAAf;;;eAMQ;AAACM,EAAAA,MAAM,EAANA,MAAD;AAASP,EAAAA,GAAG,EAAHA,GAAT;AAAcc,EAAAA,MAAM,EAANA;AAAd,C",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/* eslint-disable camelcase */\n\n// ===== DB ====================================================================\nimport Knex  from '../db/knex';\n\n// ===== UTIL ==================================================================\nimport {camelCaseKeys} from './util';\n\nconst ListsItems = () => Knex('lists_items');\n\n/**\n * get - Gets the ListItem with the given ID.\n * @param   {Number} listsItemId - the ID of the ListItem to return.\n * @returns {Objst} listsItem - The matching ListsItem object.\n */\nexport const get = (listsItemId) =>\n  ListsItems()\n    .where('id', parseInt(listsItemId, 10))\n    .first()\n    .then(camelCaseKeys);\n\n/**\n * create - Creates a new ListsItem.\n * @param   {String} name - The name of the ListsItem to create.\n * @param   {Number} listId - The ID of the List to create the ListsItem for.\n * @param   {Number} ownerFbId - The FB ID of the User who owns the list.\n * @returns {Object} listsItem - The newly created ListsItem.\n */\nexport const create = (name = '', listId, ownerFbId) =>\n  ListsItems().insert({\n    list_id: listId,\n    name: name,\n    owner_fb_id: ownerFbId,\n  }, 'id')\n    .then((listsItemId) => get(listsItemId));\n\n/**\n * update - Update a ListsItem with the given values.\n * @param   {Number} options.id - The ID of the ListsItem to update.\n * @param   {String} options.name - The updated name of the ListsItem.\n * @param   {Number} options.completerFbId - FB ID of the Completer\n * @returns {Object} listsItem - the updated ListsItem.\n */\nexport const update = ({id, name, completerFbId}) =>\n  ListsItems().where('id', parseInt(id, 10)).update({\n    completer_fb_id: completerFbId,\n    name,\n  }, 'id').then((listsItemId) => get(listsItemId));\n\nexport default {create, get, update};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets/user-socket.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets/user-socket.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets/user-socket.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets/user-socket.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets",
        "sourceFileName": "user-socket.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _lists = _interopRequireDefault(require(\"../models/lists\"));\n\nvar _users = _interopRequireDefault(require(\"../models/users\"));\n\nvar _user = _interopRequireDefault(require(\"../messenger-api-helpers/user\"));\n\nvar _send = _interopRequireDefault(require(\"../messenger-api-helpers/send\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n// Find or Create a new/existing User with the given id.\nvar getUser = function getUser(senderId) {\n  return _users[\"default\"].findOrCreate({\n    fb_id: senderId // eslint-disable-line camelcase\n\n  });\n}; // Promise wrapper for Facebook UserApi.\n\n\nvar getUserDetails = function getUserDetails(senderId) {\n  return new Promise(function (resolve, reject) {\n    _user[\"default\"].getDetails(senderId, function (err, _ref, body) {\n      var statusCode = _ref.statusCode;\n\n      if (err) {\n        return reject(err);\n      } else if (statusCode !== 200) {\n        return reject({\n          statusCode: statusCode,\n          message: 'Unable to fetch user data for user',\n          senderId: senderId\n        });\n      }\n\n      return resolve({\n        name: body.first_name || body.last_name || senderId,\n        profilePic: body.profile_pic,\n        fbId: senderId\n      });\n    });\n  });\n};\n\nvar getFacebookProfileInfoForUsers = function getFacebookProfileInfoForUsers() {\n  var users = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var listId = arguments.length > 1 ? arguments[1] : undefined;\n  var socketUsers = arguments.length > 2 ? arguments[2] : undefined;\n  return Promise.all(users.map(function (user) {\n    return getUserDetails(user.fbId);\n  })).then(function (res) {\n    return res.map(function () {\n      var resUser = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      // Detect online status via socketUser with matching list & FB IDs.\n      var isOnline = _toConsumableArray(socketUsers.values()).find(function (socketUser) {\n        return socketUser.listId === listId && socketUser.userId === resUser.fbId;\n      });\n\n      return Object.assign({}, resUser, {\n        online: !!isOnline || false\n      });\n    });\n  });\n}; // Join Room, Update Necessary List Info, Notify All Users in room of changes.\n\n\nvar join = function join(_ref2) {\n  var _ref2$request = _ref2.request,\n      senderId = _ref2$request.senderId,\n      listId = _ref2$request.listId,\n      allInRoom = _ref2.allInRoom,\n      sendStatus = _ref2.sendStatus,\n      socket = _ref2.socket,\n      socketUsers = _ref2.socketUsers,\n      userSocket = _ref2.userSocket;\n  Promise.all([_lists[\"default\"].get(listId), _lists[\"default\"].getAllItems(listId), _lists[\"default\"].getOwner(listId), getUser(senderId)]).then(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 4),\n        list = _ref4[0],\n        items = _ref4[1],\n        listOwner = _ref4[2],\n        user = _ref4[3];\n\n    if (!list) {\n      console.error(\"List doesn't exist!\");\n      sendStatus('noList');\n    }\n\n    _lists[\"default\"].addUser(list.id, user.fbId).then(function (usersList) {\n      if (!listOwner) {\n        _send[\"default\"].sendListCreated(user.fbId, list.id, list.title);\n\n        allInRoom(list.id).emit('list:setOwnerId', usersList.userFbId);\n      }\n    }).then(function () {\n      socketUsers.set(socket.id, {\n        listId: list.id,\n        userId: user.fbId\n      });\n\n      _lists[\"default\"].getAllUsers(listId).then(function (users) {\n        return getFacebookProfileInfoForUsers(users, listId, socketUsers);\n      }).then(function (fbUsers) {\n        var viewerUser = fbUsers.find(function (fbUser) {\n          return fbUser.fbId === user.fbId;\n        });\n        socket.join(list.id);\n        socket[\"in\"](list.id).emit('user:join', viewerUser);\n        userSocket.emit('init', _objectSpread({}, list, {\n          items: items,\n          users: fbUsers,\n          ownerId: listOwner ? listOwner.fbId : user.fbId\n        }));\n        sendStatus('ok');\n      });\n    });\n  });\n}; // Notify users in room when user leaves.\n\n\nvar leave = function leave(_ref5) {\n  var userId = _ref5.userId,\n      listId = _ref5.listId,\n      allInRoom = _ref5.allInRoom,\n      socket = _ref5.socket,\n      socketUsers = _ref5.socketUsers;\n\n  if (!userId) {\n    console.error('User not registered to socket');\n    return;\n  }\n\n  socketUsers[\"delete\"](socket.id); // Detect online status via socketUser with matching list & FB IDs.\n\n  var onlineUsers = _toConsumableArray(socketUsers.values()).reduce(function (onlineUsers, socketUser) {\n    return socketUser.listId === listId ? [].concat(_toConsumableArray(onlineUsers), [socketUser.userId]) : onlineUsers;\n  }, []);\n\n  allInRoom(listId).emit('users:setOnline', onlineUsers);\n};\n\nvar _default = {\n  join: join,\n  leave: leave\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user-socket.js"
      ],
      "names": [
        "getUser",
        "senderId",
        "Users",
        "findOrCreate",
        "fb_id",
        "getUserDetails",
        "Promise",
        "resolve",
        "reject",
        "userApi",
        "getDetails",
        "err",
        "body",
        "statusCode",
        "message",
        "name",
        "first_name",
        "last_name",
        "profilePic",
        "profile_pic",
        "fbId",
        "getFacebookProfileInfoForUsers",
        "users",
        "listId",
        "socketUsers",
        "all",
        "map",
        "user",
        "then",
        "res",
        "resUser",
        "isOnline",
        "values",
        "find",
        "socketUser",
        "userId",
        "Object",
        "assign",
        "online",
        "join",
        "request",
        "allInRoom",
        "sendStatus",
        "socket",
        "userSocket",
        "Lists",
        "get",
        "getAllItems",
        "getOwner",
        "list",
        "items",
        "listOwner",
        "console",
        "error",
        "addUser",
        "id",
        "usersList",
        "sendApi",
        "sendListCreated",
        "title",
        "emit",
        "userFbId",
        "set",
        "getAllUsers",
        "fbUsers",
        "viewerUser",
        "fbUser",
        "ownerId",
        "leave",
        "onlineUsers",
        "reduce"
      ],
      "mappings": ";;;;;;;AAQA;;AACA;;AAGA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAc;AAC5B,SAAOC,kBAAMC,YAAN,CAAmB;AACxBC,IAAAA,KAAK,EAAEH,QADiB,CACP;;AADO,GAAnB,CAAP;AAGD,CAJD,C,CAMA;;;AACA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACJ,QAAD,EAAc;AACnC,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,qBAAQC,UAAR,CAAmBT,QAAnB,EAA6B,UAACU,GAAD,QAAoBC,IAApB,EAA6B;AAAA,UAAtBC,UAAsB,QAAtBA,UAAsB;;AACxD,UAAIF,GAAJ,EAAS;AACP,eAAOH,MAAM,CAACG,GAAD,CAAb;AACD,OAFD,MAEO,IAAIE,UAAU,KAAK,GAAnB,EAAwB;AAC7B,eAAOL,MAAM,CAAC;AACZK,UAAAA,UAAU,EAAVA,UADY;AAEZC,UAAAA,OAAO,EAAE,oCAFG;AAGZb,UAAAA,QAAQ,EAARA;AAHY,SAAD,CAAb;AAKD;;AAED,aAAOM,OAAO,CAAC;AACbQ,QAAAA,IAAI,EAAEH,IAAI,CAACI,UAAL,IAAmBJ,IAAI,CAACK,SAAxB,IAAqChB,QAD9B;AAEbiB,QAAAA,UAAU,EAAEN,IAAI,CAACO,WAFJ;AAGbC,QAAAA,IAAI,EAAEnB;AAHO,OAAD,CAAd;AAKD,KAhBD;AAiBD,GAlBM,CAAP;AAmBD,CApBD;;AAsBA,IAAMoB,8BAA8B,GAAG,SAAjCA,8BAAiC;AAAA,MAACC,KAAD,uEAAS,EAAT;AAAA,MAAaC,MAAb;AAAA,MAAqBC,WAArB;AAAA,SACrClB,OAAO,CAACmB,GAAR,CAAYH,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD;AAAA,WAAUtB,cAAc,CAACsB,IAAI,CAACP,IAAN,CAAxB;AAAA,GAAV,CAAZ,EACGQ,IADH,CACQ,UAACC,GAAD;AAAA,WAASA,GAAG,CAACH,GAAJ,CAAQ,YAAkB;AAAA,UAAjBI,OAAiB,uEAAP,EAAO;;AACvC;AACA,UAAMC,QAAQ,GAAG,mBAAIP,WAAW,CAACQ,MAAZ,EAAJ,EAA0BC,IAA1B,CAA+B,UAACC,UAAD;AAAA,eAC9CA,UAAU,CAACX,MAAX,KAAsBA,MAAtB,IAAgCW,UAAU,CAACC,MAAX,KAAsBL,OAAO,CAACV,IADhB;AAAA,OAA/B,CAAjB;;AAGA,aAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,OAAlB,EAA2B;AAACQ,QAAAA,MAAM,EAAE,CAAC,CAACP,QAAF,IAAc;AAAvB,OAA3B,CAAP;AACD,KANc,CAAT;AAAA,GADR,CADqC;AAAA,CAAvC,C,CAUA;;;AACA,IAAMQ,IAAI,GAAG,SAAPA,IAAO,QAOP;AAAA,4BANJC,OAMI;AAAA,MANMvC,QAMN,iBANMA,QAMN;AAAA,MANgBsB,MAMhB,iBANgBA,MAMhB;AAAA,MALJkB,SAKI,SALJA,SAKI;AAAA,MAJJC,UAII,SAJJA,UAII;AAAA,MAHJC,MAGI,SAHJA,MAGI;AAAA,MAFJnB,WAEI,SAFJA,WAEI;AAAA,MADJoB,UACI,SADJA,UACI;AACJtC,EAAAA,OAAO,CAACmB,GAAR,CAAY,CACVoB,kBAAMC,GAAN,CAAUvB,MAAV,CADU,EAEVsB,kBAAME,WAAN,CAAkBxB,MAAlB,CAFU,EAGVsB,kBAAMG,QAAN,CAAezB,MAAf,CAHU,EAIVvB,OAAO,CAACC,QAAD,CAJG,CAAZ,EAKG2B,IALH,CAKQ,iBAAoC;AAAA;AAAA,QAAlCqB,IAAkC;AAAA,QAA5BC,KAA4B;AAAA,QAArBC,SAAqB;AAAA,QAAVxB,IAAU;;AAC1C,QAAI,CAACsB,IAAL,EAAW;AACTG,MAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd;AACAX,MAAAA,UAAU,CAAC,QAAD,CAAV;AACD;;AAEDG,sBAAMS,OAAN,CAAcL,IAAI,CAACM,EAAnB,EAAuB5B,IAAI,CAACP,IAA5B,EACGQ,IADH,CACQ,UAAC4B,SAAD,EAAe;AACnB,UAAI,CAACL,SAAL,EAAgB;AACdM,yBAAQC,eAAR,CAAwB/B,IAAI,CAACP,IAA7B,EAAmC6B,IAAI,CAACM,EAAxC,EAA4CN,IAAI,CAACU,KAAjD;;AACAlB,QAAAA,SAAS,CAACQ,IAAI,CAACM,EAAN,CAAT,CAAmBK,IAAnB,CAAwB,iBAAxB,EAA2CJ,SAAS,CAACK,QAArD;AACD;AACF,KANH,EAOGjC,IAPH,CAOQ,YAAM;AACVJ,MAAAA,WAAW,CAACsC,GAAZ,CAAgBnB,MAAM,CAACY,EAAvB,EAA2B;AAAChC,QAAAA,MAAM,EAAE0B,IAAI,CAACM,EAAd;AAAkBpB,QAAAA,MAAM,EAAER,IAAI,CAACP;AAA/B,OAA3B;;AAEAyB,wBAAMkB,WAAN,CAAkBxC,MAAlB,EACGK,IADH,CACQ,UAACN,KAAD,EAAW;AACf,eAAOD,8BAA8B,CAACC,KAAD,EAAQC,MAAR,EAAgBC,WAAhB,CAArC;AACD,OAHH,EAIGI,IAJH,CAIQ,UAACoC,OAAD,EAAa;AACjB,YAAMC,UAAU,GACdD,OAAO,CAAC/B,IAAR,CAAa,UAACiC,MAAD;AAAA,iBAAYA,MAAM,CAAC9C,IAAP,KAAgBO,IAAI,CAACP,IAAjC;AAAA,SAAb,CADF;AAEAuB,QAAAA,MAAM,CAACJ,IAAP,CAAYU,IAAI,CAACM,EAAjB;AACAZ,QAAAA,MAAM,MAAN,CAAUM,IAAI,CAACM,EAAf,EAAmBK,IAAnB,CAAwB,WAAxB,EAAqCK,UAArC;AAEArB,QAAAA,UAAU,CAACgB,IAAX,CAAgB,MAAhB,oBACKX,IADL;AAEEC,UAAAA,KAAK,EAALA,KAFF;AAGE5B,UAAAA,KAAK,EAAE0C,OAHT;AAIEG,UAAAA,OAAO,EAAEhB,SAAS,GAAGA,SAAS,CAAC/B,IAAb,GAAoBO,IAAI,CAACP;AAJ7C;AAOAsB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAlBH;AAmBD,KA7BH;AA8BD,GAzCD;AA0CD,CAlDD,C,CAoDA;;;AACA,IAAM0B,KAAK,GAAG,SAARA,KAAQ,QAAsD;AAAA,MAApDjC,MAAoD,SAApDA,MAAoD;AAAA,MAA5CZ,MAA4C,SAA5CA,MAA4C;AAAA,MAApCkB,SAAoC,SAApCA,SAAoC;AAAA,MAAzBE,MAAyB,SAAzBA,MAAyB;AAAA,MAAjBnB,WAAiB,SAAjBA,WAAiB;;AAClE,MAAI,CAACW,MAAL,EAAa;AACXiB,IAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd;AACA;AACD;;AAED7B,EAAAA,WAAW,UAAX,CAAmBmB,MAAM,CAACY,EAA1B,EANkE,CAQlE;;AACA,MAAMc,WAAW,GACf,mBAAI7C,WAAW,CAACQ,MAAZ,EAAJ,EAA0BsC,MAA1B,CAAiC,UAACD,WAAD,EAAcnC,UAAd;AAAA,WAC9BA,UAAU,CAACX,MAAX,KAAsBA,MAAvB,gCACQ8C,WADR,IACqBnC,UAAU,CAACC,MADhC,KAEIkC,WAH2B;AAAA,GAAjC,EAIC,EAJD,CADF;;AAOA5B,EAAAA,SAAS,CAAClB,MAAD,CAAT,CAAkBqC,IAAlB,CAAuB,iBAAvB,EAA0CS,WAA1C;AACD,CAjBD;;eAmBe;AAAC9B,EAAAA,IAAI,EAAJA,IAAD;AAAO6B,EAAAA,KAAK,EAALA;AAAP,C",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/sockets",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== DB ====================================================================\nimport Lists from '../models/lists';\nimport Users from '../models/users';\n\n// ===== MESSENGER =============================================================\nimport userApi from '../messenger-api-helpers/user';\nimport sendApi from '../messenger-api-helpers/send';\n\n// Find or Create a new/existing User with the given id.\nconst getUser = (senderId) => {\n  return Users.findOrCreate({\n    fb_id: senderId, // eslint-disable-line camelcase\n  });\n};\n\n// Promise wrapper for Facebook UserApi.\nconst getUserDetails = (senderId) => {\n  return new Promise((resolve, reject) => {\n    userApi.getDetails(senderId, (err, {statusCode}, body) => {\n      if (err) {\n        return reject(err);\n      } else if (statusCode !== 200) {\n        return reject({\n          statusCode,\n          message: 'Unable to fetch user data for user',\n          senderId,\n        });\n      }\n\n      return resolve({\n        name: body.first_name || body.last_name || senderId,\n        profilePic: body.profile_pic,\n        fbId: senderId,\n      });\n    });\n  });\n};\n\nconst getFacebookProfileInfoForUsers = (users = [], listId, socketUsers) =>\n  Promise.all(users.map((user) => getUserDetails(user.fbId)))\n    .then((res) => res.map((resUser = {}) => {\n      // Detect online status via socketUser with matching list & FB IDs.\n      const isOnline = [...socketUsers.values()].find((socketUser) =>\n        socketUser.listId === listId && socketUser.userId === resUser.fbId);\n\n      return Object.assign({}, resUser, {online: !!isOnline || false});\n    }));\n\n// Join Room, Update Necessary List Info, Notify All Users in room of changes.\nconst join = ({\n  request: {senderId, listId},\n  allInRoom,\n  sendStatus,\n  socket,\n  socketUsers,\n  userSocket,\n}) => {\n  Promise.all([\n    Lists.get(listId),\n    Lists.getAllItems(listId),\n    Lists.getOwner(listId),\n    getUser(senderId),\n  ]).then(([list, items, listOwner, user]) => {\n    if (!list) {\n      console.error(\"List doesn't exist!\");\n      sendStatus('noList');\n    }\n\n    Lists.addUser(list.id, user.fbId)\n      .then((usersList) => {\n        if (!listOwner) {\n          sendApi.sendListCreated(user.fbId, list.id, list.title);\n          allInRoom(list.id).emit('list:setOwnerId', usersList.userFbId);\n        }\n      })\n      .then(() => {\n        socketUsers.set(socket.id, {listId: list.id, userId: user.fbId});\n\n        Lists.getAllUsers(listId)\n          .then((users) => {\n            return getFacebookProfileInfoForUsers(users, listId, socketUsers);\n          })\n          .then((fbUsers) => {\n            const viewerUser =\n              fbUsers.find((fbUser) => fbUser.fbId === user.fbId);\n            socket.join(list.id);\n            socket.in(list.id).emit('user:join', viewerUser);\n\n            userSocket.emit('init', {\n              ...list,\n              items,\n              users: fbUsers,\n              ownerId: listOwner ? listOwner.fbId : user.fbId,\n            });\n\n            sendStatus('ok');\n          });\n      });\n  });\n};\n\n// Notify users in room when user leaves.\nconst leave = ({userId, listId, allInRoom, socket, socketUsers}) => {\n  if (!userId) {\n    console.error('User not registered to socket');\n    return;\n  }\n\n  socketUsers.delete(socket.id);\n\n  // Detect online status via socketUser with matching list & FB IDs.\n  const onlineUsers =\n    [...socketUsers.values()].reduce((onlineUsers, socketUser) => (\n      (socketUser.listId === listId)\n        ? [...onlineUsers, socketUser.userId]\n        : onlineUsers\n  ), []);\n\n  allInRoom(listId).emit('users:setOnline', onlineUsers);\n};\n\nexport default {join, leave};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/users.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.get = exports.findOrCreate = void 0;\n\nvar _knex = _interopRequireDefault(require(\"../db/knex\"));\n\nvar _util = require(\"./util\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// ===== DB ====================================================================\n// ===== UTIL ==================================================================\nvar Users = function Users() {\n  return (0, _knex[\"default\"])('users');\n};\n/**\n * findOrCreate - Finds or Creates a new User, and returns that user.\n * @param   {Object} user - The user to find or create.\n * @returns {Object} user - The created user.\n */\n\n\nvar findOrCreate = function findOrCreate() {\n  var user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Users().where('fb_id', parseInt(user.fb_id, 10)).first().then(function (foundUsers) {\n    if (!foundUsers) {\n      return Users().insert(user, 'fb_id');\n    }\n\n    return Users().where('fb_id', parseInt(user.fb_id, 10)).update(user, 'fb_id');\n  }).then(function (userFbId) {\n    return Users().where('fb_id', parseInt(userFbId, 10)).first().then(_util.camelCaseKeys);\n  });\n};\n/**\n * get - Gets a User object from the database.\n * @param   {userFbId} userFbId - the FB ID to find a User by.\n * @returns {Object} user - The found user.\n */\n\n\nexports.findOrCreate = findOrCreate;\n\nvar get = function get(userFbId) {\n  return Users().where('fb_id', parseInt(userFbId, 10)).first().then(_util.camelCaseKeys);\n};\n\nexports.get = get;\nvar _default = {\n  findOrCreate: findOrCreate,\n  get: get\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbIlVzZXJzIiwiZmluZE9yQ3JlYXRlIiwidXNlciIsIndoZXJlIiwicGFyc2VJbnQiLCJmYl9pZCIsImZpcnN0IiwidGhlbiIsImZvdW5kVXNlcnMiLCJpbnNlcnQiLCJ1cGRhdGUiLCJ1c2VyRmJJZCIsImNhbWVsQ2FzZUtleXMiLCJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFRQTs7QUFHQTs7OztBQVhBOzs7Ozs7QUFPQTtBQUdBO0FBR0EsSUFBTUEsS0FBSyxHQUFHLFNBQVJBLEtBQVE7QUFBQSxTQUFNLHNCQUFLLE9BQUwsQ0FBTjtBQUFBLENBQWQ7QUFFQTs7Ozs7OztBQUtPLElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFlLEdBQWU7QUFBQSxNQUFkQyxJQUFjLHVFQUFQLEVBQU87QUFDekMsU0FBT0YsS0FBSyxHQUNURyxLQURJLENBQ0UsT0FERixFQUNXQyxRQUFRLENBQUNGLElBQUksQ0FBQ0csS0FBTixFQUFhLEVBQWIsQ0FEbkIsRUFFSkMsS0FGSSxHQUdKQyxJQUhJLENBR0MsVUFBQ0MsVUFBRCxFQUFnQjtBQUNwQixRQUFJLENBQUNBLFVBQUwsRUFBaUI7QUFDZixhQUFPUixLQUFLLEdBQUdTLE1BQVIsQ0FBZVAsSUFBZixFQUFxQixPQUFyQixDQUFQO0FBQ0Q7O0FBQ0QsV0FBT0YsS0FBSyxHQUNURyxLQURJLENBQ0UsT0FERixFQUNXQyxRQUFRLENBQUNGLElBQUksQ0FBQ0csS0FBTixFQUFhLEVBQWIsQ0FEbkIsRUFFSkssTUFGSSxDQUVHUixJQUZILEVBRVMsT0FGVCxDQUFQO0FBR0QsR0FWSSxFQVdKSyxJQVhJLENBV0MsVUFBQ0ksUUFBRCxFQUFjO0FBQ2xCLFdBQU9YLEtBQUssR0FDVEcsS0FESSxDQUNFLE9BREYsRUFDV0MsUUFBUSxDQUFDTyxRQUFELEVBQVcsRUFBWCxDQURuQixFQUVKTCxLQUZJLEdBR0pDLElBSEksQ0FHQ0ssbUJBSEQsQ0FBUDtBQUlELEdBaEJJLENBQVA7QUFpQkQsQ0FsQk07QUFvQlA7Ozs7Ozs7OztBQUtPLElBQU1DLEdBQUcsR0FBRyxTQUFOQSxHQUFNLENBQUNGLFFBQUQ7QUFBQSxTQUNqQlgsS0FBSyxHQUNGRyxLQURILENBQ1MsT0FEVCxFQUNrQkMsUUFBUSxDQUFDTyxRQUFELEVBQVcsRUFBWCxDQUQxQixFQUVHTCxLQUZILEdBR0dDLElBSEgsQ0FHUUssbUJBSFIsQ0FEaUI7QUFBQSxDQUFaOzs7ZUFNUTtBQUFDWCxFQUFBQSxZQUFZLEVBQVpBLFlBQUQ7QUFBZVksRUFBQUEsR0FBRyxFQUFIQTtBQUFmLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2RlZXBpa2EvRG9jdW1lbnRzL0dpdEh1Yi9mYWNlYm9va0hhY2thdGhvbi9jaGF0LWV4dGVuc2lvbnMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLy8gPT09PT0gREIgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmltcG9ydCBLbmV4ICBmcm9tICcuLi9kYi9rbmV4JztcblxuLy8gPT09PT0gVVRJTCA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmltcG9ydCB7Y2FtZWxDYXNlS2V5c30gZnJvbSAnLi91dGlsJztcblxuY29uc3QgVXNlcnMgPSAoKSA9PiBLbmV4KCd1c2VycycpO1xuXG4vKipcbiAqIGZpbmRPckNyZWF0ZSAtIEZpbmRzIG9yIENyZWF0ZXMgYSBuZXcgVXNlciwgYW5kIHJldHVybnMgdGhhdCB1c2VyLlxuICogQHBhcmFtICAge09iamVjdH0gdXNlciAtIFRoZSB1c2VyIHRvIGZpbmQgb3IgY3JlYXRlLlxuICogQHJldHVybnMge09iamVjdH0gdXNlciAtIFRoZSBjcmVhdGVkIHVzZXIuXG4gKi9cbmV4cG9ydCBjb25zdCBmaW5kT3JDcmVhdGUgPSAodXNlciA9IHt9KSA9PiB7XG4gIHJldHVybiBVc2VycygpXG4gICAgLndoZXJlKCdmYl9pZCcsIHBhcnNlSW50KHVzZXIuZmJfaWQsIDEwKSlcbiAgICAuZmlyc3QoKVxuICAgIC50aGVuKChmb3VuZFVzZXJzKSA9PiB7XG4gICAgICBpZiAoIWZvdW5kVXNlcnMpIHtcbiAgICAgICAgcmV0dXJuIFVzZXJzKCkuaW5zZXJ0KHVzZXIsICdmYl9pZCcpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFVzZXJzKClcbiAgICAgICAgLndoZXJlKCdmYl9pZCcsIHBhcnNlSW50KHVzZXIuZmJfaWQsIDEwKSlcbiAgICAgICAgLnVwZGF0ZSh1c2VyLCAnZmJfaWQnKTtcbiAgICB9KVxuICAgIC50aGVuKCh1c2VyRmJJZCkgPT4ge1xuICAgICAgcmV0dXJuIFVzZXJzKClcbiAgICAgICAgLndoZXJlKCdmYl9pZCcsIHBhcnNlSW50KHVzZXJGYklkLCAxMCkpXG4gICAgICAgIC5maXJzdCgpXG4gICAgICAgIC50aGVuKGNhbWVsQ2FzZUtleXMpO1xuICAgIH0pO1xufTtcblxuLyoqXG4gKiBnZXQgLSBHZXRzIGEgVXNlciBvYmplY3QgZnJvbSB0aGUgZGF0YWJhc2UuXG4gKiBAcGFyYW0gICB7dXNlckZiSWR9IHVzZXJGYklkIC0gdGhlIEZCIElEIHRvIGZpbmQgYSBVc2VyIGJ5LlxuICogQHJldHVybnMge09iamVjdH0gdXNlciAtIFRoZSBmb3VuZCB1c2VyLlxuICovXG5leHBvcnQgY29uc3QgZ2V0ID0gKHVzZXJGYklkKSA9PlxuICBVc2VycygpXG4gICAgLndoZXJlKCdmYl9pZCcsIHBhcnNlSW50KHVzZXJGYklkLCAxMCkpXG4gICAgLmZpcnN0KClcbiAgICAudGhlbihjYW1lbENhc2VLZXlzKTtcblxuZXhwb3J0IGRlZmF1bHQge2ZpbmRPckNyZWF0ZSwgZ2V0fTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "Users",
        "findOrCreate",
        "user",
        "where",
        "parseInt",
        "fb_id",
        "first",
        "then",
        "foundUsers",
        "insert",
        "update",
        "userFbId",
        "camelCaseKeys",
        "get"
      ],
      "mappings": ";;;;;;;AAQA;;AAGA;;;;AAXA;;;;;;AAOA;AAGA;AAGA,IAAMA,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,sBAAK,OAAL,CAAN;AAAA,CAAd;AAEA;;;;;;;AAKO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAe;AAAA,MAAdC,IAAc,uEAAP,EAAO;AACzC,SAAOF,KAAK,GACTG,KADI,CACE,OADF,EACWC,QAAQ,CAACF,IAAI,CAACG,KAAN,EAAa,EAAb,CADnB,EAEJC,KAFI,GAGJC,IAHI,CAGC,UAACC,UAAD,EAAgB;AACpB,QAAI,CAACA,UAAL,EAAiB;AACf,aAAOR,KAAK,GAAGS,MAAR,CAAeP,IAAf,EAAqB,OAArB,CAAP;AACD;;AACD,WAAOF,KAAK,GACTG,KADI,CACE,OADF,EACWC,QAAQ,CAACF,IAAI,CAACG,KAAN,EAAa,EAAb,CADnB,EAEJK,MAFI,CAEGR,IAFH,EAES,OAFT,CAAP;AAGD,GAVI,EAWJK,IAXI,CAWC,UAACI,QAAD,EAAc;AAClB,WAAOX,KAAK,GACTG,KADI,CACE,OADF,EACWC,QAAQ,CAACO,QAAD,EAAW,EAAX,CADnB,EAEJL,KAFI,GAGJC,IAHI,CAGCK,mBAHD,CAAP;AAID,GAhBI,CAAP;AAiBD,CAlBM;AAoBP;;;;;;;;;AAKO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACF,QAAD;AAAA,SACjBX,KAAK,GACFG,KADH,CACS,OADT,EACkBC,QAAQ,CAACO,QAAD,EAAW,EAAX,CAD1B,EAEGL,KAFH,GAGGC,IAHH,CAGQK,mBAHR,CADiB;AAAA,CAAZ;;;eAMQ;AAACX,EAAAA,YAAY,EAAZA,YAAD;AAAeY,EAAAA,GAAG,EAAHA;AAAf,C",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/models",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// ===== DB ====================================================================\nimport Knex  from '../db/knex';\n\n// ===== UTIL ==================================================================\nimport {camelCaseKeys} from './util';\n\nconst Users = () => Knex('users');\n\n/**\n * findOrCreate - Finds or Creates a new User, and returns that user.\n * @param   {Object} user - The user to find or create.\n * @returns {Object} user - The created user.\n */\nexport const findOrCreate = (user = {}) => {\n  return Users()\n    .where('fb_id', parseInt(user.fb_id, 10))\n    .first()\n    .then((foundUsers) => {\n      if (!foundUsers) {\n        return Users().insert(user, 'fb_id');\n      }\n      return Users()\n        .where('fb_id', parseInt(user.fb_id, 10))\n        .update(user, 'fb_id');\n    })\n    .then((userFbId) => {\n      return Users()\n        .where('fb_id', parseInt(userFbId, 10))\n        .first()\n        .then(camelCaseKeys);\n    });\n};\n\n/**\n * get - Gets a User object from the database.\n * @param   {userFbId} userFbId - the FB ID to find a User by.\n * @returns {Object} user - The found user.\n */\nexport const get = (userFbId) =>\n  Users()\n    .where('fb_id', parseInt(userFbId, 10))\n    .first()\n    .then(camelCaseKeys);\n\nexport default {findOrCreate, get};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  },
  "{\"sourceRoot\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"filename\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/user.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "jsx",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _request = _interopRequireDefault(require(\"request\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable camelcase */\n// ===== MODULES ===============================================================\nvar fakeUsers = [{\n  fb_id: '1',\n  first_name: 'Ludwig',\n  profile_pic: 'http://uago.at/-xu6k/sgim.jpg'\n}, {\n  fb_id: '2',\n  first_name: 'Wolfgang',\n  profile_pic: 'http://uago.at/-wmjk/sgim.jpg'\n}, {\n  fb_id: '3',\n  first_name: 'Gabriel',\n  profile_pic: 'http://uago.at/-eRAu/sgim.jpg'\n}, {\n  fb_id: '4',\n  first_name: 'Giuseppe',\n  profile_pic: 'http://uago.at/-Pcyd/sgim.jpg'\n}];\n\nvar fakeGetDetails = function fakeGetDetails(userId, callback) {\n  console.log('DEMO DETAILS');\n  var user = fakeUsers.find(function (fakeUser) {\n    return fakeUser.fb_id === userId;\n  });\n  callback(null, {\n    statusCode: 200,\n    ok: true\n  }, user);\n};\n\nvar getDetailsFromFacebook = function getDetailsFromFacebook(userId, callback) {\n  (0, _request[\"default\"])({\n    method: 'GET',\n    url: \"https://graph.facebook.com/v3.2/\".concat(userId),\n    json: true,\n    qs: {\n      access_token: process.env.PAGE_ACCESS_TOKEN,\n      // facebook requires the qs in the format\n      // fields=a,b,c not fields=[a,b,c]\n      fields: 'first_name,last_name,profile_pic'\n    }\n  }, callback);\n};\n\nvar _default = {\n  getDetails: process.env.DEMO ? fakeGetDetails : getDetailsFromFacebook\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiZmFrZVVzZXJzIiwiZmJfaWQiLCJmaXJzdF9uYW1lIiwicHJvZmlsZV9waWMiLCJmYWtlR2V0RGV0YWlscyIsInVzZXJJZCIsImNhbGxiYWNrIiwiY29uc29sZSIsImxvZyIsInVzZXIiLCJmaW5kIiwiZmFrZVVzZXIiLCJzdGF0dXNDb2RlIiwib2siLCJnZXREZXRhaWxzRnJvbUZhY2Vib29rIiwibWV0aG9kIiwidXJsIiwianNvbiIsInFzIiwiYWNjZXNzX3Rva2VuIiwicHJvY2VzcyIsImVudiIsIlBBR0VfQUNDRVNTX1RPS0VOIiwiZmllbGRzIiwiZ2V0RGV0YWlscyIsIkRFTU8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFVQTs7OztBQVZBOzs7Ozs7O0FBT0E7QUFFQTtBQUdBLElBQU1BLFNBQVMsR0FBRyxDQUFDO0FBQ2pCQyxFQUFBQSxLQUFLLEVBQUUsR0FEVTtBQUVqQkMsRUFBQUEsVUFBVSxFQUFFLFFBRks7QUFHakJDLEVBQUFBLFdBQVcsRUFBRTtBQUhJLENBQUQsRUFJZjtBQUNERixFQUFBQSxLQUFLLEVBQUUsR0FETjtBQUVEQyxFQUFBQSxVQUFVLEVBQUUsVUFGWDtBQUdEQyxFQUFBQSxXQUFXLEVBQUU7QUFIWixDQUplLEVBUWY7QUFDREYsRUFBQUEsS0FBSyxFQUFFLEdBRE47QUFFREMsRUFBQUEsVUFBVSxFQUFFLFNBRlg7QUFHREMsRUFBQUEsV0FBVyxFQUFFO0FBSFosQ0FSZSxFQVlmO0FBQ0RGLEVBQUFBLEtBQUssRUFBRSxHQUROO0FBRURDLEVBQUFBLFVBQVUsRUFBRSxVQUZYO0FBR0RDLEVBQUFBLFdBQVcsRUFBRTtBQUhaLENBWmUsQ0FBbEI7O0FBa0JBLElBQU1DLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsQ0FBQ0MsTUFBRCxFQUFTQyxRQUFULEVBQXNCO0FBQzNDQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFaO0FBQ0EsTUFBTUMsSUFBSSxHQUFHVCxTQUFTLENBQUNVLElBQVYsQ0FBZSxVQUFDQyxRQUFEO0FBQUEsV0FBY0EsUUFBUSxDQUFDVixLQUFULEtBQW1CSSxNQUFqQztBQUFBLEdBQWYsQ0FBYjtBQUNBQyxFQUFBQSxRQUFRLENBQ04sSUFETSxFQUVOO0FBQ0VNLElBQUFBLFVBQVUsRUFBRSxHQURkO0FBRUVDLElBQUFBLEVBQUUsRUFBRTtBQUZOLEdBRk0sRUFNTkosSUFOTSxDQUFSO0FBUUQsQ0FYRDs7QUFhQSxJQUFNSyxzQkFBc0IsR0FBRyxTQUF6QkEsc0JBQXlCLENBQUNULE1BQUQsRUFBU0MsUUFBVCxFQUFzQjtBQUNuRCwyQkFDRTtBQUNFUyxJQUFBQSxNQUFNLEVBQUUsS0FEVjtBQUVFQyxJQUFBQSxHQUFHLDRDQUFxQ1gsTUFBckMsQ0FGTDtBQUdFWSxJQUFBQSxJQUFJLEVBQUUsSUFIUjtBQUlFQyxJQUFBQSxFQUFFLEVBQUU7QUFDRkMsTUFBQUEsWUFBWSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsaUJBRHhCO0FBRUY7QUFDQTtBQUNBQyxNQUFBQSxNQUFNLEVBQUU7QUFKTjtBQUpOLEdBREYsRUFZRWpCLFFBWkY7QUFjRCxDQWZEOztlQWlCZTtBQUNia0IsRUFBQUEsVUFBVSxFQUFFSixPQUFPLENBQUNDLEdBQVIsQ0FBWUksSUFBWixHQUFtQnJCLGNBQW5CLEdBQW9DVTtBQURuQyxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kZWVwaWthL0RvY3VtZW50cy9HaXRIdWIvZmFjZWJvb2tIYWNrYXRob24vY2hhdC1leHRlbnNpb25zL21lc3Nlbmdlci1hcGktaGVscGVycyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqL1xuXG4vLyA9PT09PSBNT0RVTEVTID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuaW1wb3J0IHJlcXVlc3QgZnJvbSAncmVxdWVzdCc7XG5cbmNvbnN0IGZha2VVc2VycyA9IFt7XG4gIGZiX2lkOiAnMScsXG4gIGZpcnN0X25hbWU6ICdMdWR3aWcnLFxuICBwcm9maWxlX3BpYzogJ2h0dHA6Ly91YWdvLmF0Ly14dTZrL3NnaW0uanBnJyxcbn0sIHtcbiAgZmJfaWQ6ICcyJyxcbiAgZmlyc3RfbmFtZTogJ1dvbGZnYW5nJyxcbiAgcHJvZmlsZV9waWM6ICdodHRwOi8vdWFnby5hdC8td21qay9zZ2ltLmpwZycsXG59LCB7XG4gIGZiX2lkOiAnMycsXG4gIGZpcnN0X25hbWU6ICdHYWJyaWVsJyxcbiAgcHJvZmlsZV9waWM6ICdodHRwOi8vdWFnby5hdC8tZVJBdS9zZ2ltLmpwZycsXG59LCB7XG4gIGZiX2lkOiAnNCcsXG4gIGZpcnN0X25hbWU6ICdHaXVzZXBwZScsXG4gIHByb2ZpbGVfcGljOiAnaHR0cDovL3VhZ28uYXQvLVBjeWQvc2dpbS5qcGcnLFxufV07XG5cbmNvbnN0IGZha2VHZXREZXRhaWxzID0gKHVzZXJJZCwgY2FsbGJhY2spID0+IHtcbiAgY29uc29sZS5sb2coJ0RFTU8gREVUQUlMUycpO1xuICBjb25zdCB1c2VyID0gZmFrZVVzZXJzLmZpbmQoKGZha2VVc2VyKSA9PiBmYWtlVXNlci5mYl9pZCA9PT0gdXNlcklkKTtcbiAgY2FsbGJhY2soXG4gICAgbnVsbCxcbiAgICB7XG4gICAgICBzdGF0dXNDb2RlOiAyMDAsXG4gICAgICBvazogdHJ1ZSxcbiAgICB9LFxuICAgIHVzZXJcbiAgKTtcbn07XG5cbmNvbnN0IGdldERldGFpbHNGcm9tRmFjZWJvb2sgPSAodXNlcklkLCBjYWxsYmFjaykgPT4ge1xuICByZXF1ZXN0KFxuICAgIHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICB1cmw6IGBodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92My4yLyR7dXNlcklkfWAsXG4gICAgICBqc29uOiB0cnVlLFxuICAgICAgcXM6IHtcbiAgICAgICAgYWNjZXNzX3Rva2VuOiBwcm9jZXNzLmVudi5QQUdFX0FDQ0VTU19UT0tFTixcbiAgICAgICAgLy8gZmFjZWJvb2sgcmVxdWlyZXMgdGhlIHFzIGluIHRoZSBmb3JtYXRcbiAgICAgICAgLy8gZmllbGRzPWEsYixjIG5vdCBmaWVsZHM9W2EsYixjXVxuICAgICAgICBmaWVsZHM6ICdmaXJzdF9uYW1lLGxhc3RfbmFtZSxwcm9maWxlX3BpYycsXG4gICAgICB9LFxuICAgIH0sXG4gICAgY2FsbGJhY2tcbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZ2V0RGV0YWlsczogcHJvY2Vzcy5lbnYuREVNTyA/IGZha2VHZXREZXRhaWxzIDogZ2V0RGV0YWlsc0Zyb21GYWNlYm9vayxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "fakeUsers",
        "fb_id",
        "first_name",
        "profile_pic",
        "fakeGetDetails",
        "userId",
        "callback",
        "console",
        "log",
        "user",
        "find",
        "fakeUser",
        "statusCode",
        "ok",
        "getDetailsFromFacebook",
        "method",
        "url",
        "json",
        "qs",
        "access_token",
        "process",
        "env",
        "PAGE_ACCESS_TOKEN",
        "fields",
        "getDetails",
        "DEMO"
      ],
      "mappings": ";;;;;;;AAUA;;;;AAVA;;;;;;;AAOA;AAEA;AAGA,IAAMA,SAAS,GAAG,CAAC;AACjBC,EAAAA,KAAK,EAAE,GADU;AAEjBC,EAAAA,UAAU,EAAE,QAFK;AAGjBC,EAAAA,WAAW,EAAE;AAHI,CAAD,EAIf;AACDF,EAAAA,KAAK,EAAE,GADN;AAEDC,EAAAA,UAAU,EAAE,UAFX;AAGDC,EAAAA,WAAW,EAAE;AAHZ,CAJe,EAQf;AACDF,EAAAA,KAAK,EAAE,GADN;AAEDC,EAAAA,UAAU,EAAE,SAFX;AAGDC,EAAAA,WAAW,EAAE;AAHZ,CARe,EAYf;AACDF,EAAAA,KAAK,EAAE,GADN;AAEDC,EAAAA,UAAU,EAAE,UAFX;AAGDC,EAAAA,WAAW,EAAE;AAHZ,CAZe,CAAlB;;AAkBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAASC,QAAT,EAAsB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,MAAMC,IAAI,GAAGT,SAAS,CAACU,IAAV,CAAe,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACV,KAAT,KAAmBI,MAAjC;AAAA,GAAf,CAAb;AACAC,EAAAA,QAAQ,CACN,IADM,EAEN;AACEM,IAAAA,UAAU,EAAE,GADd;AAEEC,IAAAA,EAAE,EAAE;AAFN,GAFM,EAMNJ,IANM,CAAR;AAQD,CAXD;;AAaA,IAAMK,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACT,MAAD,EAASC,QAAT,EAAsB;AACnD,2BACE;AACES,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,GAAG,4CAAqCX,MAArC,CAFL;AAGEY,IAAAA,IAAI,EAAE,IAHR;AAIEC,IAAAA,EAAE,EAAE;AACFC,MAAAA,YAAY,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADxB;AAEF;AACA;AACAC,MAAAA,MAAM,EAAE;AAJN;AAJN,GADF,EAYEjB,QAZF;AAcD,CAfD;;eAiBe;AACbkB,EAAAA,UAAU,EAAEJ,OAAO,CAACC,GAAR,CAAYI,IAAZ,GAAmBrB,cAAnB,GAAoCU;AADnC,C",
      "sourceRoot": "/Users/deepika/Documents/GitHub/facebookHackathon/chat-extensions/messenger-api-helpers",
      "sourcesContent": [
        "/**\n * Copyright 2017-present, Facebook, Inc. All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable camelcase */\n\n// ===== MODULES ===============================================================\nimport request from 'request';\n\nconst fakeUsers = [{\n  fb_id: '1',\n  first_name: 'Ludwig',\n  profile_pic: 'http://uago.at/-xu6k/sgim.jpg',\n}, {\n  fb_id: '2',\n  first_name: 'Wolfgang',\n  profile_pic: 'http://uago.at/-wmjk/sgim.jpg',\n}, {\n  fb_id: '3',\n  first_name: 'Gabriel',\n  profile_pic: 'http://uago.at/-eRAu/sgim.jpg',\n}, {\n  fb_id: '4',\n  first_name: 'Giuseppe',\n  profile_pic: 'http://uago.at/-Pcyd/sgim.jpg',\n}];\n\nconst fakeGetDetails = (userId, callback) => {\n  console.log('DEMO DETAILS');\n  const user = fakeUsers.find((fakeUser) => fakeUser.fb_id === userId);\n  callback(\n    null,\n    {\n      statusCode: 200,\n      ok: true,\n    },\n    user\n  );\n};\n\nconst getDetailsFromFacebook = (userId, callback) => {\n  request(\n    {\n      method: 'GET',\n      url: `https://graph.facebook.com/v3.2/${userId}`,\n      json: true,\n      qs: {\n        access_token: process.env.PAGE_ACCESS_TOKEN,\n        // facebook requires the qs in the format\n        // fields=a,b,c not fields=[a,b,c]\n        fields: 'first_name,last_name,profile_pic',\n      },\n    },\n    callback\n  );\n};\n\nexport default {\n  getDetails: process.env.DEMO ? fakeGetDetails : getDetailsFromFacebook,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569969508000
  }
}